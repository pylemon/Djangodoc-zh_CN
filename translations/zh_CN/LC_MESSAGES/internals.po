# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# 
# Translators:
# pylemon <leeway1985@gmail.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: djangodoc-zh_CN\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-02 21:26\n"
"PO-Revision-Date: 2013-05-12 09:25+0000\n"
"Last-Translator: pylemon <leeway1985@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 9f7c6a6b6d6c41d58557eb23d19226cb
#: ../../internals/committers.txt:3
msgid "Django committers"
msgstr "Django 贡献者"

# c245da7bd9c148bca663cabe9e55cb78
#: ../../internals/committers.txt:6
msgid "The original team"
msgstr "原始开发团队"

# 1c3d93c4b6e94414b5d9ca6f610ecf96
#: ../../internals/committers.txt:8
msgid ""
"Django originally started at World Online, the Web department of the "
"`Lawrence Journal-World`_ of Lawrence, Kansas, USA."
msgstr ""

# d39d8b0c84214f0ba87aad3fccf51245
#: ../../internals/committers.txt:12
msgid ""
"Adrian is a Web developer with a background in journalism. He's known in "
"journalism circles as one of the pioneers of \"journalism via computer "
"programming\", and in technical circles as \"the guy who invented Django.\""
msgstr ""

# 1565bdad20f14fecb282ba7b052375b2
#: ../../internals/committers.txt:16
msgid ""
"He was lead developer at World Online for 2.5 years, during which time "
"Django was developed and implemented on World Online's sites. He was the "
"leader and founder of EveryBlock_, a \"news feed for your block.\" He now "
"develops for Soundslice_."
msgstr ""

# 0119ea90420f4504a0433a721182965e
#: ../../internals/committers.txt:21
msgid "Adrian lives in Chicago, USA."
msgstr ""

# 6b60100826604a91a2e41f09d79c2201
#: ../../internals/committers.txt:24
msgid ""
"Simon is a well-respected Web developer from England. He had a one-year "
"internship at World Online, during which time he and Adrian developed Django"
" from scratch. The most enthusiastic Brit you'll ever meet, he's passionate "
"about best practices in Web development and maintains a well-read `web-"
"development blog`_."
msgstr ""

# a0436a3fd84d460fb7efa169bad6e391
#: ../../internals/committers.txt:30
msgid "Simon lives in Brighton, England."
msgstr ""

# 025c149a1f5548499301ab8bac455714
#: ../../internals/committers.txt:33
msgid ""
"Jacob is a partner at `Revolution Systems`_ which provides support services "
"around Django and related open source technologies. A good deal of Jacob's "
"work time is devoted to working on Django. Jacob previously worked at World "
"Online, where Django was invented, where he was the lead developer of "
"Ellington, a commercial Web publishing platform for media companies."
msgstr ""

# df91aa35b90f45ef9267dea4daac46e0
#: ../../internals/committers.txt:39
msgid "Jacob lives in Lawrence, Kansas, USA."
msgstr ""

# ede4d040ce4f4f7b833fd3415b944159
#: ../../internals/committers.txt:42
msgid ""
"Wilson's design-fu is what makes Django look so nice. He designed the Web "
"site you're looking at right now, as well as Django's acclaimed admin "
"interface. Wilson was the designer for EveryBlock and Rdio_. He now designs "
"for Facebook."
msgstr ""

# 95bdbdc46fcb4f66b9b9ba3782ea5363
#: ../../internals/committers.txt:47
msgid "Wilson lives in San Francisco, USA."
msgstr ""

# 1f16e45b2b0e46dd85f24689a3769f33
#: ../../internals/committers.txt:60
msgid "Current developers"
msgstr ""

# 901a05a217c44b1e86ab361c0d606840
#: ../../internals/committers.txt:62
msgid ""
"Currently, Django is led by a team of volunteers from around the globe."
msgstr ""

# 7bc74ff19a0a43d399f06bf6fc2e2f91
#: ../../internals/committers.txt:67
msgid "BDFLs"
msgstr ""

# 8559286a43fa40b4af69087267a0f79a
#: ../../internals/committers.txt:69
msgid ""
"Adrian and Jacob are the Co-`Benevolent Dictators for Life`_ of Django. When"
" \"rough consensus and working code\" fails, they're the ones who make the "
"tough decisions."
msgstr ""

# 1d606c9e6ee34a519d022ac35587e3e5
#: ../../internals/committers.txt:76
msgid "Core developers"
msgstr ""

# 593b63cfb33e41928f5c390dc8d70212
#: ../../internals/committers.txt:78
msgid ""
"These are the folks who have a long history of contributions, a solid track "
"record of being helpful on the mailing lists, and a proven desire to "
"dedicate serious time to Django. In return, they've been granted the coveted"
" commit bit, and have free rein to hack on all parts of Django."
msgstr ""

# 43f6f09f897b486594bfbb5ccf6e5725
#: ../../internals/committers.txt:84
msgid ""
"Malcolm originally wanted to be a mathematician, somehow ended up a software"
" developer. He's contributed to many Open Source projects, has served on the"
" board of the GNOME foundation, and will kick your ass at chess."
msgstr ""

# ad528df63c5a4cd7b2c13c0cbd30caaa
#: ../../internals/committers.txt:88
msgid ""
"When he's not busy being an International Man of Mystery, Malcolm lives in "
"Sydney, Australia."
msgstr ""

# caf910753e30471e99f467e2cebff977
#: ../../internals/committers.txt:92
msgid ""
"Russell studied physics as an undergraduate, and studied neural networks for"
" his PhD. His first job was with a startup in the defense industry "
"developing simulation frameworks. Over time, mostly through work with "
"Django, he's become more involved in Web development."
msgstr ""

# eee9e912bd6f47baa54f5f2f24f217f3
#: ../../internals/committers.txt:97
msgid ""
"Russell has helped with several major aspects of Django, including a couple "
"major internal refactorings, creation of the test system, and more."
msgstr ""

# 080384e53789461cbec93178eb4530b9
#: ../../internals/committers.txt:100
msgid ""
"Russell lives in the most isolated capital city in the world — Perth, "
"Australia."
msgstr ""

# a74b7b134ff747a1a11acdbf35656fc2
#: ../../internals/committers.txt:106
msgid ""
"Joseph was the director of lead development at EveryBlock and previously "
"developed at the Lawrence Journal-World. He is treasurer of the `Django "
"Software Foundation`_. He often disappears for several days into the woods, "
"attempts to teach himself computational linguistics, and annoys his "
"neighbors with his Charango_ playing."
msgstr ""

# b1a0e348118b49c68bdc78c3bedae1df
#: ../../internals/committers.txt:112
msgid ""
"Joseph's first contribution to Django was a series of improvements to the "
"authorization system leading up to support for pluggable authorization. "
"Since then, he's worked on the new forms system, its use in the admin, and "
"many other smaller improvements."
msgstr ""

# 7145de8c554a4e6a95cf272eb878b4b2
#: ../../internals/committers.txt:117
msgid "Joseph lives in Chicago, USA."
msgstr ""

# 6b441ddd87634c65856b7c9b156f3a01
#: ../../internals/committers.txt:123
msgid ""
"At University Luke studied physics and Materials Science and also met "
"`Michael Meeks`_ who introduced him to Linux and Open Source, re-igniting an"
" interest in programming.  Since then he has contributed to a number of Open"
" Source projects and worked professionally as a developer."
msgstr ""

# 7eb9165ae5b2495a9a5113ce8c3e4878
#: ../../internals/committers.txt:129
msgid ""
"Luke has contributed many excellent improvements to Django, including "
"database-level improvements, the CSRF middleware and many unit tests."
msgstr ""

# c9d93a6886e242c3ae2dc90b35a6d9fe
#: ../../internals/committers.txt:133
msgid ""
"Luke currently works for a church in Bradford, UK, and part-time as a "
"freelance developer."
msgstr ""

# 358fec0da935447f870e5500045537ae
#: ../../internals/committers.txt:140
msgid ""
"Brian is currently the tech lead at Eldarion_ managing and developing Django"
" / Pinax_ based Web sites. He enjoys learning more about programming "
"languages and system architectures and contributing to open source projects."
" Brian is the host of the `Django Dose`_ podcasts."
msgstr ""

# e6a5eed71cab43d88f76ae4c781f4be0
#: ../../internals/committers.txt:145
msgid ""
"Brian helped immensely in getting Django's \"newforms-admin\" branch "
"finished in time for Django 1.0; he's now a full committer, continuing to "
"improve on the admin and forms system."
msgstr ""

# 9d7795fae46646ba9b9b1901000ad03f
#: ../../internals/committers.txt:149
msgid "Brian lives in Denver, Colorado, USA."
msgstr ""

# fc9aed7a91164388a224bfe328c28e0e
#: ../../internals/committers.txt:157
msgid ""
"Gary starting contributing patches to Django in 2006 while developing Web "
"applications for `The University of Texas`_ (UT).  Since, he has made "
"contributions to the email and forms systems, as well as many other "
"improvements and code cleanups throughout the code base."
msgstr ""

# e925dd2a2a1b4b16b06ae546f306dc81
#: ../../internals/committers.txt:162
msgid ""
"Gary is currently a developer and software engineering graduate student at "
"UT, where his dedication to spreading the ways of Python and Django never "
"ceases."
msgstr ""

# 7ac963f9dd14461c8e9482bb0ff54594
#: ../../internals/committers.txt:166
msgid "Gary lives in Austin, Texas, USA."
msgstr ""

# ca5888e59ab24db1ad2323ae96fb996c
#: ../../internals/committers.txt:172
msgid ""
"Justin Bronn is a computer scientist and attorney specializing in legal "
"topics related to intellectual property and spatial law."
msgstr ""

# 07141d399c8f4b9b9359d84b6ca7ee0b
#: ../../internals/committers.txt:175
msgid ""
"In 2007, Justin began developing ``django.contrib.gis`` in a branch, a.k.a. "
"GeoDjango_, which was merged in time for Django 1.0.  While implementing "
"GeoDjango, Justin obtained a deep knowledge of Django's internals including "
"the ORM, the admin, and Oracle support."
msgstr ""

# cdc3d2f1bdf6443c9d46bef35480d9eb
#: ../../internals/committers.txt:180
msgid "Justin lives in San Francisco, CA."
msgstr ""

# 788298ef162a4f03af4bb1fb778d5bf0
#: ../../internals/committers.txt:185
msgid ""
"Karen has a background in distributed operating systems (graduate school), "
"communications software (industry) and crossword puzzle construction "
"(freelance).  The last of these brought her to Django, in late 2006, when "
"she set out to put a Web front-end on her crossword puzzle database. That "
"done, she stuck around in the community answering questions, debugging "
"problems, etc. -- because coding puzzles are as much fun as word puzzles."
msgstr ""

# e4e58bd92da04b6ab54dd878f76a0906
#: ../../internals/committers.txt:192
msgid "Karen lives in Apex, NC, USA."
msgstr ""

# b81c54053b184705a60f1807afc8f3f8
#: ../../internals/committers.txt:195
msgid ""
"Jannis graduated in media design from `Bauhaus-University Weimar`_, is the "
"author of a number of pluggable Django apps and likes to contribute to Open "
"Source projects like virtualenv_ and pip_."
msgstr ""

# 15765018ea534a25be72239b8f8b131f
#: ../../internals/committers.txt:199
msgid ""
"He has worked on Django's auth, admin and staticfiles apps as well as the "
"form, core, internationalization and test systems. He currently works as the"
" lead engineer at Gidsy_."
msgstr ""

# 3c96c18c91954a009d9c6e1027712b29
#: ../../internals/committers.txt:203
msgid "Jannis lives in Berlin, Germany."
msgstr ""

# 7886cabbed494548b83a7e6dc4b80474
#: ../../internals/committers.txt:212
msgid ""
"James is the lead developer of Pinax_ and the CEO and founder of Eldarion_. "
"He has been doing open source software since 1993, Python since 1998 and "
"Django since 2006. He serves on the board of the Python Software Foundation "
"and is currently on a leave of absence from a PhD in linguistics."
msgstr ""

# 75bd74e3291a42ecbd2e4e859a595879
#: ../../internals/committers.txt:218
msgid ""
"James currently lives in Boston, MA, USA but originally hails from Perth, "
"Western Australia where he attended the same high school as Russell Keith-"
"Magee."
msgstr ""

# 7d28a9b5b4474888a90d8be66b31c6dd
#: ../../internals/committers.txt:225
msgid ""
"Alex is a software engineer working at Rdio_. He found Django in 2007 and "
"has been addicted ever since he found out you don't need to write out your "
"forms by hand. He has a small obsession with compilers.  He's contributed to"
" the ORM, forms, admin, and other components of Django."
msgstr ""

# 20cdf2991af04cf8aeff19c2becce190
#: ../../internals/committers.txt:230
msgid "Alex lives in San Francisco, CA, USA."
msgstr ""

# 58beecc9386343379488fee6cfee4d5b
#: ../../internals/committers.txt:236
msgid ""
"Andrew is a freelance Python developer and tinkerer, and has been developing"
" against Django since 2007. He graduated from Oxford University with a "
"degree in Computer Science, and has become most well known in the Django "
"community for his work on South, the schema migrations library."
msgstr ""

# 33c5d4462f9040ffb566269807748b49
#: ../../internals/committers.txt:242
msgid "Andrew lives in London, UK."
msgstr ""

# 05cd21c6ed0646f9998b164c6cf20e8e
#: ../../internals/committers.txt:247
msgid ""
"Carl has been working with Django since 2007 (long enough to remember "
"queryset-refactor, but not magic-removal), and works as a freelance "
"developer with OddBird_.  He became a Django contributor by accident, "
"because fixing bugs is more interesting than working around them."
msgstr ""

# 7151805097a349c989e011c779c45e44
#: ../../internals/committers.txt:252
msgid "Carl lives in Rapid City, SD, USA."
msgstr ""

# 35867aa3830148fd8032cc32bad375c2
#: ../../internals/committers.txt:258
msgid ""
"Ramiro has been reading Django source code and submitting patches since "
"mid-2006 after researching for a Python Web tool with matching awesomeness "
"and being pointed to it by an old ninja."
msgstr ""

# 32c4a4dcf2584f84b273e7629e25be1a
#: ../../internals/committers.txt:262
msgid ""
"A software developer in the electronic transactions industry, he is a living"
" proof of the fact that anyone with enough enthusiasm can contribute to "
"Django, learning a lot and having fun in the process."
msgstr ""

# eae8a64a6a2848588ed74179680dab18
#: ../../internals/committers.txt:266
msgid "Ramiro lives in Córdoba, Argentina."
msgstr ""

# 298138987574431ebc2933cc593a2477
#: ../../internals/committers.txt:269
msgid ""
"Chris has been submitting patches and suggesting crazy ideas for Django "
"since early 2006. An advocate for community involvement and a long-term "
"triager, he is still often found answering questions in the #django IRC "
"channel."
msgstr ""

# 8075c6e816914e23b8c55abcd8f0cf00
#: ../../internals/committers.txt:274
msgid ""
"Chris lives in Napier, New Zealand (adding to the pool of Oceanic core "
"developers). He works remotely as a developer for `Lincoln Loop`_."
msgstr ""

# dde041cb27374c2085b267d64effa24c
#: ../../internals/committers.txt:281
msgid ""
"Honza first discovered Django in 2006 and started using it right away, first"
" for school and personal projects and later in his full time job. He "
"contributed various patches and fixes mostly to the newforms library, "
"newforms admin and, through participation in the Google Summer of Code "
"project, assisted in creating the :ref:`model validation <validating-"
"objects>` functionality."
msgstr ""

# de5916c98667406fb466e2e25dcdb502
#: ../../internals/committers.txt:288
msgid ""
"He is currently working for `Whiskey Media`_ in San Francisco developing "
"awesome sites running on pure Django."
msgstr ""

# e512338b1fb04ba6b3ab01b066177336
#: ../../internals/committers.txt:294
msgid ""
"As a self-professed design geek, Idan was initially attracted to Django "
"sometime between magic-removal and queryset-refactor. Formally trained as a "
"software engineer, Idan straddles the worlds of design and code, jack of two"
" trades and master of none. He is passionate about usability and finding "
"novel ways to extract meaning from data, and is a longtime photographer_."
msgstr ""

# db82d67848064ff8b328e13caea32cfd
#: ../../internals/committers.txt:301
msgid ""
"Idan previously accepted freelance work under the Pixane_ imprint, but now "
"splits his days between his startup, Skills_, and beautifying all things "
"Django and Python."
msgstr ""

# 372d9d256aec46c6b3c65fac158e109b
#: ../../internals/committers.txt:311
msgid ""
"Paul found Django in 2008 while looking for a more structured approach to "
"web programming. He stuck around after figuring out that the developers of "
"Django had already invented many of the wheels he needed. His passion for "
"breaking (and then fixing) things led to his current role working to "
"maintain and improve the security of Django."
msgstr ""

# 2a9711c133924f93a95725f7ecb41016
#: ../../internals/committers.txt:318
msgid ""
"Paul works in Berkeley, California as a `web developer`_ and `security "
"consultant`_."
msgstr ""

# c83ad01a61eb4d139c035fca020799b1
#: ../../internals/committers.txt:326
msgid ""
"Julien has a background in software engineering and human-computer "
"interaction. As a Web developer, he enjoys tinkering with the backend as "
"much as designing and coding user interfaces. Julien discovered Django in "
"2007 while doing his PhD in Computing Sciences. Since then he has "
"contributed patches to various components of the framework, in particular "
"the admin. Julien was a co-founder of the `Interaction Consortium`_. He now "
"works at Odopod_, a digital agency based in San Francisco, CA, USA."
msgstr ""

# 370f92f3a6ae48678464de0c367be5aa
#: ../../internals/committers.txt:339
msgid ""
"Aymeric is an engineer with a background in mathematics and computer "
"science. He chose Django because he believes that software should be simple,"
" explicit and tested. His perfectionist tendencies quickly led him to triage"
" tickets and contribute patches."
msgstr ""

# 0c5b9f38c9784342a8d4eaf561fbceb7
#: ../../internals/committers.txt:344
msgid ""
"Aymeric has a pragmatic approach to software engineering, can't live without"
" a continuous integration server, and likes proving that Django is a good "
"choice for enterprise software."
msgstr ""

# 60b29ab20d904aad9ef46bfa02f4ddc3
#: ../../internals/committers.txt:348
msgid "He works in a `management consulting company`_ in Paris, France."
msgstr ""

# 81adf123ee704c7fa90bdcd93c44795a
#: ../../internals/committers.txt:354
msgid ""
"Claude is a former teacher who fell in love with free software at the "
"beginning of the 21st century. He's now working as freelancer in Web "
"development in his native Switzerland. He has found in Django a perfect "
"match for his needs of a stable, clean, documented and well-maintained Web "
"framework."
msgstr ""

# 06f967ff2d9e471b98ce5722064cf63d
#: ../../internals/committers.txt:360
msgid ""
"He's also helping the GNOME Translation Project as maintainer of the Django-"
"based `l10n.gnome.org`_."
msgstr ""

# 3103c222dfe34f8a9049ab2a9794bdf0
#: ../../internals/committers.txt:367
msgid ""
"Anssi works as a developer at Finnish National Institute for Health and "
"Welfare. He is also a computer science student at Aalto University. In his "
"work he uses Django for developing internal business applications and sees "
"Django as a great match for that use case."
msgstr ""

# 6427a62df63245dc81bbbc2d544bab3a
#: ../../internals/committers.txt:372
msgid ""
"Anssi is interested in developing the object relational mapper (ORM) and all"
" related features. He's also a fan of benckmarking and he tries keep Django "
"as fast as possible."
msgstr ""

# ef66a664f49c4787b18461ad700d6bce
#: ../../internals/committers.txt:377
msgid ""
"Florian is currently studying Physics at the `Graz University of "
"Technology`_. Soon after he started using Django he joined the `Ubuntuusers "
"webteam`_ to work on *Inyoka*, the software powering the whole Ubuntusers "
"site."
msgstr ""

# cf131151acb64e7284b52a59c4afefbc
#: ../../internals/committers.txt:381
msgid "For the time beeing he lives in Graz, Austria (not Australia ;))."
msgstr ""

# 76647bd41fa2437e9b2029c6106fd5a3
#: ../../internals/committers.txt:387
msgid ""
"Jeremy was rescued from corporate IT drudgery by Free Software and, in part,"
" Django.  Many of Jeremy's interests center around access to information."
msgstr ""

# be303aa55c084fc9b34f91d1478ca60f
#: ../../internals/committers.txt:390
msgid ""
"Jeremy was the lead developer of Pegasus News, one of the first uses of "
"Django outside World Online, and has since joined Votizen, a startup intent "
"on reducing the influence of money in politics."
msgstr ""

# e03d205b02be43a5a0242cf746a39563
#: ../../internals/committers.txt:394
msgid ""
"He serves as DSF Secretary, organizes and helps organize sprints, cares "
"about the health and equity of the Django community.  He has gone an "
"embarrassingly long time without a working blog."
msgstr ""

# a3d6a7f8fc20422ca50c9ad5099e44fe
#: ../../internals/committers.txt:398
msgid "Jeremy lives in Mountain View, CA, USA."
msgstr ""

# b86d96929d1649b4b7e039823ad3830d
#: ../../internals/committers.txt:401
msgid ""
"Bryan found Django 0.96 through a fellow designer who was evangelizing its "
"use. It was his first foray outside of the land that was PHP-based "
"templating. Although he has only ever used Django for personal projects, it "
"is the very reason he considers himself a designer/developer hybrid and is "
"working to further design within the Django community."
msgstr ""

# cc56281023494e508bee93400abc1c4f
#: ../../internals/committers.txt:407
msgid ""
"Bryan works as a designer at GitHub by day, and masquerades as a `vlogger`_ "
"and `shoutcaster`_ in the after-hours. Bryan lives in Los Angeles, CA, USA."
msgstr ""

# bf410bbe69dd446f9a84f832954f42d5
#: ../../internals/committers.txt:415
msgid ""
"Preston is a recovering neuroscientist who originally discovered Django as "
"part of a sweeping move to Python from a grab bag of half a dozen languages."
" He was drawn to Django's balance of practical batteries included "
"philosophy, care and thought in code design, and strong open source "
"community. In addition to his current job in private progressive education, "
"Preston contributes some developer time to local non-profits."
msgstr ""

# d6529cb5b3614dafa54f75578a330287
#: ../../internals/committers.txt:422
msgid ""
"Preston lives with his family and animal menagerie in Santa Barbara, CA, "
"USA."
msgstr ""

# 64601dc95dcf4bd8b29110e2d2bbd9c3
#: ../../internals/committers.txt:427
msgid "Specialists"
msgstr ""

# ca34f4e272824fc5a84b747f4f5c59d6
#: ../../internals/committers.txt:430
msgid ""
"James is Django's release manager, and also contributes to the documentation"
" and provide the occasional bugfix."
msgstr ""

# dc9e40ec780e4986939f30b0d509fb00
#: ../../internals/committers.txt:433
msgid ""
"James came to Web development from philosophy when he discovered that "
"programmers get to argue just as much while collecting much better pay. He "
"lives in Lawrence, Kansas and previously worked at World Online; currently, "
"he's part of the Web development team at Mozilla."
msgstr ""

# ee29443a273e48a2a12836f2185272f4
#: ../../internals/committers.txt:439
msgid "He `keeps a blog`_, and enjoys fine port and talking to his car."
msgstr ""

# c0f1c4ccb9234a01ad41cd5f1ab766d0
#: ../../internals/committers.txt:445
msgid "Ian is responsible for Django's support for Oracle."
msgstr ""

# 13d7428e950a4a63af33dc496f8efcf8
#: ../../internals/committers.txt:448
msgid "Matt is also responsible for Django's Oracle support."
msgstr ""

# 7f348812c5034504b45d00850c614184
#: ../../internals/committers.txt:451
msgid ""
"Simon discovered Django 0.96 during his Computer Science PhD research and "
"has been developing with it full-time ever since. His core code "
"contributions are mostly in Django's admin application. He is also helping "
"to improve Django's documentation."
msgstr ""

# 0c041b945e0e4c34aa97e94638e65ec3
#: ../../internals/committers.txt:456
msgid "Simon works as a freelance developer based in Wollongong, Australia."
msgstr ""

# a61d6560b9124004b51773ce9d26449b
#: ../../internals/committers.txt:461
msgid ""
"Gabriel has been working with Django since 2008, shortly after the 1.0 "
"release. Convinced by his business partner that Python and Django were the "
"right direction for the company, he couldn't have been more happy with the "
"decision. His contributions range across many areas in Django, but years of "
"copy-editing and an eye for detail lead him to be particularly at home while"
" working on Django's documentation."
msgstr ""

# 84b66143d3aa4c069e5495d3b78a6642
#: ../../internals/committers.txt:468
msgid "Gabriel works as a web developer in Berkeley, CA, USA."
msgstr ""

# 9a48c90c708d4e9fad63f51b286547f3
#: ../../internals/committers.txt:473
msgid ""
"When exploring Web frameworks for an independent study project in the fall "
"of 2008, Tim discovered Django and was lured to it by the documentation. He "
"enjoys contributing to the docs because they're awesome."
msgstr ""

# 8e14e626b2a8408fba8e4fe290a7d198
#: ../../internals/committers.txt:477
msgid "Tim works as a software engineer and lives in Philadelphia, PA, USA."
msgstr ""

# eb93cd147a694093b77e1b84502a7e34
#: ../../internals/committers.txt:480
msgid "Developers Emeritus"
msgstr ""

# b4b32c490aaf40a882c551116f06bb69
#: ../../internals/committers.txt:483
msgid ""
"Georg created Django's internationalization system, managed i18n "
"contributions and made a ton of excellent tweaks, feature additions and bug "
"fixes."
msgstr ""

# 48415a8cd626445291265debd8533801
#: ../../internals/committers.txt:488
msgid ""
"Robert was responsible for the *first* refactoring of Django's admin "
"application to allow for easier reuse and has made a ton of excellent "
"tweaks, feature additions and bug fixes."
msgstr ""

# 2ce64d72e49d45de9fbcc5c8f24f9a31
#: ../../internals/contributing/bugs-and-features.txt:3
msgid "Reporting bugs and requesting features"
msgstr ""

# 276db4e06d9244debe2630bc31d49043
#: ../../internals/contributing/bugs-and-features.txt:7
msgid ""
"Please report security issues **only** to security@djangoproject.com.  This "
"is a private list only open to long-time, highly trusted Django developers, "
"and its archives are not public. For further details, please see :doc:`our "
"security policies </internals/security>`."
msgstr ""

# 531979275a374c76adc9413e0b826875
#: ../../internals/contributing/bugs-and-features.txt:14
msgid ""
"Otherwise, before reporting a bug or requesting a new feature, please "
"consider these general points:"
msgstr ""

# 6f179cdfb80844119acd2897cd218f7a
#: ../../internals/contributing/bugs-and-features.txt:17
msgid ""
"Check that someone hasn't already filed the bug or feature request by "
"`searching`_ or running `custom queries`_ in the ticket tracker."
msgstr ""

# e9d59168b0e5473fa837f6600a94fff3
#: ../../internals/contributing/bugs-and-features.txt:20
msgid ""
"Don't use the ticket system to ask support questions. Use the `django-"
"users`_ list or the `#django`_ IRC channel for that."
msgstr ""

# f3d2fc3f8754422780239c2954791bcd
#: ../../internals/contributing/bugs-and-features.txt:23
msgid ""
"Don't reopen issues that have been marked \"wontfix\" by a core developer. "
"This mark means that the decision has been made that we can't or won't fix "
"this particular issue. If you're not sure why, please ask on `django-"
"developers`_."
msgstr ""

# 7012f72dfdf241dda253281d54e616f0
#: ../../internals/contributing/bugs-and-features.txt:28
msgid ""
"Don't use the ticket tracker for lengthy discussions, because they're likely"
" to get lost. If a particular ticket is controversial, please move the "
"discussion to `django-developers`_."
msgstr ""

# 93ddd6cfbc6f4d0db07ac843c81df3e8
#: ../../internals/contributing/bugs-and-features.txt:35
msgid "Reporting bugs"
msgstr ""

# 946babc330a84828b07ff8a669e810cc
#: ../../internals/contributing/bugs-and-features.txt:37
msgid ""
"Well-written bug reports are *incredibly* helpful. However, there's a "
"certain amount of overhead involved in working with any bug tracking system "
"so your help in keeping our ticket tracker as useful as possible is "
"appreciated. In particular:"
msgstr ""

# bdbe87561a0d4867b770dbe8506984c8
#: ../../internals/contributing/bugs-and-features.txt:42
msgid ""
"**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a "
"well-known question."
msgstr ""

# 0e90cca98ac348218469f8e81d27929c
#: ../../internals/contributing/bugs-and-features.txt:45
msgid ""
"**Do** ask on `django-users`_ or `#django`_ *first* if you're not sure if "
"what you're seeing is a bug."
msgstr ""

# 7146cc35210b4637b08963f737d5aaa1
#: ../../internals/contributing/bugs-and-features.txt:48
msgid ""
"**Do** write complete, reproducible, specific bug reports. You must include "
"a clear, concise description of the problem, and a set of instructions for "
"replicating it. Add as much debug information as you can: code snippets, "
"test cases, exception backtraces, screenshots, etc. A nice small test case "
"is the best way to report a bug, as it gives us an easy way to confirm the "
"bug quickly."
msgstr ""

# 1b0c37989e5f419fa82382809ae97475
#: ../../internals/contributing/bugs-and-features.txt:55
msgid ""
"**Don't** post to `django-developers`_ just to announce that you have filed "
"a bug report. All the tickets are mailed to another list, `django-updates`_,"
" which is tracked by developers and interested community members; we see "
"them as they are filed."
msgstr ""

# 9cf52556b06943c9b181afe964b82df7
#: ../../internals/contributing/bugs-and-features.txt:60
msgid ""
"To understand the lifecycle of your ticket once you have created it, refer "
"to :doc:`triaging-tickets`."
msgstr ""

# baf20c974512447d9202551616a34771
#: ../../internals/contributing/bugs-and-features.txt:66
msgid "Reporting user interface bugs and features"
msgstr ""

# 3142c94aab4a4723a6c0fe1fec65a0ed
#: ../../internals/contributing/bugs-and-features.txt:68
msgid ""
"If your bug or feature request touches on anything visual in nature, there "
"are a few additional guidelines to follow:"
msgstr ""

# 9c762fe76aa546728370763f47718b22
#: ../../internals/contributing/bugs-and-features.txt:71
msgid ""
"Include screenshots in your ticket which are the visual equivalent of a "
"minimal testcase. Show off the issue, not the crazy customizations you've "
"made to your browser."
msgstr ""

# 908db4006ea84dd2bab6c213574fda58
#: ../../internals/contributing/bugs-and-features.txt:75
msgid ""
"If the issue is difficult to show off using a still image, consider "
"capturing a *brief* screencast. If your software permits it, capture only "
"the relevant area of the screen."
msgstr ""

# 971b3ba024304ac9a0941150b76e4094
#: ../../internals/contributing/bugs-and-features.txt:79
msgid ""
"If you're offering a patch which changes the look or behavior of Django's "
"UI, you **must** attach before *and* after screenshots/screencasts. Tickets "
"lacking these are difficult for triagers and core developers to assess "
"quickly."
msgstr ""

# 0dd60cec4c8f4e8b89a69c771112b4ff
#: ../../internals/contributing/bugs-and-features.txt:84
msgid ""
"Screenshots don't absolve you of other good reporting practices. Make sure "
"to include URLs, code snippets, and step-by-step instructions on how to "
"reproduce the behavior visible in the screenshots."
msgstr ""

# 1c2a9722e34a4a0b96aa8000b37b9b59
#: ../../internals/contributing/bugs-and-features.txt:88
msgid ""
"Make sure to set the UI/UX flag on the ticket so interested parties can find"
" your ticket."
msgstr ""

# 8d68f0ed417f4d25a8899b4b3068f445
#: ../../internals/contributing/bugs-and-features.txt:92
msgid "Requesting features"
msgstr ""

# 94ac0e15790e4537b84b8338d30acb0f
#: ../../internals/contributing/bugs-and-features.txt:94
msgid ""
"We're always trying to make Django better, and your feature requests are a "
"key part of that. Here are some tips on how to make a request most "
"effectively:"
msgstr ""

# def44251538b41a5b1bc13703243f33f
#: ../../internals/contributing/bugs-and-features.txt:97
msgid ""
"Make sure the feature actually requires changes in Django's core. If your "
"idea can be developed as an independent application or module — for "
"instance, you want to support another database engine — we'll probably "
"suggest that you to develop it independently. Then, if your project gathers "
"sufficient community support, we may consider it for inclusion in Django."
msgstr ""

# e8017963e01441d685e0677fbd51525e
#: ../../internals/contributing/bugs-and-features.txt:104
msgid ""
"First request the feature on the `django-developers`_ list, not in the "
"ticket tracker. It'll get read more closely if it's on the mailing list. "
"This is even more important for large-scale feature requests. We like to "
"discuss any big changes to Django's core on the mailing list before actually"
" working on them."
msgstr ""

# 1aaf132564774395aeb58f277efc9db4
#: ../../internals/contributing/bugs-and-features.txt:110
msgid ""
"Describe clearly and concisely what the missing feature is and how you'd "
"like to see it implemented. Include example code (non-functional is OK) if "
"possible."
msgstr ""

# 203448125d4741249616bb06e2b734b8
#: ../../internals/contributing/bugs-and-features.txt:114
msgid ""
"Explain *why* you'd like the feature. In some cases this is obvious, but "
"since Django is designed to help real developers get real work done, you'll "
"need to explain it, if it isn't obvious why the feature would be useful."
msgstr ""

# b745b6be241a42caba8be6d43ee936ef
#: ../../internals/contributing/bugs-and-features.txt:119
msgid ""
"If core developers agree on the feature, then it's appropriate to create a "
"ticket. Include a link the discussion on `django-developers`_ in the ticket "
"description."
msgstr ""

# 79ebaa3f16c64458b466ab665f7a3678
#: ../../internals/contributing/bugs-and-features.txt:123
msgid ""
"As with most open-source projects, code talks. If you are willing to write "
"the code for the feature yourself or, even better, if you've already written"
" it, it's much more likely to be accepted. Just fork Django on GitHub, "
"create a feature branch, and show us your work!"
msgstr ""

# 47a6992e39db48aabb5ce59c014c0415
#: ../../internals/contributing/bugs-and-features.txt:128
msgid "See also: :ref:`documenting-new-features`."
msgstr ""

# ea97bfd94aac4dff97d4a36d429b43fa
#: ../../internals/contributing/bugs-and-features.txt:133
msgid "How we make decisions"
msgstr ""

# 4dd6db654cc84ddb974cda7be39a162c
#: ../../internals/contributing/bugs-and-features.txt:135
msgid ""
"Whenever possible, we strive for a rough consensus. To that end, we'll often"
" have informal votes on `django-developers`_ about a feature. In these votes"
" we follow the voting style invented by Apache and used on Python itself, "
"where votes are given as +1, +0, -0, or -1. Roughly translated, these votes "
"mean:"
msgstr ""

# e834894fca364637bcb959eafe6ab443
#: ../../internals/contributing/bugs-and-features.txt:140
msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr ""

# ec5019ba96874fe78c7b2563adea0d75
#: ../../internals/contributing/bugs-and-features.txt:142
msgid "+0: \"Sounds OK to me.\""
msgstr ""

# 226c93500e1b464d926f3e08fe8011fd
#: ../../internals/contributing/bugs-and-features.txt:144
msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr ""

# c2e594ec98a6411ea8295bb6f0ce2f2c
#: ../../internals/contributing/bugs-and-features.txt:146
msgid ""
"-1: \"I strongly disagree and would be very unhappy to see the idea turn "
"into reality.\""
msgstr ""

# 0d1dcaef1cf44bf3bb134aeb475f760c
#: ../../internals/contributing/bugs-and-features.txt:149
msgid ""
"Although these votes on `django-developers`_ are informal, they'll be taken "
"very seriously. After a suitable voting period, if an obvious consensus "
"arises we'll follow the votes."
msgstr ""

# 9c9147653b9c486ca7c8cfe19bba372b
#: ../../internals/contributing/bugs-and-features.txt:153
msgid ""
"However, consensus is not always possible. If consensus cannot be reached, "
"or if the discussion towards a consensus fizzles out without a concrete "
"decision, we use a more formal process."
msgstr ""

# 61a6b608ba20474ca8079bfe272d8485
#: ../../internals/contributing/bugs-and-features.txt:157
msgid ""
"Any :doc:`core committer</internals/committers>` may call for a formal vote "
"using the same voting mechanism above. A proposition will be considered "
"carried by the core team if:"
msgstr ""

# bc6c9318a15049aeb3a415153dac7366
#: ../../internals/contributing/bugs-and-features.txt:161
msgid "There are three \"+1\" votes from members of the core team."
msgstr ""

# fd040cf959c6483a97521facad8d0170
#: ../../internals/contributing/bugs-and-features.txt:163
msgid "There is no \"-1\" vote from any member of the core team."
msgstr ""

# b53cd08169814be088ed5fd223bf3ee0
#: ../../internals/contributing/bugs-and-features.txt:165
msgid ""
"The :ref:`BDFLs<django-bdfls>` haven't stepped in and executed their "
"positive or negative veto."
msgstr ""

# 8c3bfaed0ac44935a2d2f539fd04e18d
#: ../../internals/contributing/bugs-and-features.txt:168
msgid ""
"When calling for a vote, the caller should specify a deadline by which votes"
" must be received. One week is generally suggested as the minimum amount of "
"time."
msgstr ""

# 821860836d9e41a9a214d23d547e3924
#: ../../internals/contributing/bugs-and-features.txt:172
msgid ""
"Since this process allows any core committer to veto a proposal, any \"-1\" "
"votes (or BDFL vetos) should be accompanied by an explanation that explains "
"what it would take to convert that \"-1\" into at least a \"+0\"."
msgstr ""

# 8cc42f206c6d4efaae1eb86d21a17f64
#: ../../internals/contributing/bugs-and-features.txt:176
msgid ""
"Whenever possible, these formal votes should be announced and held in public"
" on the `django-developers`_ mailing list. However, overly sensitive or "
"contentious issues -- including, most notably, votes on new core committers "
"-- may be held in private."
msgstr ""

# 1bbcd9cf5edb433bb61234a82a2e58f7
#: ../../internals/contributing/committing-code.txt:3
msgid "Committing code"
msgstr ""

# 6c42981d49604517a1e3858f1b7f2aeb
#: ../../internals/contributing/committing-code.txt:5
msgid ""
"This section is addressed to the :doc:`/internals/committers` and to anyone "
"interested in knowing how code gets committed into Django core. If you're a "
"community member who wants to contribute code to Django, have a look at :doc"
":`writing-code/working-with-git` instead."
msgstr ""

# 1fb667c3d01341969f89394f2312c693
#: ../../internals/contributing/committing-code.txt:11
msgid "Commit access"
msgstr ""

# 586d1ed8ddca426c90253c506fb8dd96
#: ../../internals/contributing/committing-code.txt:13
msgid "Django has two types of committers:"
msgstr ""

# 0cb75446079745b18e65fbb13e13a758
#: ../../internals/contributing/committing-code.txt:16
msgid ""
"These are people who have a long history of contributions to Django's "
"codebase, a solid track record of being polite and helpful on the mailing "
"lists, and a proven desire to dedicate serious time to Django's development."
" The bar is high for full commit access."
msgstr ""

# 1aa34aa31a7e4145893dfa01e1fb1b83
#: ../../internals/contributing/committing-code.txt:22
msgid ""
"These are people who are \"domain experts.\" They have direct check-in "
"access to the subsystems that fall under their jurisdiction, and they're "
"given a formal vote in questions that involve their subsystems. This type of"
" access is likely to be given to someone who contributes a large sub-"
"framework to Django and wants to continue to maintain it."
msgstr ""

# 10106a5617a1423d82eb7220c1bb72d6
#: ../../internals/contributing/committing-code.txt:28
msgid ""
"Partial commit access is granted by the same process as full committers. "
"However, the bar is set lower; proven expertise in the area in question is "
"likely to be sufficient."
msgstr ""

# 82ed65ee96484432b3d5051fc8d67149
#: ../../internals/contributing/committing-code.txt:32
msgid ""
"Decisions on new committers will follow the process explained in :ref:`how-"
"we-make-decisions`. To request commit access, please contact an existing "
"committer privately. Public requests for commit access are potential flame-"
"war starters, and will simply be ignored."
msgstr ""

# 10a54d4d95a640b5906be29f6d1f2bf3
#: ../../internals/contributing/committing-code.txt:38
msgid "Handling pull requests"
msgstr ""

# 0d5373f8ccb1436fbbbb251b7465b13a
#: ../../internals/contributing/committing-code.txt:40
msgid ""
"Since Django is now hosted at GitHub, many patches are provided in the form "
"of pull requests."
msgstr ""

# d04f920538e14740be4656be9ce13588
#: ../../internals/contributing/committing-code.txt:43
msgid ""
"When committing a pull request, make sure each individual commit matches the"
" commit guidelines described below. Contributors are expected to provide the"
" best pull requests possible. In practice however, committers - who will "
"likely be more familiar with the commit guidelines - may decide to bring a "
"commit up to standard themselves."
msgstr ""

# 28d2d299ccf6477aaba7051bfae72cfd
#: ../../internals/contributing/committing-code.txt:49
msgid "Here is one way to commit a pull request::"
msgstr ""

# fb37e9ad55034e27b36fa6902c06a1f8
#: ../../internals/contributing/committing-code.txt:58
msgid ""
"At this point, you can work on the code. Use ``git rebase -i`` and ``git "
"commit --amend`` to make sure the commits have the expected level of "
"quality. Once you're ready::"
msgstr ""

# 4f7a1601b3224809b427b9b067f4c20b
#: ../../internals/contributing/committing-code.txt:75
msgid ""
"An alternative is to add the contributor's repository as a new remote, "
"checkout the branch and work from there::"
msgstr ""

# 6ca78db48a9c490c84c3c0ad10d6706c
#: ../../internals/contributing/committing-code.txt:81
msgid ""
"Yet another alternative is to fetch the branch without adding the "
"contributor's repository as a remote::"
msgstr ""

# 8c730c53de9c498a8956e69c02b41ac6
#: ../../internals/contributing/committing-code.txt:87
msgid "At this point, you can work on the code and continue as above."
msgstr ""

# f20cf4b3f08d421086da286f0a5cce9d
#: ../../internals/contributing/committing-code.txt:89
msgid ""
"GitHub provides a one-click merge functionality for pull requests. This "
"should only be used if the pull request is 100% ready, and you have checked "
"it for errors (or trust the request maker enough to skip checks). Currently,"
" it isn't possible to check that the tests pass and that the docs build "
"without downloading the changes to your development environment."
msgstr ""

# 9dd345ded7684a7bb40d72b032cbb0c6
#: ../../internals/contributing/committing-code.txt:95
msgid ""
"When rewriting the commit history of a pull request, the goal is to make "
"Django's commit history as usable as possible:"
msgstr ""

# eff4bffce3de4daab8b4ed300b36c3e8
#: ../../internals/contributing/committing-code.txt:98
msgid ""
"If a patch contains back-and-forth commits, then rewrite those into one. "
"Typically, a commit can add some code, and a second commit can fix stylistic"
" issues introduced in the first commit."
msgstr ""

# 2f812cae845340d588545a94b03c0e8e
#: ../../internals/contributing/committing-code.txt:102
msgid ""
"Separate changes to different commits by logical grouping: if you do a "
"stylistic cleanup at the same time as you do other changes to a file, "
"separating the changes into two different commits will make reviewing "
"history easier."
msgstr ""

# 7df0486a32a547059f45ad2233b30925
#: ../../internals/contributing/committing-code.txt:107
msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

# 3110874fec3c42d6901063003603d5bb
#: ../../internals/contributing/committing-code.txt:109
msgid ""
"Tests should pass and docs should build after each commit. Neither the tests"
" nor the docs should emit warnings."
msgstr ""

# 2d56adc1e8554426a7e04fd60f641448
#: ../../internals/contributing/committing-code.txt:112
msgid ""
"Trivial and small patches usually are best done in one commit. Medium to "
"large work should be split into multiple commits if possible."
msgstr ""

# 264afc710d6549c5a936ff5123f7755e
#: ../../internals/contributing/committing-code.txt:115
msgid ""
"Practicality beats purity, so it is up to each committer to decide how much "
"history mangling to do for a pull request. The main points are engaging the "
"community, getting work done, and having a usable commit history."
msgstr ""

# df436386541647c3a5bce6a72b99c16e
#: ../../internals/contributing/committing-code.txt:122
msgid "Committing guidelines"
msgstr ""

# d9b00c0a276246b396deee50e30361cd
#: ../../internals/contributing/committing-code.txt:124
msgid ""
"In addition, please follow the following guidelines when committing code to "
"Django's Git repository:"
msgstr ""

# 2255506d48d54fe284a86d43af7d890c
#: ../../internals/contributing/committing-code.txt:127
msgid ""
"Never change the published history of django/django branches! **Never force-"
" push your changes to django/django.** If you absolutely must (for security "
"reasons for example) first discuss the situation with the core team."
msgstr ""

# 8dbaf810ff0d471b9b339d849a1657cd
#: ../../internals/contributing/committing-code.txt:131
msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the `django-developers`_ mailing list "
"before making the change."
msgstr ""

# 4efadddc6df14390a4835e5e3a70fad7
#: ../../internals/contributing/committing-code.txt:135
msgid ""
"If you bring something up on `django-developers`_ and nobody responds, "
"please don't take that to mean your idea is great and should be implemented "
"immediately because nobody contested it. Django's lead developers don't have"
" a lot of time to read mailing-list discussions immediately, so you may have"
" to wait a couple of days before getting a response."
msgstr ""

# b1fbeebd439443c9b6ca179d350d1f00
#: ../../internals/contributing/committing-code.txt:142
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

# d19012ffdf9f413f80f212b1cff817ef
#: ../../internals/contributing/committing-code.txt:144
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

# 395c73fb472a48228a4fac20f0fee5f5
#: ../../internals/contributing/committing-code.txt:145
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

# 11968bc438e543e4b15e54aaab897f3c
#: ../../internals/contributing/committing-code.txt:146
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

# 771c5116134f46048936611304b33eea
#: ../../internals/contributing/committing-code.txt:148
msgid ""
"The commit message should be in lines of 72 chars maximum. There should be a"
" subject line, separated by a blank line and then paragraphs of 72 char "
"lines. The limits are soft. For the subject line, shorter is better. In the "
"body of the commit message more detail is better than less::"
msgstr ""

# 3c9d5e4588e14a4f8ad74e0952ae1246
#: ../../internals/contributing/committing-code.txt:159
msgid ""
"If the patch wasn't a pull request, you should credit the contributors in "
"the commit message: \"Thanks A for report, B for the patch and C for the "
"review.\""
msgstr ""

# bed101e264c44264ab5b14fc9547b66f
#: ../../internals/contributing/committing-code.txt:163
msgid ""
"For commits to a branch, prefix the commit message with the branch name. For"
" example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

# db85fd0554ed49ba9cbe96015936363f
#: ../../internals/contributing/committing-code.txt:166
msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if"
" implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping all core Django developers follow your changes."
msgstr ""

# 2c88f81bde31420e8bbc9e44cd5ac1d6
#: ../../internals/contributing/committing-code.txt:173
msgid ""
"Separate bug fixes from feature changes. Bugfixes may need to be backported "
"to the stable branch, according to the :ref:`backwards-compatibility policy "
"<backwards-compatibility-policy>`."
msgstr ""

# 2075db9179344391b3d083d85209010a
#: ../../internals/contributing/committing-code.txt:177
msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number"
" of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang "
"feature.\". We've rigged Trac so that any commit message in that format will"
" automatically close the referenced ticket and post a comment to it with the"
" full commit message."
msgstr ""

# 7f2b63574c86441f8823a5c3f0502008
#: ../../internals/contributing/committing-code.txt:184
msgid ""
"If your commit closes a ticket and is in a branch, use the branch name "
"first, then the \"Fixed #xxxxx.\" For example: \"[1.4.x] Fixed #123 -- Added"
" whizbang feature.\""
msgstr ""

# 96bfe06fd5404c28800afb7778c8c162
#: ../../internals/contributing/committing-code.txt:188
msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

# 9c04f4547a304686b77d626c3f83eea7
#: ../../internals/contributing/committing-code.txt:192
msgid ""
"Note that the Trac integration doesn't know anything about pull requests. So"
" if you try to close a pull request with the phrase \"closes #400\" in your "
"commit message, GitHub will close the pull request, but the Trac plugin will"
" also close the same numbered ticket in Trac."
msgstr ""

# 716e8b29157b4b9488140043200c0c2a
#: ../../internals/contributing/committing-code.txt:200
msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" "
"is the number of the ticket your commit references. This will automatically "
"post a comment to the appropriate ticket."
msgstr ""

# 830395d7ee7c416899a5feeb113919d5
#: ../../internals/contributing/committing-code.txt:205
msgid "Write commit messages for backports using this pattern::"
msgstr ""

# b867a4ef438b497c9bf60b824c88fcc1
#: ../../internals/contributing/committing-code.txt:211
msgid "For example::"
msgstr ""

# c8d50929039a45feaa2db89b5ec18f85
#: ../../internals/contributing/committing-code.txt:218
msgid "Reverting commits"
msgstr ""

# a1d5a802179640748ef926a1d4e3b18f
#: ../../internals/contributing/committing-code.txt:220
msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

# 6be7b76f964d46e298d6cb9604c43ea2
#: ../../internals/contributing/committing-code.txt:222
msgid ""
"But try very hard to ensure that mistakes don't happen. Just because we have"
" a reversion policy doesn't relax your responsibility to aim for the highest"
" quality possible. Really: double-check your work, or have it checked by "
"another committer, **before** you commit it in the first place!"
msgstr ""

# a50e1d3d47374b769bf44b06245d4c51
#: ../../internals/contributing/committing-code.txt:227
msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

# baa33c2a7364423fb1a055f11b40c113
#: ../../internals/contributing/committing-code.txt:229
msgid "If possible, have the original author revert his/her own commit."
msgstr ""

# 764e574e96e9463b90ca0b1a315c94b8
#: ../../internals/contributing/committing-code.txt:231
msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

# 6c72840af3384da68c559df9015cfb12
#: ../../internals/contributing/committing-code.txt:234
msgid ""
"Use git revert -- this will make a reverse commit, but the original commit "
"will still be part of the commit history."
msgstr ""

# 699437e4a54a488fa571f03683c4807d
#: ../../internals/contributing/committing-code.txt:237
msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc -- then ask for objections on the `django-developers`_ mailing"
" list then revert if there are none."
msgstr ""

# 5d08b85d69d042fe96ca268ebbaffb87
#: ../../internals/contributing/committing-code.txt:242
msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

# 6ebe6a4987fc4632bfa4c01d8dd07f8f
#: ../../internals/contributing/committing-code.txt:245
msgid ""
"If there's a disagreement between the committer and the reverter-to-be then "
"try to work it out on the `django-developers`_ mailing list. If an agreement"
" can't be reached then it should be put to a vote."
msgstr ""

# 4393432a54994a41949bf9ef0038282f
#: ../../internals/contributing/committing-code.txt:250
msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

# 05ad21bc797046e7aea0390bb898fe94
#: ../../internals/contributing/committing-code.txt:254
msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

# 7122dd090cf941e5ada9bb1d06f45e03
#: ../../internals/contributing/committing-code.txt:257
msgid ""
"If you mistakenly push a topic branch to django/django, just delete it. For "
"instance, if you did: ``git push upstream feature_antigravity``, just do a "
"reverse push: ``git push upstream :feature_antigravity``."
msgstr ""

# 362f921496114e02939ed2564f3b00fa
#: ../../internals/contributing/index.txt:3
msgid "Contributing to Django"
msgstr ""

# c5304703a7504bd695a57eab71c459b4
#: ../../internals/contributing/index.txt:5
msgid ""
"Django is a community that lives on its volunteers. As it keeps growing, we "
"always need more people to help others. As soon as you learn Django, you can"
" contribute in many ways:"
msgstr ""

# 294e81a0b30948c1ad96634a6c90bbe8
#: ../../internals/contributing/index.txt:9
msgid ""
"Join the `django-users`_ mailing list and answer questions. This mailing "
"list has a huge audience, and we really want to maintain a friendly and "
"helpful atmosphere. If you're new to the Django community, you should read "
"the `posting guidelines`_."
msgstr ""

# 4497a3902ed34fff9ddd531e7c10b040
#: ../../internals/contributing/index.txt:14
msgid ""
"Join the `#django IRC channel`_ on Freenode and answer questions. By "
"explaining Django to other users, you're going to learn a lot about the "
"framework yourself."
msgstr ""

# d49ad6802a2c4955b037176cd54949ed
#: ../../internals/contributing/index.txt:18
msgid ""
"Blog about Django. We syndicate all the Django blogs we know about on the "
"`community page`_; if you'd like to see your blog on that page you can "
"`register it here`_."
msgstr ""

# 49ccb103ba3440f5bcf3a2d8f9f795ff
#: ../../internals/contributing/index.txt:22
msgid ""
"Contribute to open-source Django projects, write some documentation, or "
"release your own code as an open-source pluggable application. The ecosystem"
" of pluggable applications is a big strength of Django, help us build it!"
msgstr ""

# bfa8870146644c3c84e1a342858ae2cb
#: ../../internals/contributing/index.txt:27
msgid ""
"If you think working *with* Django is fun, wait until you start working *on*"
" it. We're passionate about helping Django users make the jump to "
"contributing members of the community, so there are several ways you can "
"help Django's development:"
msgstr ""

# 2abbcaef073c4eaf8947038184a09eb0
#: ../../internals/contributing/index.txt:32
msgid ":doc:`Report bugs <bugs-and-features>` in our `ticket tracker`_."
msgstr ""

# 62a4084bc1b24d5eb208e4f47ff13fde
#: ../../internals/contributing/index.txt:34
msgid ""
"Join the `django-developers`_ mailing list and share your ideas for how to "
"improve Django. We're always open to suggestions."
msgstr ""

# 82d2d329814541a3ac5682072a97df07
#: ../../internals/contributing/index.txt:37
msgid ""
":doc:`Submit patches <writing-code/submitting-patches>` for new and/or fixed"
" behavior. If you're looking for an easy way to start contributing to Django"
" have a look at the `easy pickings`_ tickets."
msgstr ""

# 488efd0b2f724e9a9d521862041d0aa5
#: ../../internals/contributing/index.txt:41
msgid ""
":doc:`Improve the documentation <writing-documentation>` or :doc:`write unit"
" tests <writing-code/unit-tests>`."
msgstr ""

# d42b53fe07f54203abd548a943a3591f
#: ../../internals/contributing/index.txt:44
msgid ""
":doc:`Triage tickets and review patches <triaging-tickets>` created by other"
" users."
msgstr ""

# 40ec5fe352f04110beb208e9a70e29fa
#: ../../internals/contributing/index.txt:47
msgid ""
"Really, **ANYONE** can do something to help make Django better and greater!"
msgstr ""

# afe498920ed64574a97c4beb4d7cbc75
#: ../../internals/contributing/index.txt:49
msgid "Browse the following sections to find out how:"
msgstr ""

# fb29c4eea91c46d0aeba48da0b8aeb52
#: ../../internals/contributing/localizing.txt:3
msgid "Localizing Django"
msgstr ""

# 7bfef3f68a4c4577ad717ac34fd70697
#: ../../internals/contributing/localizing.txt:5
msgid ""
"Various parts of Django, such as the admin site and validation error "
"messages, are internationalized. This means they display differently "
"depending on each user's language or country. For this, Django uses the same"
" internationalization and localization infrastructure available to Django "
"applications, described in the :doc:`i18n documentation "
"</topics/i18n/index>`."
msgstr ""

# f06308fd66f54e8e84882dcbec576b40
#: ../../internals/contributing/localizing.txt:12
msgid "Translations"
msgstr ""

# eed129a8cff84fb78886f75907c80919
#: ../../internals/contributing/localizing.txt:14
msgid ""
"Translations are contributed by Django users worldwide. The translation work"
" is coordinated at `Transifex`_."
msgstr ""

# d6c714e842f740b0a62df3341c08d6fc
#: ../../internals/contributing/localizing.txt:17
msgid ""
"If you find an incorrect translation or want to discuss specific "
"translations, go to the `Django project page`_. If you would like to help "
"out with translating or add a language that isn't yet translated, here's "
"what to do:"
msgstr ""

# 197bcd3c07744ed39b6c20068a4a1b4f
#: ../../internals/contributing/localizing.txt:21
msgid "Join the `Django i18n mailing list`_ and introduce yourself."
msgstr ""

# d031440f7d77406cbc5484a39769a3ad
#: ../../internals/contributing/localizing.txt:23
msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ""

# ee2b775fc8f74b9084edf105d88d912c
#: ../../internals/contributing/localizing.txt:25
msgid "Signup at `Transifex`_ and visit the `Django project page`_."
msgstr ""

# cd5981e404724c15b10d415e8ffa3a87
#: ../../internals/contributing/localizing.txt:27
msgid ""
"On the `Django project page`_, choose the language you want to work on, "
"**or** -- in case the language doesn't exist yet -- request a new language "
"team by clicking on the \"Request language\" link and selecting the "
"appropriate language."
msgstr ""

# 6a5c2403c3304b598d8746151d890c93
#: ../../internals/contributing/localizing.txt:32
msgid ""
"Then, click the \"Join this Team\" button to become a member of this team. "
"Every team has at least one coordinator who is responsible to review your "
"membership request. You can of course also contact the team coordinator to "
"clarify procedural problems and handle the actual translation process."
msgstr ""

# 813aecf2fdba460d8f8726833cf0ef60
#: ../../internals/contributing/localizing.txt:38
msgid ""
"Once you are a member of a team choose the translation resource you want to "
"update on the team page. For example the \"core\" resource refers to the "
"translation catalogue that contains all non-contrib translations. Each of "
"the contrib apps also have a resource (prefixed with \"contrib\")."
msgstr ""

# 626fdeec92fa433483d7e7a13b961eda
#: ../../internals/contributing/localizing.txt:44
msgid ""
"For more information about how to use Transifex, read the `Transifex User "
"Guide`_."
msgstr ""

# 976e4bff02ef44d7967ae49eec86d35e
#: ../../internals/contributing/localizing.txt:48
msgid "Formats"
msgstr ""

# e9e8192cf2104ee28c2575ae236cc320
#: ../../internals/contributing/localizing.txt:50
msgid ""
"You can also review ``conf/locale/<locale>/formats.py``. This file describes"
" the date, time and numbers formatting particularities of your locale. See "
":ref:`format-localization` for details."
msgstr ""

# 736f1a3a21b9460085339989cdb8e761
#: ../../internals/contributing/localizing.txt:54
msgid ""
"The format files aren't managed by the use of Transifex. To change them, you"
" must :doc:`create a patch<writing-code/submitting-patches>` against the "
"Django source tree, as for any code change:"
msgstr ""

# 77a6cb652bf645b086d48d55e70de408
#: ../../internals/contributing/localizing.txt:58
msgid "Create a diff against the current Git master branch."
msgstr ""

# 3f07549f75e94b1ba168ab8ee2ca0c63
#: ../../internals/contributing/localizing.txt:60
msgid ""
"Open a ticket in Django's ticket system, set its ``Component`` field to "
"``Translations``, and attach the patch to it."
msgstr ""

# 824c46b4eb754d6fa95a6051d1edad7a
#: ../../internals/contributing/new-contributors.txt:3
msgid "Advice for new contributors"
msgstr ""

# be36cdfc70ed4b04af9016a1aef7b9c2
#: ../../internals/contributing/new-contributors.txt:5
msgid ""
"New contributor and not sure what to do? Want to help but just don't know "
"how to get started? This is the section for you."
msgstr ""

# cd33e91ea861402cb91b19a900519555
#: ../../internals/contributing/new-contributors.txt:9
msgid "First steps"
msgstr ""

# 804f07f172914613b5e34b893c90327f
#: ../../internals/contributing/new-contributors.txt:11
msgid "Start with these easy tasks to discover Django's development process."
msgstr ""

# 5d092188293e490897cc0964cb3a19f6
#: ../../internals/contributing/new-contributors.txt:13
msgid "**Triage tickets**"
msgstr ""

# 4d42858779fd46e8a2dd0c4f4a97207a
#: ../../internals/contributing/new-contributors.txt:15
msgid ""
"If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can "
"reproduce it and it seems valid, make a note that you confirmed the bug and "
"accept the ticket. Make sure the ticket is filed under the correct component"
" area. Consider writing a patch that adds a test for the bug's behavior, "
"even if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-"
"triaging`"
msgstr ""

# 183f74697f6149a597ab0a89c5c4874d
#: ../../internals/contributing/new-contributors.txt:22
msgid ""
"**Look for tickets that are accepted and review patches to build familiarity"
" with the codebase and the process**"
msgstr ""

# 323b2303e0834ece986256e9507ad462
#: ../../internals/contributing/new-contributors.txt:25
msgid ""
"Mark the appropriate flags if a patch needs docs or tests. Look through the "
"changes a patch makes, and keep an eye out for syntax that is incompatible "
"with older but still supported versions of Python. Run the tests and make "
"sure they pass on your system.  Where possible and relevant, try them out on"
" a database other than SQLite. Leave comments and feedback!"
msgstr ""

# 24958332b7a14fe1adcf09c185314ce5
#: ../../internals/contributing/new-contributors.txt:31
msgid "**Keep old patches up to date**"
msgstr ""

# 2bfc721aeccc4965b5a1a0d892e41f53
#: ../../internals/contributing/new-contributors.txt:33
msgid ""
"Oftentimes the codebase will change between a patch being submitted and the "
"time it gets reviewed. Make sure it still applies cleanly and functions as "
"expected. Simply updating a patch is both useful and important! See more on "
":doc:`writing-code/submitting-patches`."
msgstr ""

# df5da49c057942b694506046712dd04f
#: ../../internals/contributing/new-contributors.txt:38
msgid "**Write some documentation**"
msgstr ""

# bf0d9299985a471e89ccbbee1e57cf35
#: ../../internals/contributing/new-contributors.txt:40
msgid ""
"Django's documentation is great but it can always be improved. Did you find "
"a typo? Do you think that something should be clarified? Go ahead and "
"suggest a documentation patch! See also the guide on :doc:`writing-"
"documentation`, in particular the tips for :ref:`improving-the-"
"documentation`."
msgstr ""

# c94c2bc2f539403881b7f227052cd4e8
#: ../../internals/contributing/new-contributors.txt:48
msgid ""
"The `reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# 6406886b342347ca8bf8681dbfdefb84
#: ../../internals/contributing/new-contributors.txt:58
msgid "Guidelines"
msgstr ""

# 9ac49d24706647d992c8d87011d9103e
#: ../../internals/contributing/new-contributors.txt:60
msgid ""
"As a newcomer on a large project, it's easy to experience frustration. "
"Here's some advice to make your work on Django more useful and rewarding."
msgstr ""

# 0bc49e9c9f0141959080c09f8d5224c4
#: ../../internals/contributing/new-contributors.txt:63
msgid ""
"**Pick a subject area that you care about, that you are familiar with, or "
"that you want to learn about**"
msgstr ""

# 684a88087a184d288faa3b9583bae49d
#: ../../internals/contributing/new-contributors.txt:66
msgid ""
"You don't already have to be an expert on the area you want to work on; you "
"become an expert through your ongoing contributions to the code."
msgstr ""

# 012f533c3a374dc7b07922a0c612efd8
#: ../../internals/contributing/new-contributors.txt:69
msgid "**Analyze tickets' context and history**"
msgstr ""

# bc4a2d3655f94caaa8b8d85093d0b97d
#: ../../internals/contributing/new-contributors.txt:71
msgid ""
"Trac isn't an absolute; the context is just as important as the words. When "
"reading Trac, you need to take into account who says things, and when they "
"were said. Support for an idea two years ago doesn't necessarily mean that "
"the idea will still have support. You also need to pay attention to who "
"*hasn't* spoken -- for example, if a core team member hasn't been recently "
"involved in a discussion, then a ticket may not have the support required to"
" get into trunk."
msgstr ""

# 42ad99bacd724f69bf2066415146d4cb
#: ../../internals/contributing/new-contributors.txt:79
msgid "**Start small**"
msgstr ""

# 88f38a5edf5541698647bba68191a72f
#: ../../internals/contributing/new-contributors.txt:81
msgid ""
"It's easier to get feedback on a little issue than on a big one. See the "
"`easy pickings`_."
msgstr ""

# eeb2717aeff6495aa448154e11c1fe34
#: ../../internals/contributing/new-contributors.txt:84
msgid ""
"**If you're going to engage in a big task, make sure that your idea has "
"support first**"
msgstr ""

# ec661aeeecae469a96acb9d50eb06968
#: ../../internals/contributing/new-contributors.txt:87
msgid ""
"This means getting someone else to confirm that a bug is real before you fix"
" the issue, and ensuring that the core team supports a proposed feature "
"before you go implementing it."
msgstr ""

# 88c1592edb1a4b7da2124b4a74c0393d
#: ../../internals/contributing/new-contributors.txt:91
msgid "**Be bold! Leave feedback!**"
msgstr ""

# 665bf0bd027645639f88f27a6672d001
#: ../../internals/contributing/new-contributors.txt:93
msgid ""
"Sometimes it can be scary to put your opinion out to the world and say "
"\"this ticket is correct\" or \"this patch needs work\", but it's the only "
"way the project moves forward. The contributions of the broad Django "
"community ultimately have a much greater impact than that of the core "
"developers. We can't do it without YOU!"
msgstr ""

# c039f4198b3c41af857cf12638d5b67c
#: ../../internals/contributing/new-contributors.txt:99
msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr ""

# 538cb7b5e3c04f7e8d6e6ecd9861e802
#: ../../internals/contributing/new-contributors.txt:101
msgid ""
"If you're really not certain if a ticket is ready, don't mark it as such. "
"Leave a comment instead, letting others know your thoughts.  If you're "
"mostly certain, but not completely certain, you might also try asking on IRC"
" to see if someone else can confirm your suspicions."
msgstr ""

# 825a8672e4fb42b89e439899f7aea401
#: ../../internals/contributing/new-contributors.txt:106
msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""

# 11fc9fd5e6054408a19038e4e03b7ad2
#: ../../internals/contributing/new-contributors.txt:108
msgid ""
"Focus on one or two tickets, see them through from start to finish, and "
"repeat. The shotgun approach of taking on lots of tickets and letting some "
"fall by the wayside ends up doing more harm than good."
msgstr ""

# 5a223ba7c026437cad01eb4f01eb0553
#: ../../internals/contributing/new-contributors.txt:112
msgid "**Be rigorous**"
msgstr ""

# 898be3e5a9374e2484a728dd7ffa201a
#: ../../internals/contributing/new-contributors.txt:114
msgid ""
"When we say \":pep:`8`, and must have docs and tests\", we mean it. If a "
"patch doesn't have docs and tests, there had better be a good reason. "
"Arguments like \"I couldn't find any existing tests of this feature\" don't "
"carry much weight--while it may be true, that means you have the extra-"
"important job of writing the very first tests for that feature, not that you"
" get a pass from writing tests altogether."
msgstr ""

# 8815bd8e0eb5493f93fe5ac978f3ebf1
#: ../../internals/contributing/new-contributors.txt:126
msgid "FAQ"
msgstr ""

# 5ba46077400d427191750789365c03fa
#: ../../internals/contributing/new-contributors.txt:128
msgid ""
"**This ticket I care about has been ignored for days/weeks/months! What can "
"I do to get it committed?**"
msgstr ""

# e920f401646a4cfc91acdffc477766b9
#: ../../internals/contributing/new-contributors.txt:131
msgid ""
"First off, it's not personal. Django is entirely developed by volunteers "
"(even the core developers), and sometimes folks just don't have time. The "
"best thing to do is to send a gentle reminder to the django-developers "
"mailing list asking for review on the ticket, or to bring it up in the "
"#django-dev IRC channel."
msgstr ""

# 272e5b1a5d4a4dc68b097bfa2b69bbea
#: ../../internals/contributing/new-contributors.txt:137
msgid ""
"**I'm sure my ticket is absolutely 100% perfect, can I mark it as RFC "
"myself?**"
msgstr ""

# 7e102542215f47cca3b211b5c65f2162
#: ../../internals/contributing/new-contributors.txt:140
msgid ""
"Short answer: No. It's always better to get another set of eyes on a ticket."
" If you're having trouble getting that second set of eyes, see question 1, "
"above."
msgstr ""

# ef341cde8c37420cbe671e2b7f8ca7d4
#: ../../internals/contributing/new-contributors.txt:144
msgid "**My ticket has been in DDN forever! What should I do?**"
msgstr ""

# d677acaa4565439da0f325a451d943b1
#: ../../internals/contributing/new-contributors.txt:146
msgid ""
"Design Decision Needed requires consensus about the right solution.  At the "
"very least it needs consensus among the core developers, and ideally it has "
"consensus from the community as well. The best way to accomplish this is to "
"start a thread on the django-developers mailing list, and for very complex "
"issues to start a wiki page summarizing the problem and the possible "
"solutions."
msgstr ""

# 1a075190f180498a94391615da003243
#: ../../internals/contributing/triaging-tickets.txt:3
msgid "Triaging tickets"
msgstr ""

# 148e9f529cfc41a6bd71de4c895e4a6a
#: ../../internals/contributing/triaging-tickets.txt:5
msgid ""
"Django uses Trac_ for managing the work on the code base. Trac is a "
"community-tended garden of the bugs people have found and the features "
"people would like to see added. As in any garden, sometimes there are weeds "
"to be pulled and sometimes there are flowers and vegetables that need "
"picking. We need your help to sort out one from the other, and in the end we"
" all benefit together."
msgstr ""

# 99cfae7e3eda4dd2ad9d880c8b06efa6
#: ../../internals/contributing/triaging-tickets.txt:12
msgid ""
"Like all gardens, we can aspire to perfection but in reality there's no such"
" thing. Even in the most pristine garden there are still snails and insects."
" In a community garden there are also helpful people who -- with the best of"
" intentions -- fertilize the weeds and poison the roses. It's the job of the"
" community as a whole to self-manage, keep the problems to a minimum, and "
"educate those coming into the community so that they can become valuable "
"contributing members."
msgstr ""

# f03dfe162b034c4183626be5845bc751
#: ../../internals/contributing/triaging-tickets.txt:20
msgid ""
"Similarly, while we aim for Trac to be a perfect representation of the state"
" of Django's progress, we acknowledge that this simply will not happen. By "
"distributing the load of Trac maintenance to the community, we accept that "
"there will be mistakes. Trac is \"mostly accurate\", and we give allowances "
"for the fact that sometimes it will be wrong. That's okay. We're "
"perfectionists with deadlines."
msgstr ""

# e3d8cd44d4514ef4923159dc05c479ed
#: ../../internals/contributing/triaging-tickets.txt:27
msgid ""
"We rely on the community to keep participating, keep tickets as accurate as "
"possible, and raise issues for discussion on our mailing lists when there is"
" confusion or disagreement."
msgstr ""

# 29c8a911a88b4f89b795d4a434ccc646
#: ../../internals/contributing/triaging-tickets.txt:31
msgid ""
"Django is a community project, and every contribution helps. We can't do "
"this without YOU!"
msgstr ""

# 6b57713599674ba59b60dfcd8a2f97c3
#: ../../internals/contributing/triaging-tickets.txt:35
msgid "Triage workflow"
msgstr ""

# cbd32eb8a3444ec0a6b580c70b8ce46f
#: ../../internals/contributing/triaging-tickets.txt:37
msgid ""
"Unfortunately, not all bug reports and feature requests in the ticket "
"tracker provide all the :doc:`required details<bugs-and-features>`. A number"
" of tickets have patches, but those patches don't meet all the requirements "
"of a :ref:`good patch<patch-style>`."
msgstr ""

# ee4519cf00954611a8fff70b7c5b461a
#: ../../internals/contributing/triaging-tickets.txt:42
msgid ""
"One way to help out is to *triage* tickets that have been created by other "
"users. The core team and several community members work on this regularly, "
"but more help is always appreciated."
msgstr ""

# d3c993ed81264aafb3d2598199e01802
#: ../../internals/contributing/triaging-tickets.txt:46
msgid ""
"Most of the workflow is based around the concept of a ticket's :ref:`triage "
"stages <triage-stages>`. Each stage describes where in its lifetime a given "
"ticket is at any time. Along with a handful of flags, this attribute easily "
"tells us what and who each ticket is waiting on."
msgstr ""

# e1fe7649f75b4d639cf4fbf2a7211d89
#: ../../internals/contributing/triaging-tickets.txt:51
msgid "Since a picture is worth a thousand words, let's start there:"
msgstr ""

# c5b0ca4bab6a4e97bd10e870815660c8
#: ../../internals/contributing/triaging-tickets.txt:58
msgid "We've got two roles in this diagram:"
msgstr ""

# f488759ca15c4d9fb6cf7b27fd5b3150
#: ../../internals/contributing/triaging-tickets.txt:60
msgid ""
":doc:`Committers</internals/committers>` (also called core developers): "
"people with commit access who are responsible for making the big decisions, "
"writing large portions of the code and integrating the contributions of the "
"community."
msgstr ""

# 0faf6843bcca4de9a2388d7982a0310e
#: ../../internals/contributing/triaging-tickets.txt:65
msgid ""
"Ticket triagers: anyone in the Django community who chooses to become "
"involved in Django's development process. Our Trac installation is "
"intentionally left open to the public, and anyone can triage tickets. Django"
" is a community project, and we encourage :ref:`triage by the community<how-"
"can-i-help-with-triaging>`."
msgstr ""

# d65d04f8ac564e6e9baacea932489614
#: ../../internals/contributing/triaging-tickets.txt:71
msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr ""

# 37e1897950da413083991c658e5c408c
#: ../../internals/contributing/triaging-tickets.txt:73
msgid ""
"Alice creates a ticket, and uploads an incomplete patch (no tests, incorrect"
" implementation)."
msgstr ""

# 602131ef11714613a0d1ff9c76d4b449
#: ../../internals/contributing/triaging-tickets.txt:76
msgid ""
"Bob reviews the patch, marks it \"Accepted\", \"needs tests\", and \"patch "
"needs improvement\", and leaves a comment telling Alice how the patch could "
"be improved."
msgstr ""

# 471b9d23f2fe426f998d5604bc3c3a9e
#: ../../internals/contributing/triaging-tickets.txt:80
msgid ""
"Alice updates the patch, adding tests (but not changing the implementation)."
" She removes the two flags."
msgstr ""

# cacee027b53345cc955d75865c21fac8
#: ../../internals/contributing/triaging-tickets.txt:83
msgid ""
"Charlie reviews the patch and resets the \"patch needs improvement\" flag "
"with another comment about improving the implementation."
msgstr ""

# 35f7f359e49b4401ace96324e030accd
#: ../../internals/contributing/triaging-tickets.txt:86
msgid ""
"Alice updates the patch, fixing the implementation. She removes the \"patch "
"needs improvement\" flag."
msgstr ""

# a748542bcad942d9a61924ec573ed730
#: ../../internals/contributing/triaging-tickets.txt:89
msgid "Daisy reviews the patch, and marks it RFC."
msgstr ""

# 2cf6f2af1a2d4afa9ed04ccbc35876ec
#: ../../internals/contributing/triaging-tickets.txt:91
msgid ""
"Jacob, a core developer, reviews the RFC patch, applies it to his checkout, "
"and commits it."
msgstr ""

# ecc151e173f24ea8813cb7598e04ab0e
#: ../../internals/contributing/triaging-tickets.txt:94
msgid ""
"Some tickets require much less feedback than this, but then again some "
"tickets require much much more."
msgstr ""

# 19b228ab4fa0459296c44dea7af2745f
#: ../../internals/contributing/triaging-tickets.txt:100
msgid "Triage stages"
msgstr ""

# 2e4233912a39484a9add2db8f9e6bffc
#: ../../internals/contributing/triaging-tickets.txt:102
msgid ""
"Below we describe in more detail the various stages that a ticket may flow "
"through during its lifetime."
msgstr ""

# 7902a0332ece4ea2b024ebf96ad40aa0
#: ../../internals/contributing/triaging-tickets.txt:106
msgid "Unreviewed"
msgstr ""

# ac88c3ba9df34bafa700742983da96ec
#: ../../internals/contributing/triaging-tickets.txt:108
msgid ""
"The ticket has not been reviewed by anyone who felt qualified to make a "
"judgment about whether the ticket contained a valid issue, a viable feature,"
" or ought to be closed for any of the various reasons."
msgstr ""

# 36b0585ffd704f6f9a2857588552bc4e
#: ../../internals/contributing/triaging-tickets.txt:113
msgid "Accepted"
msgstr ""

# 465263e997ca447bba70e8c7ecc44970
#: ../../internals/contributing/triaging-tickets.txt:115
msgid ""
"The big grey area! The absolute meaning of \"accepted\" is that the issue "
"described in the ticket is valid and is in some stage of being worked on. "
"Beyond that there are several considerations:"
msgstr ""

# 128edd9548f544a985f5201785956068
#: ../../internals/contributing/triaging-tickets.txt:119
msgid "**Accepted + No Flags**"
msgstr ""

# 1c840ab2410d48ee8298e3239141d0f9
#: ../../internals/contributing/triaging-tickets.txt:121
msgid ""
"The ticket is valid, but no one has submitted a patch for it yet. Often this"
" means you could safely start writing a patch for it."
msgstr ""

# 105c35f248374e628ebad6da968d7627
#: ../../internals/contributing/triaging-tickets.txt:124
msgid "**Accepted + Has Patch**"
msgstr ""

# 242b1dc71e0c44aa8cc709b16a2afa8a
#: ../../internals/contributing/triaging-tickets.txt:126
msgid ""
"The ticket is waiting for people to review the supplied patch. This means "
"downloading the patch and trying it out, verifying that it contains tests "
"and docs, running the test suite with the included patch, and leaving "
"feedback on the ticket."
msgstr ""

# 284e595efe3449a0b416abf70202f56e
#: ../../internals/contributing/triaging-tickets.txt:131
msgid "**Accepted + Has Patch + (any other flag)**"
msgstr ""

# 62f6b5b1d40849aca95fad65afb971c2
#: ../../internals/contributing/triaging-tickets.txt:133
msgid ""
"This means the ticket has been reviewed, and has been found to need further "
"work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. "
"\"Patch needs improvement\" will generally be accompanied by a comment on "
"the ticket explaining what is needed to improve the code."
msgstr ""

# 02d119f0c05a4654ad337838c1abf0e9
#: ../../internals/contributing/triaging-tickets.txt:139
msgid "Design Decision Needed"
msgstr ""

# eaa76c1d225a4e109242b16bb120fe50
#: ../../internals/contributing/triaging-tickets.txt:141
msgid ""
"This stage is for issues which may be contentious, may be backwards "
"incompatible, or otherwise involve high-level design decisions. These issues"
" should be discussed either in the ticket comments or on `django-"
"developers`_."
msgstr ""

# e56101f2d32448c597c8dd1ea8980283
#: ../../internals/contributing/triaging-tickets.txt:145
msgid ""
"If a ticket has been marked as \"DDN\", decisions are generally eventually "
"made by the core committers, however that is not a requirement. See the "
":ref:`New contributors' FAQ<new-contributors-faq>` for \"My ticket has been "
"in DDN forever! What should I do?\""
msgstr ""

# 9df958251ffc4118af388f0ed99c9ecc
#: ../../internals/contributing/triaging-tickets.txt:150
msgid ""
"This stage will often be used for feature requests. It can also be used for "
"issues that *might* be bugs, depending on opinion or interpretation. Obvious"
" bugs (such as crashes, incorrect query results, or non-compliance with a "
"standard) skip this stage and move straight to \"Accepted\"."
msgstr ""

# 34a482ac739444fbb123bdd37fcfe6ea
#: ../../internals/contributing/triaging-tickets.txt:156
msgid "Ready For Checkin"
msgstr ""

# 81f82aeadba64241af6dea36caacd7e5
#: ../../internals/contributing/triaging-tickets.txt:158
msgid ""
"The ticket was reviewed by any member of the community other than the person"
" who supplied the patch and found to meet all the requirements for a commit-"
"ready patch. A core committer now needs to give the patch a final review "
"prior to being committed. See the :ref:`New contributors' FAQ<new-"
"contributors-faq>` for \"My ticket has been in RFC forever! What should I "
"do?\""
msgstr ""

# bd2bd7a18ebb4bac97186b97ff4b7f37
#: ../../internals/contributing/triaging-tickets.txt:166
msgid "Someday/Maybe"
msgstr ""

# 358942785b3a4866a2db0e784e4b021e
#: ../../internals/contributing/triaging-tickets.txt:168
msgid ""
"Generally only used for vague/high-level features or design ideas. These "
"tickets are uncommon and overall less useful since they don't describe "
"concrete actionable issues. They are enhancement requests that we might "
"consider adding someday to the framework if an excellent patch is submitted."
" These tickets are not a high priority."
msgstr ""

# e4a74e69b67e4769adf8472de5fb8ae7
#: ../../internals/contributing/triaging-tickets.txt:175
msgid "Other triage attributes"
msgstr ""

# 48091e8aa1554f38935da6ebc2fa76e8
#: ../../internals/contributing/triaging-tickets.txt:177
msgid ""
"A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

# dc27758fb10c457ca10835cc87ae8993
#: ../../internals/contributing/triaging-tickets.txt:180
msgid ""
"This means the ticket has an associated :doc:`patch<writing-code/submitting-"
"patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

# 103d24f32f6049a3841760322ae83a15
#: ../../internals/contributing/triaging-tickets.txt:185
msgid ""
"This flag is used for tickets with patches that need associated "
"documentation. Complete documentation of features is a prerequisite before "
"we can check them into the codebase."
msgstr ""

# 53d1e74683e24d0fa1cb4ce1ee8c90c1
#: ../../internals/contributing/triaging-tickets.txt:190
msgid ""
"This flags the patch as needing associated unit tests. Again, this is a "
"required part of a valid patch."
msgstr ""

# f99c1886b9904aebbf2dab1671c2155f
#: ../../internals/contributing/triaging-tickets.txt:194
msgid ""
"This flag means that although the ticket *has* a patch, it's not quite ready"
" for checkin. This could mean the patch no longer applies cleanly, there is "
"a flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

# 3d1b7df4e1e5484a8ff2af72ca1f8ee5
#: ../../internals/contributing/triaging-tickets.txt:200
msgid "Tickets that would require small, easy, patches."
msgstr ""

# dd94572a44004991a99773bb443ff604
#: ../../internals/contributing/triaging-tickets.txt:202
msgid "Tickets should be categorized by *type* between:"
msgstr ""

# 498d100d68ec413491dfe9b8e2003547
#: ../../internals/contributing/triaging-tickets.txt:205
msgid "For adding something new."
msgstr ""

# c89e910888884c699ceb4ba930cb16b3
#: ../../internals/contributing/triaging-tickets.txt:208
msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

# de365c1faac549b180c3656495d65a2c
#: ../../internals/contributing/triaging-tickets.txt:211
msgid ""
"For when nothing is broken but something could be made cleaner, better, "
"faster, stronger."
msgstr ""

# c45e932799474d05a3ebb50dd9df7033
#: ../../internals/contributing/triaging-tickets.txt:214
msgid ""
"Tickets should also be classified into *components* indicating which area of"
" the Django codebase they belong to. This makes tickets better organized and"
" easier to find."
msgstr ""

# 4598fb281a0742ddbc71eff48c9390c2
#: ../../internals/contributing/triaging-tickets.txt:218
msgid ""
"The *severity* attribute is used to identify blockers, that is, issues which"
" should get fixed before releasing the next version of Django. Typically "
"those issues are bugs causing regressions from earlier versions or "
"potentially causing severe data losses. This attribute is quite rarely used "
"and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

# 3dd1c98c78e44efea249cf13bad98409
#: ../../internals/contributing/triaging-tickets.txt:224
msgid ""
"Finally, it is possible to use the *version* attribute to indicate in which "
"version the reported bug was identified."
msgstr ""

# fca972eb4c684103a65054bb8bd43a3e
#: ../../internals/contributing/triaging-tickets.txt:230
msgid "Closing Tickets"
msgstr ""

# 1badaeaf85cb4c2281f3de278890d283
#: ../../internals/contributing/triaging-tickets.txt:232
msgid ""
"When a ticket has completed its useful lifecycle, it's time for it to be "
"closed. Closing a ticket is a big responsibility, though. You have to be "
"sure that the issue is really resolved, and you need to keep in mind that "
"the reporter of the ticket may not be happy to have their ticket closed "
"(unless it's fixed, of course). If you're not certain about closing a "
"ticket, just leave a comment with your thoughts instead."
msgstr ""

# bf4cd615ea2e4b4e82aeb911abd4d6e7
#: ../../internals/contributing/triaging-tickets.txt:239
msgid ""
"If you do close a ticket, you should always make sure of the following:"
msgstr ""

# 8a1e7c0f92c948c9a0953c074de53da6
#: ../../internals/contributing/triaging-tickets.txt:241
msgid "Be certain that the issue is resolved."
msgstr ""

# b97e2720da5f47109cdd51131737d403
#: ../../internals/contributing/triaging-tickets.txt:243
msgid "Leave a comment explaining the decision to close the ticket."
msgstr ""

# 34234546d12f4c999ac9a8388fc9ba6f
#: ../../internals/contributing/triaging-tickets.txt:245
msgid ""
"If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""

# 81bfaeff19fe4dddb6f3af80ee0e4a31
#: ../../internals/contributing/triaging-tickets.txt:247
msgid ""
"If the ticket is a duplicate, reference the original ticket. Also cross-"
"reference the closed ticket by leaving a comment in the original one -- this"
" allows to access more related information about the reported bug or "
"requested feature."
msgstr ""

# 92ea855468cf4f2095bd238a16a60fa1
#: ../../internals/contributing/triaging-tickets.txt:252
msgid ""
"**Be polite.** No one likes having their ticket closed. It can be "
"frustrating or even discouraging. The best way to avoid turning people off "
"from contributing to Django is to be polite and friendly and to offer "
"suggestions for how they could improve this ticket and other tickets in the "
"future."
msgstr ""

# 6009f9f9384b4cefadf3b565a14e70e2
#: ../../internals/contributing/triaging-tickets.txt:258
msgid "A ticket can be resolved in a number of ways:"
msgstr ""

# 581781d0f9194c479ca5a7777b8baa8d
#: ../../internals/contributing/triaging-tickets.txt:261
msgid ""
"Used by the core developers once a patch has been rolled into Django and the"
" issue is fixed."
msgstr ""

# 89a8ddcf4e814536b40614c4f05efe5f
#: ../../internals/contributing/triaging-tickets.txt:265
msgid ""
"Used if the ticket is found to be incorrect. This means that the issue in "
"the ticket is actually the result of a user error, or describes a problem "
"with something other than Django, or isn't a bug report or feature request "
"at all (for example, some new users submit support queries as tickets)."
msgstr ""

# 4145da246428424684a3f0ff7cebde57
#: ../../internals/contributing/triaging-tickets.txt:272
msgid ""
"Used when a core developer decides that this request is not appropriate for "
"consideration in Django. This is usually chosen after discussion in the "
"`django-developers`_ mailing list. Feel free to start or join in discussions"
" of \"wontfix\" tickets on the django-developers_ mailing list, but please "
"do not reopen tickets closed as \"wontfix\" by a :doc:`core "
"developer</internals/committers>`."
msgstr ""

# 733d0ae3341241f6a27607b3c2005f9e
#: ../../internals/contributing/triaging-tickets.txt:280
msgid ""
"Used when another ticket covers the same issue. By closing duplicate "
"tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

# 8a8a67e4d29942c0adb64b1caa1dc008
#: ../../internals/contributing/triaging-tickets.txt:285
msgid ""
"Used when the ticket doesn't contain enough detail to replicate the original"
" bug."
msgstr ""

# 1e08db3f8dcb41b7800d5666a2765d22
#: ../../internals/contributing/triaging-tickets.txt:289
msgid ""
"Used when the ticket does not contain enough information to replicate the "
"reported issue but is potentially still valid. The ticket should be reopened"
" when more information is supplied."
msgstr ""

# 12138eab32624bd393919816a733c944
#: ../../internals/contributing/triaging-tickets.txt:293
msgid ""
"If you believe that the ticket was closed in error -- because you're still "
"having the issue, or it's popped up somewhere else, or the triagers have "
"made a mistake -- please reopen the ticket and provide further information. "
"Again, please do not reopen tickets that have been marked as \"wontfix\" by "
"core developers and bring the issue to django-developers_ instead."
msgstr ""

# 28a93ee413e74633b3dd09c5899790d0
#: ../../internals/contributing/triaging-tickets.txt:302
msgid "How can I help with triaging?"
msgstr ""

# 60c83bc57d004210b8eaa467ead894f3
#: ../../internals/contributing/triaging-tickets.txt:304
msgid ""
"Although the core developers make the big decisions in the ticket triage "
"process, there's a lot that general community members can do to help the "
"triage process. Really, **ANYONE** can help."
msgstr ""

# fb052ae6967440f0be4561c145a9a973
#: ../../internals/contributing/triaging-tickets.txt:308
msgid ""
"Start by `creating an account on Trac`_. If you have an account but have "
"forgotten your password, you can reset it using the `password reset page`_."
msgstr ""

# 79aa738b927f461f8d83a5fdf10c3a56
#: ../../internals/contributing/triaging-tickets.txt:311
msgid "Then, you can help out by:"
msgstr ""

# 2c3a59eeb6a8493b91ca5d4f63a34046
#: ../../internals/contributing/triaging-tickets.txt:313
msgid "Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\" or \"duplicate.\""
msgstr ""

# bc02f271009749ffa386a475bfcb2cc0
#: ../../internals/contributing/triaging-tickets.txt:315
msgid ""
"Promoting \"Unreviewed\" tickets to \"Design decision needed\" if a design "
"decision needs to be made, or \"Accepted\" in case of obvious bugs or "
"sensible, clearly defined, feature requests."
msgstr ""

# d7d98a0a74844c51893fbd08ca3dbd46
#: ../../internals/contributing/triaging-tickets.txt:319
msgid ""
"Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" "
"flags for tickets where they are incorrectly set."
msgstr ""

# ad942829875a4ab6be65195d8588123c
#: ../../internals/contributing/triaging-tickets.txt:322
msgid ""
"Setting the \"`Easy pickings`_\" flag for tickets that are small and "
"relatively straightforward."
msgstr ""

# 3d78ca5a01db466090ebcc559a292168
#: ../../internals/contributing/triaging-tickets.txt:325
msgid ""
"Checking that old tickets are still valid. If a ticket hasn't seen any "
"activity in a long time, it's possible that the problem has been fixed but "
"the ticket hasn't yet been closed."
msgstr ""

# f99d34e59af84415b6bc437e2f436ecb
#: ../../internals/contributing/triaging-tickets.txt:329
msgid ""
"Contacting the owners of tickets that have been claimed but have not seen "
"any recent activity. If the owner doesn't respond after a week or so, remove"
" the owner's claim on the ticket."
msgstr ""

# debb7060188d4ae78780f249788517fe
#: ../../internals/contributing/triaging-tickets.txt:333
msgid ""
"Identifying trends and themes in the tickets. If there a lot of bug reports "
"about a particular part of Django, it may indicate we should consider "
"refactoring that part of the code. If a trend is emerging, you should raise "
"it for discussion (referencing the relevant tickets) on `django-"
"developers`_."
msgstr ""

# 24e779d959324821874350cf5c3102a3
#: ../../internals/contributing/triaging-tickets.txt:339
msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

# d9d8d39487394ddfbf4886c472b20a87
#: ../../internals/contributing/triaging-tickets.txt:341
msgid ""
"Verify if patches submitted by other users are correct. If they do and also "
"contain appropriate documentation and tests then move them to the \"Ready "
"for Checkin\" stage. If they don't then leave a comment to explain why and "
"set the corresponding flags (\"Patch needs improvement\", \"Needs tests\" "
"etc.)."
msgstr ""

# e7eb1df513144da29bc4e816edc9af6e
#: ../../internals/contributing/triaging-tickets.txt:349
msgid ""
"The `Reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# c9d7eca4f40c4a589d2ae36322f8db03
#: ../../internals/contributing/triaging-tickets.txt:353
msgid "You can also find more :doc:`new-contributors`."
msgstr ""

# ff2b4d03bbbf4072b481710440a23cc8
#: ../../internals/contributing/triaging-tickets.txt:357
msgid ""
"However, we do ask the following of all general community members working in"
" the ticket database:"
msgstr ""

# 04d768bd815f489292df2c3690fbed43
#: ../../internals/contributing/triaging-tickets.txt:360
msgid ""
"Please **don't** close tickets as \"wontfix.\" The core developers will make"
" the final determination of the fate of a ticket, usually after consultation"
" with the community."
msgstr ""

# 662681d8d42e42aeb0e4467ea8ca3a82
#: ../../internals/contributing/triaging-tickets.txt:364
msgid ""
"Please **don't** promote your own tickets to \"Ready for checkin\". You may "
"mark other people's tickets which you've reviewed as \"Ready for checkin\", "
"but you should get at minimum one other community member to review a patch "
"that you submit."
msgstr ""

# 69f15af6a5744ce28356528ecbb1c90c
#: ../../internals/contributing/triaging-tickets.txt:369
msgid ""
"Please **don't** reverse a decision that has been made by a :doc:`core "
"developer</internals/committers>`. If you disagree with a decision that has "
"been made, please post a message to `django-developers`_."
msgstr ""

# 097c88b1adf24f6783e4c4bcfb618691
#: ../../internals/contributing/triaging-tickets.txt:373
msgid ""
"If you're unsure if you should be making a change, don't make the change but"
" instead leave a comment with your concerns on the ticket, or post a message"
" to `django-developers`_. It's okay to be unsure, but your input is still "
"valuable."
msgstr ""

# 2e64438a77ce4bad8c7d93187b426d22
#: ../../internals/contributing/writing-code/coding-style.txt:3
msgid "Coding style"
msgstr ""

# 64d3ca004dc742ccb1ce453460726269
#: ../../internals/contributing/writing-code/coding-style.txt:5
msgid ""
"Please follow these coding standards when writing code for inclusion in "
"Django."
msgstr ""

# 706a8166da6e45db97890ccde61abf6e
#: ../../internals/contributing/writing-code/coding-style.txt:8
msgid "Python style"
msgstr ""

# 3444ab22052049baa04444186e2f3d15
#: ../../internals/contributing/writing-code/coding-style.txt:10
msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

# 52eb3575d3004146a6c3cb96fde0082d
#: ../../internals/contributing/writing-code/coding-style.txt:12
msgid ""
"You could use a tool like `pep8`_ to check for some problems in this area, "
"but remember that :pep:`8` is only a guide, so respect the style of the "
"surrounding code as a primary goal."
msgstr ""

# 5765b920039749e2a5a9b48718109d5d
#: ../../internals/contributing/writing-code/coding-style.txt:16
msgid ""
"One big exception to :pep:`8` is our preference of longer line lengths. "
"We're well into the 21st Century, and we have high-resolution computer "
"screens that can fit way more than 79 characters on a screen. Don't limit "
"lines of code to 79 characters if it means the code looks significantly "
"uglier or is harder to read."
msgstr ""

# d9aa30d95fd54feeb3d7926d8307096d
#: ../../internals/contributing/writing-code/coding-style.txt:22
msgid "Use four spaces for indentation."
msgstr ""

# c7059fab81914879ac31ba9464d20165
#: ../../internals/contributing/writing-code/coding-style.txt:24
msgid ""
"Use underscores, not camelCase, for variable, function and method names "
"(i.e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters``)."
msgstr ""

# 8bf58cf5c2124738aa38d7d56e4a58d2
#: ../../internals/contributing/writing-code/coding-style.txt:27
msgid ""
"Use ``InitialCaps`` for class names (or for factory functions that return "
"classes)."
msgstr ""

# ee6ececeae294480bb4e5577e3d6d738
#: ../../internals/contributing/writing-code/coding-style.txt:30
msgid "In docstrings, use \"action words\" such as::"
msgstr ""

# c164aeb9b3ee44d5adce885da7c2535d
#: ../../internals/contributing/writing-code/coding-style.txt:38
msgid "Here's an example of what not to do::"
msgstr ""

# d1d7757263c44370b4fd964749af9e97
#: ../../internals/contributing/writing-code/coding-style.txt:47
msgid "Template style"
msgstr ""

# 999b60cbc41248f5947250c84a0f69e7
#: ../../internals/contributing/writing-code/coding-style.txt:49
msgid ""
"In Django template code, put one (and only one) space between the curly "
"brackets and the tag contents."
msgstr ""

# de0984d1a2b44598899a8f01c5bb9a55
#: ../../internals/contributing/writing-code/coding-style.txt:52
msgid "Do this:"
msgstr ""

# b2c51553098e43aca00562605bcf5b8b
#: ../../internals/contributing/writing-code/coding-style.txt:58
msgid "Don't do this:"
msgstr ""

# 4a7872873e5c47a7a54816d3b982044b
#: ../../internals/contributing/writing-code/coding-style.txt:65
msgid "View style"
msgstr ""

# 2a29cd6b0a124a71a64e004a78bcd4dc
#: ../../internals/contributing/writing-code/coding-style.txt:67
msgid ""
"In Django views, the first parameter in a view function should be called "
"``request``."
msgstr ""

# 018da68e9363499dabaf3237e95a49bc
# 419e1774db4448f0b6383a739f384c11
# 60c579ce6a9048939f5fa0def52dc17e
#: ../../internals/contributing/writing-code/coding-style.txt:70
#: ../../internals/contributing/writing-code/coding-style.txt:86
#: ../../internals/contributing/writing-code/coding-style.txt:101
msgid "Do this::"
msgstr ""

# 9529daed1cab4af0883fc0f5fe2cbc37
# 354711df2cb54308a8bfda4ae4b85158
# 227f6d1208bc42ed862ee1ddc195b08b
#: ../../internals/contributing/writing-code/coding-style.txt:75
#: ../../internals/contributing/writing-code/coding-style.txt:92
#: ../../internals/contributing/writing-code/coding-style.txt:110
msgid "Don't do this::"
msgstr ""

# 2daf1643a1d74574b713b7b02ab274e1
#: ../../internals/contributing/writing-code/coding-style.txt:81
msgid "Model style"
msgstr ""

# 7b7a1fc2e2bd440ead642bcea664a976
#: ../../internals/contributing/writing-code/coding-style.txt:83
msgid ""
"Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

# c5bf5de43be74917815fcf64aaf86e77
#: ../../internals/contributing/writing-code/coding-style.txt:98
msgid ""
"The ``class Meta`` should appear *after* the fields are defined, with a "
"single blank line separating the fields and the class definition."
msgstr ""

# 82acba28cea842aaaecdfb7c3e13fec8
#: ../../internals/contributing/writing-code/coding-style.txt:118
msgid "Don't do this, either::"
msgstr ""

# 839308009d3d41b795e0809cad674d0f
#: ../../internals/contributing/writing-code/coding-style.txt:127
msgid ""
"The order of model inner classes and standard methods should be as follows "
"(noting that these are not all required):"
msgstr ""

# e9b2df25feea436e9ee678f138cfca90
#: ../../internals/contributing/writing-code/coding-style.txt:130
msgid "All database fields"
msgstr ""

# b99174a2d9f642eeb2cd7fc6bef9d25c
#: ../../internals/contributing/writing-code/coding-style.txt:131
msgid "Custom manager attributes"
msgstr ""

# 3a5ac3d2554946218f32b44f53ce65ce
#: ../../internals/contributing/writing-code/coding-style.txt:132
msgid "``class Meta``"
msgstr ""

# a43b0f1a5f9e448ea3f9c458a6608c6e
#: ../../internals/contributing/writing-code/coding-style.txt:133
msgid "``def __unicode__()``"
msgstr ""

# c30c03a4d83f4e3e872a1b3528eae718
#: ../../internals/contributing/writing-code/coding-style.txt:134
msgid "``def __str__()``"
msgstr ""

# 94cd447edd9741b2b96e9ef60ba64910
#: ../../internals/contributing/writing-code/coding-style.txt:135
msgid "``def save()``"
msgstr ""

# 550774c741324e42b9374b98424639cf
#: ../../internals/contributing/writing-code/coding-style.txt:136
msgid "``def get_absolute_url()``"
msgstr ""

# 2c3fc0fe1a824709860cace012cf54dd
#: ../../internals/contributing/writing-code/coding-style.txt:137
msgid "Any custom methods"
msgstr ""

# b585f044361d4fa2870b0c6a4054461a
#: ../../internals/contributing/writing-code/coding-style.txt:139
msgid ""
"If ``choices`` is defined for a given model field, define each choice as a "
"tuple of tuples, with an all-uppercase name as a class attribute on the "
"model. Example::"
msgstr ""

# c3b5a1e2e9a441688900826da67c2f57
#: ../../internals/contributing/writing-code/coding-style.txt:152
msgid "Use of ``django.conf.settings``"
msgstr ""

# e20859ab6a344dd9adf8c349066cfee8
#: ../../internals/contributing/writing-code/coding-style.txt:154
msgid ""
"Modules should not in general use settings stored in "
"``django.conf.settings`` at the top level (i.e. evaluated when the module is"
" imported). The explanation for this is as follows:"
msgstr ""

# 79965ebc5855426db389f61b7e928d82
#: ../../internals/contributing/writing-code/coding-style.txt:158
msgid ""
"Manual configuration of settings (i.e. not relying on the "
"``DJANGO_SETTINGS_MODULE`` environment variable) is allowed and possible as "
"follows::"
msgstr ""

# 987352cfd4094333a2216f208b21be51
#: ../../internals/contributing/writing-code/coding-style.txt:166
msgid ""
"However, if any setting is accessed before the ``settings.configure`` line, "
"this will not work. (Internally, ``settings`` is a ``LazyObject`` which "
"configures itself automatically when the settings are accessed if it has not"
" already been configured)."
msgstr ""

# 8f3e923835cc49b3b11f5fa538d1c729
#: ../../internals/contributing/writing-code/coding-style.txt:171
msgid "So, if there is a module containing some code as follows::"
msgstr ""

# 5c3d22a7a409472e9778848dff1a29b5
#: ../../internals/contributing/writing-code/coding-style.txt:178
msgid ""
"...then importing this module will cause the settings object to be "
"configured. That means that the ability for third parties to import the "
"module at the top level is incompatible with the ability to configure the "
"settings object manually, or makes it very difficult in some circumstances."
msgstr ""

# 23c6d6a7b97346be9357b204374de608
#: ../../internals/contributing/writing-code/coding-style.txt:183
msgid ""
"Instead of the above code, a level of laziness or indirection must be used, "
"such as ``django.utils.functional.LazyObject``, "
"``django.utils.functional.lazy()`` or ``lambda``."
msgstr ""

# 1c5ce3cceae9403cbfddd526a48afce1
#: ../../internals/contributing/writing-code/coding-style.txt:188
msgid "Miscellaneous"
msgstr ""

# 331a1e776f974fd9bc82c908e1686618
#: ../../internals/contributing/writing-code/coding-style.txt:190
msgid ""
"Mark all strings for internationalization; see the :doc:`i18n documentation "
"</topics/i18n/index>` for details."
msgstr ""

# 72182c5fad1944f19965ccf5e6198a21
#: ../../internals/contributing/writing-code/coding-style.txt:193
msgid ""
"Remove ``import`` statements that are no longer used when you change code. "
"The most common tools for this task are `pyflakes`_ and `pylint`_."
msgstr ""

# 8df77e90352e448bb489bb932d628f4a
#: ../../internals/contributing/writing-code/coding-style.txt:196
msgid ""
"Systematically remove all trailing whitespaces from your code as those add "
"unnecessary bytes, add visual clutter to the patches and can also "
"occasionally cause unnecessary merge conflicts. Some IDE's can be configured"
" to automatically remove them and most VCS tools can be set to highlight "
"them in diff outputs. Note, however, that patches which only remove "
"whitespace (or only make changes for nominal :pep:`8` conformance) are "
"likely to be rejected, since they only introduce noise rather than code "
"improvement. Tidy up when you're next changing code in the area."
msgstr ""

# 4096fd448d824c81aaf2d066960c944f
#: ../../internals/contributing/writing-code/coding-style.txt:205
msgid ""
"Please don't put your name in the code you contribute. Our policy is to keep"
" contributors' names in the ``AUTHORS`` file distributed with Django -- not "
"scattered throughout the codebase itself. Feel free to include a change to "
"the ``AUTHORS`` file in your patch if you make more than a single trivial "
"change."
msgstr ""

# f12b5ceaa03a459e83d48e6736de9c46
#: ../../internals/contributing/writing-code/index.txt:3
msgid "Writing code"
msgstr ""

# 4607ce9293bc47b9a100f542fdf5e227
#: ../../internals/contributing/writing-code/index.txt:5
msgid ""
"So you'd like to write some code to improve Django. Awesome! Browse the "
"following sections to find out how to give your code patches the best "
"chances to be included in Django core:"
msgstr ""

# 2651c41fa2de48aca1206c91e436f7ba
#: ../../internals/contributing/writing-code/submitting-patches.txt:3
msgid "Submitting patches"
msgstr ""

# 7fad2998c9cc422a9e8f851ee1562b9d
#: ../../internals/contributing/writing-code/submitting-patches.txt:5
msgid ""
"We're always grateful for patches to Django's code. Indeed, bug reports with"
" associated patches will get fixed *far* more quickly than those without "
"patches."
msgstr ""

# 995f53c08fcf45358ca631c857d2660c
#: ../../internals/contributing/writing-code/submitting-patches.txt:10
msgid "Typo fixes and trivial documentation changes"
msgstr ""

# f07208e3400e434384548c7a8c33f3a6
#: ../../internals/contributing/writing-code/submitting-patches.txt:12
msgid ""
"If you are fixing a really trivial issue, for example changing a word in the"
" documentation, the preferred way to provide the patch is using GitHub pull "
"requests without a Trac ticket. Trac tickets are still acceptable."
msgstr ""

# c02c25c6902e499f835fba0cc98c85ab
#: ../../internals/contributing/writing-code/submitting-patches.txt:16
msgid ""
"See the :doc:`working-with-git` for more details on how to use pull "
"requests."
msgstr ""

# 3b788a5fa10545cc9105bb34062bfa0e
#: ../../internals/contributing/writing-code/submitting-patches.txt:19
msgid "\"Claiming\" tickets"
msgstr ""

# b634c75d7910466986e0c53e3fe571b6
#: ../../internals/contributing/writing-code/submitting-patches.txt:21
msgid ""
"In an open-source project with hundreds of contributors around the world, "
"it's important to manage communication efficiently so that work doesn't get "
"duplicated and contributors can be as effective as possible."
msgstr ""

# 4dffa8b4e2b44ea5a6883f1d2d9915dc
#: ../../internals/contributing/writing-code/submitting-patches.txt:25
msgid ""
"Hence, our policy is for contributors to \"claim\" tickets in order to let "
"other developers know that a particular bug or feature is being worked on."
msgstr ""

# 5046f62d309d4d6bbe0d5d9f34ee12ba
#: ../../internals/contributing/writing-code/submitting-patches.txt:28
msgid ""
"If you have identified a contribution you want to make and you're capable of"
" fixing it (as measured by your coding ability, knowledge of Django "
"internals and time availability), claim it by following these steps:"
msgstr ""

# 0082eb6e354a40d894574b002f4eaac9
#: ../../internals/contributing/writing-code/submitting-patches.txt:32
msgid ""
"`Create an account`_ to use in our ticket system. If you have an account but"
" have forgotten your password, you can reset it using the `password reset "
"page`_."
msgstr ""

# ec47c9350d07437594962412b1c62b1c
#: ../../internals/contributing/writing-code/submitting-patches.txt:36
msgid ""
"If a ticket for this issue doesn't exist yet, create one in our `ticket "
"tracker`_."
msgstr ""

# be993138e9a74564b58a4e58fc49edb1
#: ../../internals/contributing/writing-code/submitting-patches.txt:39
msgid ""
"If a ticket for this issue already exists, make sure nobody else has claimed"
" it. To do this, look at the \"Assigned to\" section of the ticket. If it's "
"assigned to \"nobody,\" then it's available to be claimed. Otherwise, "
"somebody else is working on this ticket, and you either find another "
"bug/feature to work on, or contact the developer working on the ticket to "
"offer your help."
msgstr ""

# c0a82f6291bc476e993f454f461b72b6
#: ../../internals/contributing/writing-code/submitting-patches.txt:46
msgid ""
"Log into your account, if you haven't already, by clicking \"Login\" in the "
"upper right of the ticket page."
msgstr ""

# 946794132baa40e1ac5c22822f5f898e
#: ../../internals/contributing/writing-code/submitting-patches.txt:49
msgid "Claim the ticket:"
msgstr ""

# c748c6ea7c3e4c568c56804fb0a26693
#: ../../internals/contributing/writing-code/submitting-patches.txt:51
msgid ""
"click the \"accept\" radio button under \"Action\" near the bottom of the "
"page,"
msgstr ""

# d1eb80f5ea0c44abbe6e6ab94731b62f
#: ../../internals/contributing/writing-code/submitting-patches.txt:53
msgid "then click \"Submit changes.\""
msgstr ""

# 0b7861b2660f45dfac53c778d063d1a6
#: ../../internals/contributing/writing-code/submitting-patches.txt:56
msgid ""
"The Django software foundation requests that anyone contributing more than a"
" trivial patch to Django sign and submit a `Contributor License Agreement`_,"
" this ensures that the Django Software Foundation has clear license to all "
"contributions allowing for a clear license for all users."
msgstr ""

# 4109c7c2a5114259bf3dbc5313f6932a
#: ../../internals/contributing/writing-code/submitting-patches.txt:66
msgid "Ticket claimers' responsibility"
msgstr ""

# 9a5f698ec28d4314aaafe571e5039cc0
#: ../../internals/contributing/writing-code/submitting-patches.txt:68
msgid ""
"Once you've claimed a ticket, you have a responsibility to work on that "
"ticket in a reasonably timely fashion. If you don't have time to work on it,"
" either unclaim it or don't claim it in the first place!"
msgstr ""

# cf117facbaa94e15a5b8147478900f9c
#: ../../internals/contributing/writing-code/submitting-patches.txt:72
msgid ""
"If there's no sign of progress on a particular claimed ticket for a week or "
"two, another developer may ask you to relinquish the ticket claim so that "
"it's no longer monopolized and somebody else can claim it."
msgstr ""

# a7f8a07c02eb4830818d8c240e105b2d
#: ../../internals/contributing/writing-code/submitting-patches.txt:76
msgid ""
"If you've claimed a ticket and it's taking a long time (days or weeks) to "
"code, keep everybody updated by posting comments on the ticket. If you don't"
" provide regular updates, and you don't respond to a request for a progress "
"report, your claim on the ticket may be revoked."
msgstr ""

# 852148a8f706441aa56aa2201652d8a0
#: ../../internals/contributing/writing-code/submitting-patches.txt:81
msgid "As always, more communication is better than less communication!"
msgstr ""

# f9d7d5a119564980af20caf00929a1db
#: ../../internals/contributing/writing-code/submitting-patches.txt:84
msgid "Which tickets should be claimed?"
msgstr ""

# 97b9ea599b494dc2935d3eb078a14954
#: ../../internals/contributing/writing-code/submitting-patches.txt:86
msgid ""
"Of course, going through the steps of claiming tickets is overkill in some "
"cases."
msgstr ""

# a1401f2429744adea3291a381929f3a5
#: ../../internals/contributing/writing-code/submitting-patches.txt:89
msgid ""
"In the case of small changes, such as typos in the documentation or small "
"bugs that will only take a few minutes to fix, you don't need to jump "
"through the hoops of claiming tickets. Just submit your patch and be done "
"with it."
msgstr ""

# 69fc7f636bf34ac1bbeec5e630760bc9
#: ../../internals/contributing/writing-code/submitting-patches.txt:94
msgid ""
"Of course, it is *always* acceptable, regardless whether someone has claimed"
" it or not, to submit patches to a ticket if you happen to have a patch "
"ready."
msgstr ""

# b52388fb11ef48ddadb6fcaf017cbfb3
#: ../../internals/contributing/writing-code/submitting-patches.txt:100
msgid "Patch style"
msgstr ""

# dea9d7ed1d1641eca6f7e1b31884a8a5
#: ../../internals/contributing/writing-code/submitting-patches.txt:102
msgid ""
"Make sure that any contribution you do fulfills at least the following "
"requirements:"
msgstr ""

# 26c44caf68f647cfb7649ae17b6c67fa
#: ../../internals/contributing/writing-code/submitting-patches.txt:105
msgid ""
"The code required to fix a problem or add a feature is an essential part of "
"a patch, but it is not the only part. A good patch should also include a "
":doc:`regression test <unit-tests>` to validate the behavior that has been "
"fixed and to prevent the problem from arising again. Also, if some tickets "
"are relevant to the code that you've written, mention the ticket numbers in "
"some comments in the test so that one can easily trace back the relevant "
"discussions after your patch gets committed, and the tickets get closed."
msgstr ""

# 6f07cc35e8d545f8a71b45ab0b7cc1a9
#: ../../internals/contributing/writing-code/submitting-patches.txt:113
msgid ""
"If the code associated with a patch adds a new feature, or modifies behavior"
" of an existing feature, the patch should also contain documentation."
msgstr ""

# 58ecd5e20b984eeba2e4f47b119d0b67
#: ../../internals/contributing/writing-code/submitting-patches.txt:117
msgid ""
"You can use either GitHub branches and pull requests or direct patches to "
"publish your work. If you use the Git workflow, then you should announce "
"your branch in the ticket by including a link to your branch. When you think"
" your work is ready to be merged in create a pull request."
msgstr ""

# 1789dc50274a4249b34856e42fadf18c
#: ../../internals/contributing/writing-code/submitting-patches.txt:122
msgid "See the :doc:`working-with-git` documentation for mode details."
msgstr ""

# 6eaf394a6f324f9ea5affd97c1e685e4
#: ../../internals/contributing/writing-code/submitting-patches.txt:124
msgid ""
"You can also use patches in Trac. When using this style, follow these "
"guidelines."
msgstr ""

# c59af6cef0c347d0af9899205c0988ea
#: ../../internals/contributing/writing-code/submitting-patches.txt:127
msgid ""
"Submit patches in the format returned by the ``git diff`` command. An "
"exception is for code changes that are described more clearly in plain "
"English than in code. Indentation is the most common example; it's hard to "
"read patches when the only difference in code is that it's indented."
msgstr ""

# 70f326320a8a4272b96039ce8fd1b9bd
#: ../../internals/contributing/writing-code/submitting-patches.txt:133
msgid ""
"Attach patches to a ticket in the `ticket tracker`_, using the \"attach "
"file\" button. Please *don't* put the patch in the ticket description or "
"comment unless it's a single line patch."
msgstr ""

# e0027674edd54471a480c74368257dd9
#: ../../internals/contributing/writing-code/submitting-patches.txt:137
msgid ""
"Name the patch file with a ``.diff`` extension; this will let the ticket "
"tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

# 0dc7173d8a6447b2a19a4d23fe8fc019
#: ../../internals/contributing/writing-code/submitting-patches.txt:140
msgid "Regardless of the way you submit your work, follow these steps."
msgstr ""

# b6209f26ad1944eaa560043c4fac311f
#: ../../internals/contributing/writing-code/submitting-patches.txt:142
msgid "Make sure your code matches our :doc:`coding-style`."
msgstr ""

# 506d3736ec9a4d7f99426a37d834cdac
#: ../../internals/contributing/writing-code/submitting-patches.txt:144
msgid ""
"Check the \"Has patch\" box on the ticket details. This will make it obvious"
" that the ticket includes a patch, and it will add the ticket to the `list "
"of tickets with patches`_."
msgstr ""

# 07d05a586ef64c06b07e2a3cd9402c9a
#: ../../internals/contributing/writing-code/submitting-patches.txt:150
msgid "Non-trivial patches"
msgstr ""

# d9951af2cba243a3b0cff07f708c026d
#: ../../internals/contributing/writing-code/submitting-patches.txt:152
msgid ""
"A \"non-trivial\" patch is one that is more than a simple bug fix. It's a "
"patch that introduces Django functionality and makes some sort of design "
"decision."
msgstr ""

# 953cc33d98b345d0a5c91bee7f9f124c
#: ../../internals/contributing/writing-code/submitting-patches.txt:155
msgid ""
"If you provide a non-trivial patch, include evidence that alternatives have "
"been discussed on `django-developers`_."
msgstr ""

# a1cf24b2231b4b37894a75c5ccd2a4e8
#: ../../internals/contributing/writing-code/submitting-patches.txt:158
msgid ""
"If you're not sure whether your patch should be considered non-trivial, just"
" ask."
msgstr ""

# b0e7c0e2f3c147e69204652504eee576
#: ../../internals/contributing/writing-code/submitting-patches.txt:162
msgid "Javascript patches"
msgstr ""

# ab6286e371a745a9a41944f451ec1fb3
#: ../../internals/contributing/writing-code/submitting-patches.txt:164
msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on"
" admin javascript performance and minimizing overall admin media file size. "
"Serving compressed or \"minified\" versions of javascript files is "
"considered best practice in this regard."
msgstr ""

# d0f09a16d9b24fac84a193a41a6bff44
#: ../../internals/contributing/writing-code/submitting-patches.txt:170
msgid ""
"To that end, patches for javascript files should include both the original "
"code for future development (e.g. ``foo.js``), and a compressed version for "
"production use (e.g. ``foo.min.js``). Any links to the file in the codebase "
"should point to the compressed version."
msgstr ""

# 57fdf76de66342dab9cc1ce001c3605b
#: ../../internals/contributing/writing-code/submitting-patches.txt:176
msgid "Compressing JavaScript"
msgstr ""

# 55d8f928d2ca40cc9015770bf2a3078c
#: ../../internals/contributing/writing-code/submitting-patches.txt:178
msgid ""
"To simplify the process of providing optimized javascript code, Django "
"includes a handy python script which should be used to create a \"minified\""
" version. To run it::"
msgstr ""

# 5bd9ae611090413a9e7ee437f9ec9597
#: ../../internals/contributing/writing-code/submitting-patches.txt:184
msgid ""
"Behind the scenes, ``compress.py`` is a front-end for Google's `Closure "
"Compiler`_ which is written in Java. However, the Closure Compiler library "
"is not bundled with Django directly, so those wishing to contribute complete"
" javascript patches will need to download and install the library "
"independently."
msgstr ""

# a89ec3739a434ca78b684cc4e1c152d5
#: ../../internals/contributing/writing-code/submitting-patches.txt:190
msgid ""
"The Closure Compiler library requires Java version 6 or higher (Java 1.6 or "
"higher on Mac OS X. Note that Mac OS X 10.5 and earlier did not ship with "
"Java 1.6 by default, so it may be necessary to upgrade your Java "
"installation before the tool will be functional. Also note that even after "
"upgrading Java, the default ``/usr/bin/java`` command may remain linked to "
"the previous Java binary, so relinking that command may be necessary as "
"well.)"
msgstr ""

# 75e6643ca9be466cb0a2e8160f240880
#: ../../internals/contributing/writing-code/submitting-patches.txt:197
msgid ""
"Please don't forget to run ``compress.py`` and include the ``diff`` of the "
"minified scripts when submitting patches for Django's javascript."
msgstr ""

# a7a1b14d79f44d48b7c9cc75f80cb7be
#: ../../internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

# 23ae5d27b0bd4f63954009687ed256ae
#: ../../internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the"
" code base. It's our policy to make sure all tests pass at all times."
msgstr ""

# 6c305e3333884209aa27deb545be8d43
#: ../../internals/contributing/writing-code/unit-tests.txt:8
msgid "The tests cover:"
msgstr ""

# a6b6d15cb15e4af9a2c04da1f10d9c94
#: ../../internals/contributing/writing-code/unit-tests.txt:10
msgid "Models and the database API (``tests/modeltests``),"
msgstr ""

# 8fd5f6e719124643b2e3af276432a8ba
#: ../../internals/contributing/writing-code/unit-tests.txt:11
msgid "Everything else in core Django code (``tests/regressiontests``),"
msgstr ""

# cee2cd71ddf54f808ad0e4056584326a
#: ../../internals/contributing/writing-code/unit-tests.txt:12
msgid ""
":ref:`contrib-apps` (``django/contrib/<app>/tests`` or "
"``tests/regressiontests/<app>_...``)."
msgstr ""

# 822ac2fd629545b195411fd772fdaba1
#: ../../internals/contributing/writing-code/unit-tests.txt:15
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

# 3238a6a2a5384fc9ac1c181d229224db
#: ../../internals/contributing/writing-code/unit-tests.txt:17
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`Testing Django applications "
"</topics/testing/overview>` for an explanation of how to write new tests."
msgstr ""

# 7ad81c6f1b87425fa84cb92e5fe3899a
#: ../../internals/contributing/writing-code/unit-tests.txt:24
msgid "Running the unit tests"
msgstr ""

# 988408b649dd4d9e803e0cc2b47e8166
#: ../../internals/contributing/writing-code/unit-tests.txt:27
msgid "Quickstart"
msgstr ""

# b06585a4aaa54aa2bf832020bb0bfbe7
#: ../../internals/contributing/writing-code/unit-tests.txt:29
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To make it easy to get started, Django provides a sample "
"settings module that uses the SQLite database. To run the tests with this "
"sample ``settings`` module, ``cd`` into the Django ``tests/`` directory and "
"run:"
msgstr ""

# eeb0a50c92b74d99aa9f7320f3a594a9
#: ../../internals/contributing/writing-code/unit-tests.txt:39
msgid ""
"If you get an ``ImportError: No module named django.contrib`` error, you "
"need to add your install of Django to your ``PYTHONPATH``."
msgstr ""

# 8111732a111641258967757b5b75664c
#: ../../internals/contributing/writing-code/unit-tests.txt:45
msgid "Using another ``settings`` module"
msgstr ""

# d7c49eaf02b94046b17db7ac5feb2934
#: ../../internals/contributing/writing-code/unit-tests.txt:47
msgid ""
"The included settings module allows you to run the test suite using SQLite. "
"If you want to test behavior using a different database (and if you're "
"proposing patches for Django, it's a good idea to test across databases), "
"you may need to define your own settings file."
msgstr ""

# 871abfc6a65247b48774d0b07cb588f9
#: ../../internals/contributing/writing-code/unit-tests.txt:52
msgid ""
"To run the tests with different settings, ``cd`` to the ``tests/`` directory"
" and type:"
msgstr ""

# bfb3e96928ea4d14a3d3abdcd9968928
#: ../../internals/contributing/writing-code/unit-tests.txt:59
msgid ""
"The :setting:`DATABASES` setting in this test settings module needs to "
"define two databases:"
msgstr ""

# a72c879e667040dfbbdaa553e5371c64
#: ../../internals/contributing/writing-code/unit-tests.txt:62
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing"
msgstr ""

# bcd7ae82ba5c4b2bbc1f6e131db864f2
#: ../../internals/contributing/writing-code/unit-tests.txt:65
msgid ""
"A database with the alias ``other``. The ``other`` database is used to "
"establish that queries can be directed to different databases. As a result, "
"this database can use any backend you want. It doesn't need to use the same "
"backend as the ``default`` database (although it can use the same backend if"
" you want to)."
msgstr ""

# d17cf2f88a1d449590d4df8f6d197763
#: ../../internals/contributing/writing-code/unit-tests.txt:71
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

# e6a55795833547a9b4eebb557b97953c
#: ../../internals/contributing/writing-code/unit-tests.txt:74
msgid ""
"The :setting:`USER` option for each of your databases needs to specify an "
"existing user account for the database."
msgstr ""

# 93deee4efc444db29bd51af55c43a807
#: ../../internals/contributing/writing-code/unit-tests.txt:77
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the "
":setting:`USER` that has been specified."
msgstr ""

# 889e59865cce4d1c8355cd5834669a48
#: ../../internals/contributing/writing-code/unit-tests.txt:80
msgid ""
"The :setting:`NAME` option must be the name of an existing database to which"
" the given user has permission to connect. The unit tests will not touch "
"this database; the test runner creates a new database whose name is "
":setting:`NAME` prefixed with ``test_``, and this test database is deleted "
"when the tests are finished. This means your user account needs permission "
"to execute ``CREATE DATABASE``."
msgstr ""

# ed25bc946eb84fb6b49fb568c6167d4f
#: ../../internals/contributing/writing-code/unit-tests.txt:87
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`TEST_CHARSET` in the"
" settings dictionary for the applicable database."
msgstr ""

# 535ee4ce1c1344ea96ddca155d4110a1
#: ../../internals/contributing/writing-code/unit-tests.txt:93
msgid "Running only some of the tests"
msgstr ""

# 1556df0da7ed47ed8da10822c43842fe
#: ../../internals/contributing/writing-code/unit-tests.txt:95
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of"
" the unit tests by appending the names of the test modules to "
"``runtests.py`` on the command line."
msgstr ""

# a39a90badd8b45d48d6c207d1414e7f9
#: ../../internals/contributing/writing-code/unit-tests.txt:101
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

# 5cd4bd519c434c52aa06f2612a81e36e
#: ../../internals/contributing/writing-code/unit-tests.txt:108
msgid ""
"How do you find out the names of individual tests? Look in "
"``tests/modeltests`` and ``tests/regressiontests`` — each directory name "
"there is the name of a test. Contrib app names are also valid test names."
msgstr ""

# 13fa87b437324384a8ba70573d6fc992
#: ../../internals/contributing/writing-code/unit-tests.txt:112
msgid ""
"If you just want to run a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

# dd85af30eb80419d9518636ac7a03f0f
#: ../../internals/contributing/writing-code/unit-tests.txt:120
msgid ""
"Going beyond that, you can specify an individual test method like this:"
msgstr ""

# 6bed2516aa0848cba9b22d668dddb66e
#: ../../internals/contributing/writing-code/unit-tests.txt:127
msgid "Running the Selenium tests"
msgstr ""

# bacc0ea40caf485583d33d38da8385cc
#: ../../internals/contributing/writing-code/unit-tests.txt:129
msgid ""
"Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a"
" real Web browser. To allow those tests to run and not be skipped, you must "
"install the selenium_ package (version > 2.13) into your Python path."
msgstr ""

# 512c94de8f4d45cdb58e0ea5e2cabfdf
#: ../../internals/contributing/writing-code/unit-tests.txt:133
msgid "Then, run the tests normally, for example:"
msgstr ""

# b63d916f69bf46b7a34367c1d6730536
#: ../../internals/contributing/writing-code/unit-tests.txt:142
msgid "Running all the tests"
msgstr ""

# 6ef062aeccd34be2a1c2b8583b75004a
#: ../../internals/contributing/writing-code/unit-tests.txt:144
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

# 6b003e55a3a149c2bc087ef341e21335
#: ../../internals/contributing/writing-code/unit-tests.txt:147
msgid "PyYAML_"
msgstr ""

# 7a3f036378ba4195ba4ec0f62966934e
#: ../../internals/contributing/writing-code/unit-tests.txt:148
msgid "Markdown_"
msgstr ""

# 71a057d3359045c9a561b2eaf5e42b65
#: ../../internals/contributing/writing-code/unit-tests.txt:149
msgid "Textile_"
msgstr ""

# 80c458aa79964bf9a38070db8f40bd7e
#: ../../internals/contributing/writing-code/unit-tests.txt:150
msgid "Docutils_"
msgstr ""

# 9f83439bad384b189d3f7999bb095083
#: ../../internals/contributing/writing-code/unit-tests.txt:151
msgid "setuptools_"
msgstr ""

# fd354a933f8d4deaacee5e65e865be65
#: ../../internals/contributing/writing-code/unit-tests.txt:152
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

# 78a5ca0e1fae48c881c70640ed9d04e9
#: ../../internals/contributing/writing-code/unit-tests.txt:153
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

# 27bc767e455144f0929765b3fe73972f
#: ../../internals/contributing/writing-code/unit-tests.txt:154
msgid "selenium_ (if also using Python >= 2.6)"
msgstr ""

# c632f47854e24fc3873cc34601790b5e
#: ../../internals/contributing/writing-code/unit-tests.txt:156
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

# 8e3bb4d8adf84d9098a7a02562dee217
#: ../../internals/contributing/writing-code/unit-tests.txt:159
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

# 0b6930a253a84ad89993c8d04f037d5e
#: ../../internals/contributing/writing-code/unit-tests.txt:172
msgid "Code coverage"
msgstr ""

# b06a57befe7144588fad3f2a7f722774
#: ../../internals/contributing/writing-code/unit-tests.txt:174
msgid ""
"Contributors are encouraged to run coverage on the test suite to identify "
"areas that need additional tests. The coverage tool installation and use is "
"described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

# ee2da229932b4368913b3a6b228428f1
#: ../../internals/contributing/writing-code/unit-tests.txt:178
msgid ""
"To run coverage on the Django test suite using the standard test settings::"
msgstr ""

# d6ecfdb6227f424db3a51544a378141d
#: ../../internals/contributing/writing-code/unit-tests.txt:182
msgid "After running coverage, generate the html report by running::"
msgstr ""

# b3d0ef81d7a34a21b87bfb0c8daa2260
#: ../../internals/contributing/writing-code/unit-tests.txt:186
msgid ""
"When running coverage for the Django tests, the included ``.coveragerc`` "
"settings file  defines ``coverage_html`` as the output directory for the "
"report and also excludes several directories not relevant to the results "
"(test code or external code included in Django)."
msgstr ""

# c6658f3d05ca4f2d9c724c7e79f6f2d7
#: ../../internals/contributing/writing-code/unit-tests.txt:194
msgid "Contrib apps"
msgstr ""

# c88957c9242c4d40869e11452366a09b
#: ../../internals/contributing/writing-code/unit-tests.txt:196
msgid ""
"Tests for contrib apps go in their respective directories under "
"``django/contrib``, in a ``tests.py`` file. You can split the tests over "
"multiple modules by using a ``tests`` directory in the normal Python way."
msgstr ""

# 3a99e02e82234529aeaf18899cf11a83
#: ../../internals/contributing/writing-code/unit-tests.txt:200
msgid ""
"For the tests to be found, a ``models.py`` file must exist, even if it's "
"empty. If you have URLs that need to be mapped, put them in "
"``tests/urls.py``."
msgstr ""

# 3a30e5cd27a24a0198bd6130cd3d7b90
#: ../../internals/contributing/writing-code/unit-tests.txt:203
msgid ""
"To run tests for just one contrib app (e.g. ``markup``), use the same method"
" as above::"
msgstr ""

# be54832d9b754fb3a4e5ce83f9c779f5
#: ../../internals/contributing/writing-code/working-with-git.txt:2
msgid "Working with Git and GitHub"
msgstr ""

# f3286757592e45b08d0968ee1ca26e92
#: ../../internals/contributing/writing-code/working-with-git.txt:4
msgid ""
"This section explains how the community can contribute code to Django via "
"pull requests. If you're interested in how core developers handle them, see "
":doc:`../committing-code`."
msgstr ""

# 2213beeb44aa41e3833bb4cd95457644
#: ../../internals/contributing/writing-code/working-with-git.txt:8
msgid ""
"Below, we are going to show how to create a GitHub pull request containing "
"the changes for Trac ticket #xxxxx. By creating a fully-ready pull request "
"you will make the committers' job easier, meaning that your work is more "
"likely to be merged into Django."
msgstr ""

# 4362a34b7b9c4ad0af5f35efbac7da48
#: ../../internals/contributing/writing-code/working-with-git.txt:13
msgid ""
"You could also upload a traditional patch to Trac, but it's less practical "
"for reviews."
msgstr ""

# e8f5e62dcb7c4cc4ad6686320b946150
#: ../../internals/contributing/writing-code/working-with-git.txt:17
msgid "Installing Git"
msgstr ""

# 935c7abb1f644f7684ee02009ee4f579
#: ../../internals/contributing/writing-code/working-with-git.txt:19
msgid ""
"Django uses `Git`_ for its source control. You can `download <http://git-"
"scm.com/download>`_ Git, but it's often easier to install with your "
"operating system's package manager."
msgstr ""

# 6477cefb8e2b4dc488549c4fddda09bc
#: ../../internals/contributing/writing-code/working-with-git.txt:23
msgid ""
"Django's `Git repository`_ is hosted on `GitHub`_, and it is recommended "
"that you also work using GitHub."
msgstr ""

# f1e2c19c178d4c9e87c5715a91c0e23c
#: ../../internals/contributing/writing-code/working-with-git.txt:26
msgid ""
"After installing Git the first thing you should do is setup your name and "
"email::"
msgstr ""

# 11ae566956004fef8f6e16922f017e86
#: ../../internals/contributing/writing-code/working-with-git.txt:32
msgid ""
"Note that ``user.name`` should be your real name, not your GitHub nick. "
"GitHub should know the email you use in the ``user.email`` field, as this "
"will be used to associate your commits with your GitHub account."
msgstr ""

# b0f8ef3e9d4e4b69a57197a3b2c16c35
#: ../../internals/contributing/writing-code/working-with-git.txt:41
msgid "Setting up local repository"
msgstr ""

# 51a817615c694748a6e6523b85b0752a
#: ../../internals/contributing/writing-code/working-with-git.txt:43
msgid ""
"When you have created your GitHub account, with the nick \"github_nick\", "
"and forked Django's repository, create a local copy of your fork::"
msgstr ""

# 34d032f7343a400293793c07a7b4f674
#: ../../internals/contributing/writing-code/working-with-git.txt:48
msgid ""
"This will create a new directory \"django\", containing a clone of your "
"GitHub repository."
msgstr ""

# 2df11522709a4bd09d372cd9c26542b9
#: ../../internals/contributing/writing-code/working-with-git.txt:51
msgid "Your GitHub repository will be called \"origin\" in Git."
msgstr ""

# 5d63985f080e4da681e2684f74dbd3c4
#: ../../internals/contributing/writing-code/working-with-git.txt:53
msgid ""
"You should also setup django/django as an \"upstream\" remote (that is, tell"
" git that the reference Django repository was the source of your fork of "
"it)::"
msgstr ""

# 9a5d68e9db98494b99895d2a3287fb53
#: ../../internals/contributing/writing-code/working-with-git.txt:59
msgid "You can add other remotes similarly, for example::"
msgstr ""

# c5132187fffe4dd0b98d9bef7fa09aeb
#: ../../internals/contributing/writing-code/working-with-git.txt:64
msgid "Working on a ticket"
msgstr ""

# daba3400f6ed4c608bffa49cc96726eb
#: ../../internals/contributing/writing-code/working-with-git.txt:66
msgid ""
"When working on a ticket create a new branch for the work, and base that "
"work on upstream/master::"
msgstr ""

# a3e8d95e8dc4456dba18739519ac5841
#: ../../internals/contributing/writing-code/working-with-git.txt:71
msgid ""
"The -b flag creates a new branch for you locally. Don't hesitate to create "
"new branches even for the smallest things - that's what they are there for."
msgstr ""

# 4fa9c1b2aef249658b3a3afdde4a8bcc
#: ../../internals/contributing/writing-code/working-with-git.txt:74
msgid ""
"If instead you were working for a fix on the 1.4 branch, you would do::"
msgstr ""

# 92e67577641e43d4b040ccaa46648760
#: ../../internals/contributing/writing-code/working-with-git.txt:78
msgid ""
"Assume the work is carried on ticket_xxxxx branch. Make some changes and "
"commit them::"
msgstr ""

# 0634b9f489cf4b03beeee9e479fe0137
#: ../../internals/contributing/writing-code/working-with-git.txt:83
msgid ""
"When writing the commit message, follow the :ref:`commit message guidelines "
"<committing-guidelines>` to ease the work of the committer. If you're "
"uncomfortable with English, try at least to describe precisely what the "
"commit does."
msgstr ""

# fa934bb2668b45eea6bfba3203969b3d
#: ../../internals/contributing/writing-code/working-with-git.txt:88
msgid ""
"If you need to do additional work on your branch, commit as often as "
"necessary::"
msgstr ""

# 6a5768a5f2d8447b8d089cc63f170483
#: ../../internals/contributing/writing-code/working-with-git.txt:94
msgid "Publishing work"
msgstr ""

# 3157dac710ef4220931b2406c4913283
#: ../../internals/contributing/writing-code/working-with-git.txt:96
msgid "You can publish your work on GitHub just by doing::"
msgstr ""

# da79e89a8b944be68a45eaf9f989b3b5
#: ../../internals/contributing/writing-code/working-with-git.txt:100
msgid ""
"When you go to your GitHub page you will notice a new branch has been "
"created."
msgstr ""

# 95d8dbaa857e4e05bc81bbffe5d79279
#: ../../internals/contributing/writing-code/working-with-git.txt:102
msgid ""
"If you are working on a Trac ticket, you should mention in the ticket that "
"your work is available from branch ticket_xxxxx of your github repo. Include"
" a link to your branch."
msgstr ""

# 8e8388d3573d47699b6b2d7f610190e5
#: ../../internals/contributing/writing-code/working-with-git.txt:106
msgid ""
"Note that the above branch is called a \"topic branch\" in Git parlance. You"
" are free to rewrite the history of this branch, by using ``git rebase`` for"
" example. Other people shouldn't base their work on such a branch, because "
"their clone would become corrupt when you edit commits."
msgstr ""

# 18ec8f65951745d4ab818abdb8cc13d1
#: ../../internals/contributing/writing-code/working-with-git.txt:111
msgid ""
"There are also \"public branches\". These are branches other people are "
"supposed to fork, so the history of these branches should never change. Good"
" examples of public branches are the ``master`` and ``stable/A.B.x`` "
"branches in the django/django repository."
msgstr ""

# 16f4fdc2067545989cb01b3691b2dad0
#: ../../internals/contributing/writing-code/working-with-git.txt:116
msgid ""
"When you think your work is ready to be pulled into Django, you should "
"create a pull request at GitHub. A good pull request means:"
msgstr ""

# f2da49c4d361416eb28748831c382a2a
#: ../../internals/contributing/writing-code/working-with-git.txt:119
msgid ""
"commits with one logical change in each, following the :doc:`coding style "
"<coding-style>`,"
msgstr ""

# 5c0c11075bd0468a9b82927ca5400574
#: ../../internals/contributing/writing-code/working-with-git.txt:122
msgid ""
"well-formed messages for each commit: a summary line and then paragraphs "
"wrapped at 72 characters thereafter -- see the :ref:`committing guidelines "
"<committing-guidelines>` for more details,"
msgstr ""

# 657e4a795f644eda90285933891c5a02
#: ../../internals/contributing/writing-code/working-with-git.txt:126
msgid ""
"documentation and tests, if needed -- actually tests are always needed, "
"except for documentation changes."
msgstr ""

# 5c7b645e30b5463cad2262cd1c7dfa28
#: ../../internals/contributing/writing-code/working-with-git.txt:129
msgid ""
"The test suite must pass and the documentation must build without warnings."
msgstr ""

# 5fb461ec5f814281843cf841b05e10a2
#: ../../internals/contributing/writing-code/working-with-git.txt:131
msgid ""
"Once you have created your pull request, you should add a comment in the "
"related Trac ticket explaining what you've done. In particular you should "
"note the environment in which you ran the tests, for instance: \"all tests "
"pass under SQLite and MySQL\"."
msgstr ""

# 683ee7f1ca32450690f3b1d1d0bf1e5a
#: ../../internals/contributing/writing-code/working-with-git.txt:136
msgid ""
"Pull requests at GitHub have only two states: open and closed. The committer"
" who will deal with your pull request has only two options: merge it or "
"close it. For this reason, it isn't useful to make a pull request until the "
"code is ready for merging -- or sufficiently close that a committer will "
"finish it himself."
msgstr ""

# 2e8679385afc4f7a8783a88900935d5e
#: ../../internals/contributing/writing-code/working-with-git.txt:143
msgid "Rebasing branches"
msgstr ""

# 8070f8da767c4cbe873378f2c9b0b6ac
#: ../../internals/contributing/writing-code/working-with-git.txt:145
msgid ""
"In the example above you created two commits, the \"Fixed ticket_xxxxx\" "
"commit and \"Added two more tests\" commit."
msgstr ""

# 195456006c1f4893a3dfe395700fb476
#: ../../internals/contributing/writing-code/working-with-git.txt:148
msgid ""
"We do not want to have the entire history of your working process in your "
"repository. Your commit \"Added two more tests\" would be unhelpful noise. "
"Instead, we would rather only have one commit containing all your work."
msgstr ""

# ab1c74c02561487a809d64614057c510
#: ../../internals/contributing/writing-code/working-with-git.txt:152
msgid ""
"To rework the history of your branch you can squash the commits into one by "
"using interactive rebase::"
msgstr ""

# 460e24f215544a60a33200c45173c97f
#: ../../internals/contributing/writing-code/working-with-git.txt:157
msgid ""
"The HEAD~2 above is shorthand for two latest commits. The above command will"
" open an editor showing the two commits, prefixed with the word \"pick\"."
msgstr ""

# 47cb30c4ef434b6da57ea7529180dabe
#: ../../internals/contributing/writing-code/working-with-git.txt:160
msgid ""
"Change the second line to \"squash\" instead. This will keep the first "
"commit, and squash the second commit into the first one. Save and quit the "
"editor. A second editor window should open, so you can reword the commit "
"message for the commit now that it includes both your steps."
msgstr ""

# c4adff9863fd406fafea6f3a472db951
#: ../../internals/contributing/writing-code/working-with-git.txt:165
msgid ""
"You can also use the \"edit\" option in rebase. This way you can change a "
"single commit, for example to fix a typo in a docstring::"
msgstr ""

# a9db92bb0d3f437eabf4df692d840a44
#: ../../internals/contributing/writing-code/working-with-git.txt:177
msgid ""
"If your topic branch is already published at GitHub, for example if you're "
"making minor changes to take into account a review, you will need to force- "
"push the changes::"
msgstr ""

# 761605d456c74c568e843f59ceca395f
#: ../../internals/contributing/writing-code/working-with-git.txt:183
msgid ""
"Note that this will rewrite history of ticket_xxxxx - if you check the "
"commit hashes before and after the operation at GitHub you will notice that "
"the commit hashes do not match any more. This is acceptable, as the branch "
"is merely a topic branch, and nobody should be basing their work on it."
msgstr ""

# 8d5f731a8ced44a1a19b2a1b40516682
#: ../../internals/contributing/writing-code/working-with-git.txt:189
msgid "After upstream has changed"
msgstr ""

# 407b7be73fc9440796fc722a95c74601
#: ../../internals/contributing/writing-code/working-with-git.txt:191
msgid ""
"When upstream (django/django) has changed, you should rebase your work. To "
"do this, use::"
msgstr ""

# 8e3400084a2a45cdaf6c8efc08da4b7b
#: ../../internals/contributing/writing-code/working-with-git.txt:197
msgid ""
"The work is automatically rebased using the branch you forked on, in the "
"example case using upstream/master."
msgstr ""

# 567f5aff5672413caa5ebe2b45574b46
#: ../../internals/contributing/writing-code/working-with-git.txt:200
msgid ""
"The rebase command removes all your local commits temporarily, applies the "
"upstream commits, and then applies your local commits again on the work."
msgstr ""

# c2050d0c90824e729dc066264690a876
#: ../../internals/contributing/writing-code/working-with-git.txt:203
msgid ""
"If there are merge conflicts you will need to resolve them and then use "
"``git rebase --continue``. At any point you can use ``git rebase --abort`` "
"to return to the original state."
msgstr ""

# 35386d5536694b4da3da2be9b4a96baa
#: ../../internals/contributing/writing-code/working-with-git.txt:207
msgid "Note that you want to *rebase* on upstream, not *merge* the upstream."
msgstr ""

# a92e09880bb04cc48789788c957334f4
#: ../../internals/contributing/writing-code/working-with-git.txt:209
msgid ""
"The reason for this is that by rebasing, your commits will always be *on top"
" of* the upstream's work, not *mixed in with* the changes in the upstream. "
"This way your branch will contain only commits related to its topic, which "
"makes squashing easier."
msgstr ""

# 3aa9660ed89c410aa52e062014b19c8b
#: ../../internals/contributing/writing-code/working-with-git.txt:215
msgid "After review"
msgstr ""

# fa14425ac0cc4468abaf71ed46f0341b
#: ../../internals/contributing/writing-code/working-with-git.txt:217
msgid ""
"It is unusual to get any non-trivial amount of code into core without "
"changes requested by reviewers. In this case, it is often a good idea to add"
" the changes as one incremental commit to your work. This allows the "
"reviewer to easily check what changes you have done."
msgstr ""

# 2ba7c8da6b774a5985c32a5fc5e003c1
#: ../../internals/contributing/writing-code/working-with-git.txt:222
msgid ""
"In this case, do the changes required by the reviewer. Commit as often as "
"necessary. Before publishing the changes, rebase your work. If you added two"
" commits, you would run::"
msgstr ""

# 735b9662258c4c44b50d728a7a417503
#: ../../internals/contributing/writing-code/working-with-git.txt:228
msgid ""
"Squash the second commit into the first. Write a commit message along the "
"lines of::"
msgstr ""

# 63c28eca277449f4bafe6bfa1fe06f1b
#: ../../internals/contributing/writing-code/working-with-git.txt:235
msgid ""
"Finally push your work back to your GitHub repository. Since you didn't "
"touch the public commits during the rebase, you should not need to force-"
"push::"
msgstr ""

# 094ff967066e4e359e1ca442e2940599
#: ../../internals/contributing/writing-code/working-with-git.txt:240
msgid "Your pull request should now contain the new commit too."
msgstr ""

# 4c97cbe6bcb34f66aaf6ece3d2984809
#: ../../internals/contributing/writing-code/working-with-git.txt:242
msgid ""
"Note that the committer is likely to squash the review commit into the "
"previous commit when committing the code."
msgstr ""

# 1394849e20f04ed48b80e7e979c61a9e
#: ../../internals/contributing/writing-code/working-with-git.txt:246
msgid "Summary"
msgstr ""

# 2a6933f5ca3843e1987f69ad4312184c
#: ../../internals/contributing/writing-code/working-with-git.txt:248
msgid "Work on GitHub if you can."
msgstr ""

# 4b4731c0b65f42f88d85b206a583d166
#: ../../internals/contributing/writing-code/working-with-git.txt:249
msgid ""
"Announce your work on the Trac ticket by linking to your GitHub branch."
msgstr ""

# 9b96f0b870f347a5bd3ac83ad0ca0eda
#: ../../internals/contributing/writing-code/working-with-git.txt:250
msgid "When you have something ready, make a pull request."
msgstr ""

# 8960109a34ba4d42b9ea71f6801e8f37
#: ../../internals/contributing/writing-code/working-with-git.txt:251
msgid "Make your pull requests as good as you can."
msgstr ""

# 05ae2611960e4ea0b7a6a673337c7cd1
#: ../../internals/contributing/writing-code/working-with-git.txt:252
msgid ""
"When doing fixes to your work, use ``git rebase -i`` to squash the commits."
msgstr ""

# d530b7011b1041d2974bcb1850f210c9
#: ../../internals/contributing/writing-code/working-with-git.txt:253
msgid "When upstream has changed, do ``git fetch upstream; git rebase``."
msgstr ""

# aa1e0bfdc3dd4bc4a031209a8549ebd4
#: ../../internals/contributing/writing-documentation.txt:3
msgid "Writing documentation"
msgstr ""

# 6b229845cfd04e56af5d2d895b2426f8
#: ../../internals/contributing/writing-documentation.txt:5
msgid ""
"We place a high importance on consistency and readability of documentation. "
"After all, Django was created in a journalism environment! So we treat our "
"documentation like we treat our code: we aim to improve it as often as "
"possible."
msgstr ""

# a0b96019985542d2b930fbe0684af350
#: ../../internals/contributing/writing-documentation.txt:10
msgid "Documentation changes generally come in two forms:"
msgstr ""

# 08d7fe0101f144009f97a46d7696084a
#: ../../internals/contributing/writing-documentation.txt:12
msgid ""
"General improvements: typo corrections, error fixes and better explanations "
"through clearer writing and more examples."
msgstr ""

# ddb6ca60e3b44b1181c4b26361aabe18
#: ../../internals/contributing/writing-documentation.txt:15
msgid ""
"New features: documentation of features that have been added to the "
"framework since the last release."
msgstr ""

# 5a4fc24cd7d04621b065cbcce494ad8f
#: ../../internals/contributing/writing-documentation.txt:18
msgid ""
"This section explains how writers can craft their documentation changes in "
"the most useful and least error-prone ways."
msgstr ""

# 6fa9e93ffdca499ea9f359ca353d86d6
#: ../../internals/contributing/writing-documentation.txt:22
msgid "Getting the raw documentation"
msgstr ""

# f44aab080adf4522864bf5c350f86f79
#: ../../internals/contributing/writing-documentation.txt:24
msgid ""
"Though Django's documentation is intended to be read as HTML at "
"https://docs.djangoproject.com/, we edit it as a collection of text files "
"for maximum flexibility. These files live in the top-level ``docs/`` "
"directory of a Django release."
msgstr ""

# b6ad6e9f4e9f4601a9563ac423c8ceb1
#: ../../internals/contributing/writing-documentation.txt:29
msgid ""
"If you'd like to start contributing to our docs, get the development version"
" of Django from the source code repository (see :ref:`installing-"
"development-version`). The development version has the latest-and-greatest "
"documentation, just as it has latest-and-greatest code. We also backport "
"documentation fixes and improvements, at the discretion of the committer, to"
" the last release branch. That's because it's highly advantageous to have "
"the docs for the last release be up-to-date and correct (see :ref"
":`differences-between-doc-versions`)."
msgstr ""

# eb2a9b8ef79b4dc886bb8f54974a3b30
#: ../../internals/contributing/writing-documentation.txt:39
msgid "Getting started with Sphinx"
msgstr ""

# 13467f12a7f54c7291a9948ac793bc33
#: ../../internals/contributing/writing-documentation.txt:41
msgid ""
"Django's documentation uses the Sphinx__ documentation system, which in turn"
" is based on docutils__. The basic idea is that lightly-formatted plain-text"
" documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

# 8b2db60ddb254666bc38bc368ff7d967
#: ../../internals/contributing/writing-documentation.txt:48
msgid ""
"To actually build the documentation locally, you'll currently need to "
"install Sphinx -- ``sudo pip install Sphinx`` should do the trick."
msgstr ""

# 679dd186f42541b8b6484117665db836
#: ../../internals/contributing/writing-documentation.txt:53
msgid ""
"Building the Django documentation requires Sphinx 1.0.2 or newer. Sphinx "
"also requires the Pygments__ library for syntax highlighting; building the "
"Django documentation requires Pygments 1.1 or newer (a new-enough version "
"should automatically be installed along with Sphinx)."
msgstr ""

# eb160bedeb164b8fbc30cbc164beb228
#: ../../internals/contributing/writing-documentation.txt:60
msgid ""
"Then, building the HTML is easy; just ``make html`` (or ``make.bat html`` on"
" Windows) from the ``docs`` directory."
msgstr ""

# 2e5aa899fc4940c2a32a6fe7772a36e9
#: ../../internals/contributing/writing-documentation.txt:63
msgid ""
"To get started contributing, you'll want to read the :ref:`reStructuredText "
"Primer <sphinx:rst-primer>`. After that, you'll want to read about the :ref"
":`Sphinx-specific markup <sphinx:sphinxmarkup>` that's used to manage "
"metadata, indexing, and cross-references."
msgstr ""

# 5c2292539bb247ec8c3a14389c8c8b2b
#: ../../internals/contributing/writing-documentation.txt:69
msgid "Commonly used terms"
msgstr ""

# f0ebe13a3f074daf99fba4d77f79a566
#: ../../internals/contributing/writing-documentation.txt:71
msgid ""
"Here are some style guidelines on commonly used terms throughout the "
"documentation:"
msgstr ""

# e794b03e2d5148ab9840005badc4698d
#: ../../internals/contributing/writing-documentation.txt:74
msgid ""
"**Django** -- when referring to the framework, capitalize Django. It is "
"lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

# 4c7143dd466b4aeeb6098a878f920220
#: ../../internals/contributing/writing-documentation.txt:77
msgid "**email** -- no hyphen."
msgstr ""

# d9948898a0164c5a9a1bc8a68466c221
#: ../../internals/contributing/writing-documentation.txt:79
msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

# 281f598fb56e48138257fcfff083d9b7
#: ../../internals/contributing/writing-documentation.txt:81
msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

# f8e918ae20c847bc9d9e34934c017ba3
#: ../../internals/contributing/writing-documentation.txt:83
msgid ""
"**realize**, **customize**, **initialize**, etc. -- use the American \"ize\""
" suffix, not \"ise.\""
msgstr ""

# c1006eb937ce48e18b526052af99881c
#: ../../internals/contributing/writing-documentation.txt:86
msgid ""
"**subclass** -- it's a single word without a hyphen, both as a verb "
"(\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

# 7268c3d14c8e489fa7cb7636570f544c
#: ../../internals/contributing/writing-documentation.txt:89
msgid ""
"**Web**, **World Wide Web**, **the Web** -- note Web is always capitalized "
"when referring to the World Wide Web."
msgstr ""

# 77a90352b4304601a12ddb7dd453c802
#: ../../internals/contributing/writing-documentation.txt:92
msgid "**Web site** -- use two words, with Web capitalized."
msgstr ""

# 7fffcc5cca2f4cabb2ef37b9cb58d4d5
#: ../../internals/contributing/writing-documentation.txt:95
msgid "Django-specific terminology"
msgstr ""

# 1f97aa54195f4bf0b6d5920ae36c7ee4
#: ../../internals/contributing/writing-documentation.txt:97
msgid "**model** -- it's not capitalized."
msgstr ""

# 182cbd71686e422489e332eb86b93cf3
#: ../../internals/contributing/writing-documentation.txt:99
msgid "**template** -- it's not capitalized."
msgstr ""

# 63eb4cafa0a142f59ea614d69aa65541
#: ../../internals/contributing/writing-documentation.txt:101
msgid ""
"**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

# c1f63ff28bd549d2bad36e16bc27bf88
#: ../../internals/contributing/writing-documentation.txt:104
msgid "**view** -- it's not capitalized."
msgstr ""

# 918d516dd9ae4e19a8460c323f6de841
#: ../../internals/contributing/writing-documentation.txt:107
msgid "Guidelines for reStructuredText files"
msgstr ""

# a6d178b69aae47db9081783783c3cb24
#: ../../internals/contributing/writing-documentation.txt:109
msgid ""
"These guidelines regulate the format of our reST (reStructuredText) "
"documentation:"
msgstr ""

# bbe1726c52c84f90bfb00b2cf9c799bd
#: ../../internals/contributing/writing-documentation.txt:112
msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

# 39013158a469411ab77e9163ccc0dec6
#: ../../internals/contributing/writing-documentation.txt:114
msgid ""
"Wrap the documentation at 80 characters wide, unless a code example is "
"significantly less readable when split over two lines, or for another good "
"reason."
msgstr ""

# 52eb10f09dec40ceb0048ba6756b5c5c
#: ../../internals/contributing/writing-documentation.txt:118
msgid ""
"The main thing to keep in mind as you write and edit docs is that the more "
"semantic markup you can add the better. So::"
msgstr ""

# 0036ad7029bb4279a03a63f212a3ad7a
#: ../../internals/contributing/writing-documentation.txt:123
msgid "Isn't nearly as helpful as::"
msgstr ""

# 4f29b1a8ed0e4312b172c5fe497a728f
#: ../../internals/contributing/writing-documentation.txt:127
msgid ""
"This is because Sphinx will generate proper links for the latter, which "
"greatly helps readers. There's basically no limit to the amount of useful "
"markup you can add."
msgstr ""

# f5ac89c79944418fb275a76c7ba74d88
#: ../../internals/contributing/writing-documentation.txt:131
msgid ""
"Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' "
"documentation."
msgstr ""

# e172649242c14c81b80449eaf8ddf559
#: ../../internals/contributing/writing-documentation.txt:135
msgid "Django-specific markup"
msgstr ""

# 5b9ad2d5f47248bfb65eb4ca42e99b74
#: ../../internals/contributing/writing-documentation.txt:137
msgid ""
"Besides the `Sphinx built-in markup`__, Django's docs defines some extra "
"description units:"
msgstr ""

# 49006f99ffe6460297fa8b9be65c7716
#: ../../internals/contributing/writing-documentation.txt:142
msgid "Settings::"
msgstr ""

# e9d2856b20d848f7a501309a1d47c58b
#: ../../internals/contributing/writing-documentation.txt:146
msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

# 82258b0497c24ee7865ba61e359d62e6
#: ../../internals/contributing/writing-documentation.txt:148
msgid "Template tags::"
msgstr ""

# 81de817387b84d7ba648db636adf2b05
#: ../../internals/contributing/writing-documentation.txt:152
msgid "To link, use ``:ttag:`regroup```."
msgstr ""

# 09f6a45748f4425baa9849b960f7f126
#: ../../internals/contributing/writing-documentation.txt:154
msgid "Template filters::"
msgstr ""

# cb0cbe912e514696b17be8d48fa97204
#: ../../internals/contributing/writing-documentation.txt:158
msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

# 32d960bdbe97461795111bdc97914c83
#: ../../internals/contributing/writing-documentation.txt:160
msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``)::"
msgstr ""

# dbb1e0b6f5d048a09abb10501e7b1273
#: ../../internals/contributing/writing-documentation.txt:164
msgid "To link, use ``:lookup:`exact```."
msgstr ""

# 22230cc2e5d642d986543d1cba67fd4e
#: ../../internals/contributing/writing-documentation.txt:166
msgid "``django-admin`` commands::"
msgstr ""

# 902bd099cbfb4de8b904881c3182187a
#: ../../internals/contributing/writing-documentation.txt:170
msgid "To link, use ``:djadmin:`syncdb```."
msgstr ""

# ef4bc71ea34b49ad8cacf188cec165f2
#: ../../internals/contributing/writing-documentation.txt:172
msgid "``django-admin`` command-line options::"
msgstr ""

# 1d732acaede94fae9e5165459ef57def
#: ../../internals/contributing/writing-documentation.txt:176
msgid "To link, use ``:djadminopt:`--traceback```."
msgstr ""

# cddd651ec61d4e878dd33b08b8fce253
#: ../../internals/contributing/writing-documentation.txt:181
msgid "Documenting new features"
msgstr ""

# 19b2c3bd35304b18b36624fb963f268b
#: ../../internals/contributing/writing-documentation.txt:183
msgid "Our policy for new features is:"
msgstr ""

# 5d51676d90ae4caba28684a3173e0c66
#: ../../internals/contributing/writing-documentation.txt:185
msgid ""
"All documentation of new features should be written in a way that clearly "
"designates the features are only available in the Django development "
"version. Assume documentation readers are using the latest release, not the "
"development version."
msgstr ""

# 502c1e707259488da4c61955987b47b4
#: ../../internals/contributing/writing-documentation.txt:190
msgid ""
"Our preferred way for marking new features is by prefacing the features' "
"documentation with: \"``.. versionadded:: X.Y``\", followed by an optional "
"one line comment and a mandatory blank line."
msgstr ""

# 79fe5d44fe3446b78b8a49ee610749cc
#: ../../internals/contributing/writing-documentation.txt:194
msgid ""
"General improvements, or other changes to the APIs that should be emphasized"
" should use the \"``.. versionchanged:: X.Y``\" directive (with the same "
"format as the ``versionadded`` mentioned above."
msgstr ""

# 9e5d9f42bcce41e497f1f7a7b18a3748
#: ../../internals/contributing/writing-documentation.txt:199
msgid "An example"
msgstr ""

# 2866d680d5c044b2aa0f52ca2695d861
#: ../../internals/contributing/writing-documentation.txt:201
msgid ""
"For a quick example of how it all fits together, consider this hypothetical "
"example:"
msgstr ""

# f4523a3f6dda4e2aa791a38e97213173
#: ../../internals/contributing/writing-documentation.txt:204
msgid ""
"First, the ``ref/settings.txt`` document could have an overall layout like "
"this:"
msgstr ""

# 273210e995fe42c69b7428cbbe9b8f9c
#: ../../internals/contributing/writing-documentation.txt:229
msgid ""
"Next, the ``topics/settings.txt`` document could contain something like "
"this:"
msgstr ""

# 6bf57ae3c4f346efb082d82389ddfcf3
#: ../../internals/contributing/writing-documentation.txt:241
msgid ""
"We use the Sphinx :rst:role:`doc` cross reference element when we want to "
"link to another document as a whole and the :rst:role:`ref` element when we "
"want to link to an arbitrary location in a document."
msgstr ""

# 9c0626c0ccf147ffb56b683094e15b03
#: ../../internals/contributing/writing-documentation.txt:245
msgid "Next, notice how the settings are annotated:"
msgstr ""

# c7a0131431ce46429edd286e416590e9
#: ../../internals/contributing/writing-documentation.txt:263
msgid ""
"This marks up the following header as the \"canonical\" target for the "
"setting ``ADMIN_FOR`` This means any time I talk about ``ADMIN_FOR``, I can "
"reference it using ``:setting:`ADMIN_FOR```."
msgstr ""

# a173717193f64513bbd0aec8c5586f2a
#: ../../internals/contributing/writing-documentation.txt:267
msgid "That's basically how everything fits together."
msgstr ""

# 130ae101fedc4ca2a5f2d6d16b02df07
#: ../../internals/contributing/writing-documentation.txt:272
msgid "Improving the documentation"
msgstr ""

# 1e52d75fe9644f0196d1643f1dc34765
#: ../../internals/contributing/writing-documentation.txt:274
msgid ""
"A few small improvements can be made to make the documentation read and look"
" better:"
msgstr ""

# d666b33db4b746198c638d8fb9d4eead
#: ../../internals/contributing/writing-documentation.txt:277
msgid ""
"Most of the various ``index.txt`` documents have *very* short or even non-"
"existent intro text. Each of those documents needs a good short intro the "
"content below that point."
msgstr ""

# 955df114cfb94ab4bb0e6a1eb5185574
#: ../../internals/contributing/writing-documentation.txt:281
msgid "The glossary is very perfunctory. It needs to be filled out."
msgstr ""

# 03b7ff342778429d9db140932df67819
#: ../../internals/contributing/writing-documentation.txt:283
msgid "Add more metadata targets. Lots of places look like::"
msgstr ""

# 1789be692d4849fb8f2851a0f52bb45d
#: ../../internals/contributing/writing-documentation.txt:288
msgid "\\... these should be::"
msgstr ""

# bc9b0006406e42eb983a06366605cff1
#: ../../internals/contributing/writing-documentation.txt:292
msgid "That is, use metadata instead of titles."
msgstr ""

# ada3761d2faf4e9bb5c70396b81e3422
#: ../../internals/contributing/writing-documentation.txt:294
msgid ""
"Add more links -- nearly everything that's an inline code literal right now "
"can probably be turned into a xref."
msgstr ""

# e9c6f9b0c3784d6a87d18a18a289b96b
#: ../../internals/contributing/writing-documentation.txt:297
msgid ""
"See the ``literals_to_xrefs.py`` file in ``_ext`` -- it's a shell script to "
"help do this work."
msgstr ""

# e4076705cb7a4b61b08fb2e68e928cca
#: ../../internals/contributing/writing-documentation.txt:300
msgid "This will probably be a continuing, never-ending project."
msgstr ""

# 8f2bb52a92e14e30a6df233c50b8447c
#: ../../internals/contributing/writing-documentation.txt:302
msgid "Add `info field lists`__ where appropriate."
msgstr ""

# 503a403affae424a93b36b6dda084160
#: ../../internals/contributing/writing-documentation.txt:306
msgid ""
"Whenever possible, use links. So, use ``:setting:`ADMIN_FOR``` instead of "
"````ADMIN_FOR````."
msgstr ""

# 417f08047cf04e31b657373c0d545a04
#: ../../internals/contributing/writing-documentation.txt:309
msgid ""
"Use directives where appropriate. Some directives (e.g. ``.. setting::``) "
"are prefix-style directives; they go *before* the unit they're describing. "
"These are known as \"crossref\" directives. Others (e.g. ``.. class::``) "
"generate their own markup; these should go inside the section they're "
"describing. These are called \"description units\"."
msgstr ""

# c1b479e731194377b471bfd47746c4d8
#: ../../internals/contributing/writing-documentation.txt:316
msgid ""
"You can tell which are which by looking at in :file:`_ext/djangodocs.py`; it"
" registers roles as one of the other."
msgstr ""

# f99e5107ee41486db2e49f024b4028e1
#: ../../internals/contributing/writing-documentation.txt:319
msgid ""
"Add ``.. code-block:: <lang>`` to literal blocks so that they get "
"highlighted."
msgstr ""

# 64b6ea154e3048dda0d5dfcf479f3779
#: ../../internals/contributing/writing-documentation.txt:322
msgid ""
"When referring to classes/functions/modules, etc., you'll want to use the "
"fully-qualified name of the target "
"(``:class:`django.contrib.contenttypes.models.ContentType```)."
msgstr ""

# 12d1d7ee16814b1eb2fd01b0a4a792eb
#: ../../internals/contributing/writing-documentation.txt:326
msgid ""
"Since this doesn't look all that awesome in the output -- it shows the "
"entire path to the object -- you can prefix the target with a ``~`` (that's "
"a tilde) to get just the \"last bit\" of that path. So "
"``:class:`~django.contrib.contenttypes.models.ContentType``` will just "
"display a link with the title \"ContentType\"."
msgstr ""

# 7a4eda26dd504df3a3f50f4f528042ac
#: ../../internals/deprecation.txt:3
msgid "Django Deprecation Timeline"
msgstr ""

# b2479b4cefd1446d904e2112f1df8155
#: ../../internals/deprecation.txt:5
msgid ""
"This document outlines when various pieces of Django will be removed or "
"altered in a backward incompatible way, following their deprecation, as per "
"the :ref:`deprecation policy <internal-release-deprecation-policy>`. More "
"details about each item can often be found in the release notes of two "
"versions prior."
msgstr ""

# 86de184951104d33a2ea97bced299d50
#: ../../internals/deprecation.txt:11
msgid "1.4"
msgstr ""

# cc924eb6a88640b598ad80fd1e7fc3c8
#: ../../internals/deprecation.txt:13
msgid ""
"See the :doc:`Django 1.2 release notes</releases/1.2>` for more details on "
"these changes."
msgstr ""

# f2882b48e4d043c9a7e978cd58a533a6
#: ../../internals/deprecation.txt:16
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the "
"``{% csrf_token %}`` template tag inside forms to enable CSRF protection. "
"``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

# 31aee3737a9e402da6e69a0edf330ca9
#: ../../internals/deprecation.txt:20
msgid ""
"The old imports for CSRF functionality (``django.contrib.csrf.*``), which "
"moved to core in 1.2, will be removed."
msgstr ""

# b6c64c7ed0d6404b851f2192ced712b7
#: ../../internals/deprecation.txt:23
msgid ""
"The ``django.contrib.gis.db.backend`` module will be removed in favor of the"
" specific backends."
msgstr ""

# 5b511c65aa1a483e94236bc06d371722
#: ../../internals/deprecation.txt:26
msgid ""
"``SMTPConnection`` will be removed in favor of a generic Email backend API."
msgstr ""

# 013a66902f69494fbe4e28fd5c75b57c
#: ../../internals/deprecation.txt:28
msgid ""
"The many to many SQL generation functions on the database backends will be "
"removed."
msgstr ""

# 53968779904c4b49a56ac90f4b0570b0
#: ../../internals/deprecation.txt:31
msgid ""
"The ability to use the ``DATABASE_*`` family of top-level settings to define"
" database connections will be removed."
msgstr ""

# 5409e0db7d62486ab2cb43ea3b08631b
#: ../../internals/deprecation.txt:34
msgid ""
"The ability to use shorthand notation to specify a database backend (i.e., "
"``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

# 0ddc4cda976642a7b97eb9b38449706d
#: ../../internals/deprecation.txt:38
msgid ""
"The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` "
"methods will have to support multiple databases."
msgstr ""

# e5187e4a878c4be5951ea94deccaad2e
#: ../../internals/deprecation.txt:41
msgid ""
"The ``Message`` model (in ``django.contrib.auth``), its related manager in "
"the ``User`` model (``user.message_set``), and the associated methods "
"(``user.message_set.create()`` and ``user.get_and_delete_messages()``), will"
" be removed.  The :doc:`messages framework </ref/contrib/messages>` should "
"be used instead. The related ``messages`` variable returned by the auth "
"context processor will also be removed. Note that this means that the admin "
"application will depend on the messages context processor."
msgstr ""

# 89513beb788c4d5b8c6350dae917a7dd
#: ../../internals/deprecation.txt:51
msgid ""
"Authentication backends will need to support the ``obj`` parameter for "
"permission checking. The ``supports_object_permissions`` attribute will no "
"longer be checked and can be removed from custom backends."
msgstr ""

# ceefdbea3d5c40aa8804d6dddda167e5
#: ../../internals/deprecation.txt:55
msgid ""
"Authentication backends will need to support the ``AnonymousUser`` class "
"being passed to all methods dealing with permissions.  The "
"``supports_anonymous_user`` variable will no longer be checked and can be "
"removed from custom backends."
msgstr ""

# b946fac418564e23b06df5c7fd5143bd
#: ../../internals/deprecation.txt:60
msgid ""
"The ability to specify a callable template loader rather than a ``Loader`` "
"class will be removed, as will the ``load_template_source`` functions that "
"are included with the built in template loaders for backwards compatibility."
msgstr ""

# b0e1c6de64ba4125bcbb39fb9f52e861
#: ../../internals/deprecation.txt:65
msgid ""
"``django.utils.translation.get_date_formats()`` and "
"``django.utils.translation.get_partial_date_formats()``. These functions "
"will be removed; use the locale-aware ``django.utils.formats.get_format()`` "
"to get the appropriate formats."
msgstr ""

# f570558d1bc54cd9bfa0ed5a3f3714bf
#: ../../internals/deprecation.txt:70
msgid ""
"In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, "
"``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will "
"be removed. Use ``django.utils.formats.get_format()`` to get the appropriate"
" formats."
msgstr ""

# f9f1bbfa400b438a89a68142c636d9fe
#: ../../internals/deprecation.txt:76
msgid ""
"The ability to use a function-based test runners will be removed, along with"
" the ``django.test.simple.run_tests()`` test runner."
msgstr ""

# e6b8733f75524de8ab54830f5a9e6860
#: ../../internals/deprecation.txt:79
msgid ""
"The ``views.feed()`` view and ``feeds.Feed`` class in "
"``django.contrib.syndication`` will be removed. The class-based view "
"``views.Feed`` should be used instead."
msgstr ""

# cfd00d30ebcf40a4b1f665cc1f0399f9
#: ../../internals/deprecation.txt:83
msgid ""
"``django.core.context_processors.auth``.  This release will remove the old "
"method in favor of the new method in "
"``django.contrib.auth.context_processors.auth``."
msgstr ""

# 9a03f36e4b714bb190d3498c8ff9738e
#: ../../internals/deprecation.txt:87
msgid ""
"The ``postgresql`` database backend will be removed, use the "
"``postgresql_psycopg2`` backend instead."
msgstr ""

# 26c9a49d05cd458ba466827ebf8d7d8d
#: ../../internals/deprecation.txt:90
msgid ""
"The ``no`` language code will be removed and has been replaced by the ``nb``"
" language code."
msgstr ""

# 9997bb4314ca469c9efaef4ac3f7263c
#: ../../internals/deprecation.txt:93
msgid ""
"Authentication backends will need to define the boolean attribute "
"``supports_inactive_user`` until version 1.5 when it will be assumed that "
"all backends will handle inactive users."
msgstr ""

# 32adde0d40a84360b5b08f995dc4fca5
#: ../../internals/deprecation.txt:97
msgid ""
"``django.db.models.fields.XMLField`` will be removed. This was deprecated as"
" part of the 1.3 release. An accelerated deprecation schedule has been used "
"because the field hasn't performed any role beyond that of a simple "
"``TextField`` since the removal of oldforms. All uses of ``XMLField`` can be"
" replaced with ``TextField``."
msgstr ""

# d33eefc8adde4d2c93a92c06e5307652
#: ../../internals/deprecation.txt:103
msgid ""
"The undocumented ``mixin`` parameter to the ``open()`` method of "
"``django.core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

# edf9601bf19b41e886e2ee5b37640ad9
#: ../../internals/deprecation.txt:108
msgid "1.5"
msgstr ""

# 407f5e6acfb7401d88bfcb8d0089e229
#: ../../internals/deprecation.txt:110
msgid ""
"See the :doc:`Django 1.3 release notes</releases/1.3>` for more details on "
"these changes."
msgstr ""

# 428ed74581fa4d77ba82f785fab7fd87
#: ../../internals/deprecation.txt:113
msgid ""
"Starting Django without a :setting:`SECRET_KEY` will result in an exception "
"rather than a ``DeprecationWarning``. (This is accelerated from the usual "
"deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

# 2e11512fc93e4989b834b309b1f8359f
#: ../../internals/deprecation.txt:117
msgid ""
"The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler"
" should be used instead."
msgstr ""

# c72d58544a0f44a0a1e3f0800b4923f6
#: ../../internals/deprecation.txt:120
msgid ""
"The ``template`` attribute on :class:`~django.test.client.Response` objects "
"returned by the :ref:`test client <test-client>` will be removed. The "
":attr:`~django.test.client.Response.templates` attribute should be used "
"instead."
msgstr ""

# e7d22a8751364f3dbd1a918c7712f42c
#: ../../internals/deprecation.txt:125
msgid ""
"The ``django.test.simple.DjangoTestRunner`` will be removed. Instead use a "
"unittest-native class.  The features of the "
"``django.test.simple.DjangoTestRunner`` (including fail-fast and Ctrl-C test"
" termination) can currently be provided by the unittest-native "
":class:`~unittest.TextTestRunner`."
msgstr ""

# 8c812f64aa5e428e8b895c84bd0e19ae
#: ../../internals/deprecation.txt:131
msgid ""
"The undocumented function ``django.contrib.formtools.utils.security_hash`` "
"will be removed, instead use ``django.contrib.formtools.utils.form_hmac``"
msgstr ""

# 889b43219b8f479cbe896a715c60d042
#: ../../internals/deprecation.txt:135
msgid ""
"The function-based generic view modules will be removed in favor of their "
"class-based equivalents, outlined :doc:`here </topics/class-based-"
"views/index>`."
msgstr ""

# c4e9ff8d05d64954b17ab74c704c1548
#: ../../internals/deprecation.txt:139
msgid ""
"The ``django.core.servers.basehttp.AdminMediaHandler`` will be removed.  In "
"its place use ``django.contrib.staticfiles.handlers.StaticFilesHandler``."
msgstr ""

# 17b5056264c3404e9b10ef6c0fc23046
#: ../../internals/deprecation.txt:143
msgid ""
"The template tags library ``adminmedia`` and the template tag ``{% "
"admin_media_prefix %}`` will be removed in favor of the generic static files"
" handling. (This is faster than the usual deprecation path; see the "
":doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

# 473e7c4242e14bb0a1e536a1e80e4b95
#: ../../internals/deprecation.txt:148
msgid ""
"The :ttag:`url` and :ttag:`ssi` template tags will be modified so that the "
"first argument to each tag is a template variable, not an implied string. In"
" 1.4, this behavior is provided by a version of the tag in the ``future`` "
"template tag library."
msgstr ""

# 2bb9fe8609f5437d8f07c3cd830c589e
#: ../../internals/deprecation.txt:153
msgid "The ``reset`` and ``sqlreset`` management commands will be removed."
msgstr ""

# 09232a6d402b4bfdadf9dd5e039861d7
#: ../../internals/deprecation.txt:155
msgid ""
"Authentication backends will need to support an inactive user being passed "
"to all methods dealing with permissions. The ``supports_inactive_user`` "
"attribute will no longer be checked and can be removed from custom backends."
msgstr ""

# 77fe57e2733d4f058f4be714869142fe
#: ../../internals/deprecation.txt:160
msgid ""
":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a "
":class:`~django.contrib.gis.geos.GEOSException` when called on a geometry "
"with no SRID value."
msgstr ""

# b064a0f40a0248edb7d8725b17486392
#: ../../internals/deprecation.txt:164
msgid ""
"``django.http.CompatCookie`` will be removed in favor of "
"``django.http.SimpleCookie``."
msgstr ""

# 2fdd7e5a1229449d826e80ae40020d81
#: ../../internals/deprecation.txt:167
msgid ""
"``django.core.context_processors.PermWrapper`` and "
"``django.core.context_processors.PermLookupDict`` will be removed in favor "
"of the corresponding ``django.contrib.auth.context_processors.PermWrapper`` "
"and ``django.contrib.auth.context_processors.PermLookupDict``, respectively."
msgstr ""

# f4152928e83b4610b26fa21b75a4e7b5
#: ../../internals/deprecation.txt:173
msgid ""
"The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required "
"to end with a trailing slash to ensure there is a consistent way to combine "
"paths in templates."
msgstr ""

# 4da0de748fd84a5591f476eaa1dd4e51
#: ../../internals/deprecation.txt:177
msgid ""
"``django.db.models.fields.URLField.verify_exists`` will be removed. The "
"feature was deprecated in 1.3.1 due to intractable security and performance "
"issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

# a0c8701afb9d4470a44421e0d2ffa38d
#: ../../internals/deprecation.txt:182
msgid ""
"Translations located under the so-called *project path* will be ignored "
"during the translation building process performed at runtime. The "
":setting:`LOCALE_PATHS` setting can be used for the same task by including "
"the filesystem path to a ``locale`` directory containing non-app-specific "
"translations in its value."
msgstr ""

# 16d732a2cbd84e90b44c1a515c76e444
#: ../../internals/deprecation.txt:188
msgid ""
"The Markup contrib app will no longer support versions of Python-Markdown "
"library earlier than 2.1. An accelerated timeline was used as this was a "
"security related deprecation."
msgstr ""

# 96dbbc4bde7148a89322b40c7e5fc76a
#: ../../internals/deprecation.txt:192
msgid ""
"The ``CACHE_BACKEND`` setting will be removed. The cache backend(s) should "
"be specified in the :setting:`CACHES` setting."
msgstr ""

# c8e541c48c6440489825f75d494101e6
#: ../../internals/deprecation.txt:196
msgid "1.6"
msgstr ""

# 7455f04fd37d46abb136da2789aed7c0
#: ../../internals/deprecation.txt:198
msgid ""
"See the :doc:`Django 1.4 release notes</releases/1.4>` for more details on "
"these changes."
msgstr ""

# e56f63bc381f40f8b0dad7f13583c0a5
#: ../../internals/deprecation.txt:201
msgid "``django.contrib.databrowse`` will be removed."
msgstr ""

# c307d77ec94641eabc43caa296b2a540
#: ../../internals/deprecation.txt:203
msgid ""
"``django.contrib.localflavor`` will be removed following an accelerated "
"deprecation."
msgstr ""

# f06331d1a1d54e38bb57b18f80770a5b
#: ../../internals/deprecation.txt:206
msgid ""
"``django.contrib.markup`` will be removed following an accelerated "
"deprecation."
msgstr ""

# eb8be207ae404ba18923e01a4571c340
#: ../../internals/deprecation.txt:209
msgid ""
"The compatibility modules ``django.utils.copycompat`` and "
"``django.utils.hashcompat`` as well as the functions "
"``django.utils.itercompat.all`` and ``django.utils.itercompat.any`` will be "
"removed. The Python builtin versions should be used instead."
msgstr ""

# 04c7e6612ace4de68ee587f2bca663f5
#: ../../internals/deprecation.txt:214
msgid ""
"The ``csrf_response_exempt`` and ``csrf_view_exempt`` decorators will be "
"removed. Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the"
" same function), and ``csrf_view_exempt`` has been a synonym for "
"``django.views.decorators.csrf.csrf_exempt``, which should be used to "
"replace it."
msgstr ""

# 58615b4ba1b74808bfb1852c2f4eddd3
#: ../../internals/deprecation.txt:220
msgid ""
"The ``django.core.cache.backends.memcached.CacheClass`` backend was split "
"into two in Django 1.3 in order to introduce support for PyLibMC. The "
"historical ``CacheClass`` will be removed in favor of "
"``django.core.cache.backends.memcached.MemcachedCache``."
msgstr ""

# 357ee57ef74f45a3a85adce36d29c834
#: ../../internals/deprecation.txt:225
msgid ""
"The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be "
"accessible through their GB-prefixed names (GB is the correct ISO 3166 code "
"for United Kingdom)."
msgstr ""

# 84c67ec494754b31b796cded18efcf7d
#: ../../internals/deprecation.txt:229
msgid ""
"The :setting:`IGNORABLE_404_STARTS` and :setting:`IGNORABLE_404_ENDS` "
"settings have been superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 "
"release. They will be removed."
msgstr ""

# c22180c2f3974ea1aca9540da2358569
#: ../../internals/deprecation.txt:233
msgid ""
"The :doc:`form wizard </ref/contrib/formtools/form-wizard>` has been "
"refactored to use class-based views with pluggable backends in 1.4. The "
"previous implementation will be removed."
msgstr ""

# e84a9ff0266b4a88ba380a439823f41c
#: ../../internals/deprecation.txt:237
msgid ""
"Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` "
"will be removed."
msgstr ""

# a562002371634657b8c20608a1c17482
#: ../../internals/deprecation.txt:240
msgid ""
"The backward-compatibility shim to automatically add a debug-false filter to"
" the ``'mail_admins'`` logging handler will be removed. The "
":setting:`LOGGING` setting should include this filter explicitly if it is "
"desired."
msgstr ""

# 1ff154f3f1734dc2809934ef53219569
#: ../../internals/deprecation.txt:245
msgid ""
"The builtin truncation functions ``django.utils.text.truncate_words()`` and "
"``django.utils.text.truncate_html_words()`` will be removed in favor of the "
"``django.utils.text.Truncator`` class."
msgstr ""

# 43845ffe8e854d96b604bb44d12e8619
#: ../../internals/deprecation.txt:249
msgid ""
"The :class:`~django.contrib.gis.geoip.GeoIP` class was moved to "
":mod:`django.contrib.gis.geoip` in 1.4 -- the shortcut in "
":mod:`django.contrib.gis.utils` will be removed."
msgstr ""

# 12787e46973b4f82b3139b9c6b1d388a
#: ../../internals/deprecation.txt:253
msgid ""
"``django.conf.urls.defaults`` will be removed. The functions "
":func:`~django.conf.urls.include`, :func:`~django.conf.urls.patterns` and "
":func:`~django.conf.urls.url` plus :data:`~django.conf.urls.handler404`, "
":data:`~django.conf.urls.handler500`, are now available through "
":mod:`django.conf.urls` ."
msgstr ""

# 78b173cbfe9c4e35b3c7e703310b0bad
#: ../../internals/deprecation.txt:259
msgid ""
"The functions ``setup_environ()`` and ``execute_manager()`` will be removed "
"from :mod:`django.core.management`. This also means that the old (pre-1.4) "
"style of :file:`manage.py` file will no longer work."
msgstr ""

# 9815d7fbfe964874a9bcdf6a75b0e928
#: ../../internals/deprecation.txt:263
msgid ""
"Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of "
"template filter functions will no longer be supported."
msgstr ""

# 0e0f45501893425e9555bb715a6f5d02
#: ../../internals/deprecation.txt:266
msgid ""
"The attribute ``HttpRequest.raw_post_data`` was renamed to "
"``HttpRequest.body`` in 1.4. The backward compatibility will be removed -- "
"``HttpRequest.raw_post_data`` will no longer work."
msgstr ""

# 1e6e073179654b84a8cc25368bbf7392
#: ../../internals/deprecation.txt:271
msgid ""
"The value for the ``post_url_continue`` parameter in "
"``ModelAdmin.response_add()`` will have to be either ``None`` (to redirect "
"to the newly created object's edit page) or a pre-formatted url. String "
"formats, such as the previous default ``'../%s/'``, will not be accepted any"
" more."
msgstr ""

# 1838f79f3ff14a118053a5d94c8649a0
#: ../../internals/deprecation.txt:278
msgid "1.7"
msgstr ""

# 05c3574469784d048d30e4d4fdbe82fc
#: ../../internals/deprecation.txt:280
msgid ""
"See the :doc:`Django 1.5 release notes</releases/1.5>` for more details on "
"these changes."
msgstr ""

# 72e057099b504abbae0bac376cdac244
#: ../../internals/deprecation.txt:283
msgid ""
"The module ``django.utils.simplejson`` will be removed. The standard library"
" provides :mod:`json` which should be used instead."
msgstr ""

# ca9e4a6de2a3479abf5a1e144e6bce5b
#: ../../internals/deprecation.txt:286
msgid ""
"The function ``django.utils.itercompat.product`` will be removed. The Python"
" builtin version should be used instead."
msgstr ""

# 626edb5aa9454a49b04c2ccf4856c576
#: ../../internals/deprecation.txt:289
msgid ""
"Auto-correction of INSTALLED_APPS and TEMPLATE_DIRS settings when they are "
"specified as a plain string instead of a tuple will be removed and raise an "
"exception."
msgstr ""

# 656b8ceac5af4500b233723e433770d4
#: ../../internals/deprecation.txt:293
msgid ""
"The ``mimetype`` argument to the ``__init__`` methods of "
":class:`~django.http.HttpResponse`, "
":class:`~django.template.response.SimpleTemplateResponse`, and "
":class:`~django.template.response.TemplateResponse`, will be removed. "
"``content_type`` should be used instead. This also applies to the "
":func:`~django.shortcuts.render_to_response` shortcut and the sitemamp "
"views, :func:`~django.contrib.sitemaps.views.index` and "
":func:`~django.contrib.sitemaps.views.sitemap`."
msgstr ""

# 26122309d13d4006b5e6fa91c23235a5
#: ../../internals/deprecation.txt:302
msgid ""
"When :class:`~django.http.HttpResponse` is instantiated with an iterator, or"
" when :attr:`~django.http.HttpResponse.content` is set to an iterator, that "
"iterator will be immediately consumed."
msgstr ""

# d871c45ffca340858af6a8dfdbf4d236
#: ../../internals/deprecation.txt:306
msgid ""
"The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the"
" User model, will be removed."
msgstr ""

# 603c5d13d8844bbb928afa1343692145
#: ../../internals/deprecation.txt:309
msgid ""
"The ``cleanup`` management command will be removed. It's replaced by "
"``clearsessions``."
msgstr ""

# ccb6dff078fc41a1a24d5dd97d175007
#: ../../internals/deprecation.txt:312
msgid "The ``daily_cleanup.py`` script will be removed."
msgstr ""

# c117dc82c2a8403caddb59227b61373a
#: ../../internals/deprecation.txt:314
msgid ""
"The ``depth`` keyword argument will be removed from "
":meth:`~django.db.models.query.QuerySet.select_related`."
msgstr ""

# 01db16d3526140e5ab760119f835c7ff
#: ../../internals/deprecation.txt:318
msgid "2.0"
msgstr ""

# d618040024984cdc8e4315c2acf24924
#: ../../internals/deprecation.txt:320
msgid ""
"``django.views.defaults.shortcut()``. This function has been moved to "
"``django.contrib.contenttypes.views.shortcut()`` as part of the goal of "
"removing all ``django.contrib`` references from the core Django codebase. "
"The old shortcut will be removed in the 2.0 release."
msgstr ""

# a67e8c13975a481bad93b08f4f7a0740
#: ../../internals/deprecation.txt:326
msgid ""
"``ssi`` and ``url`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.3/1.4 deprecation period)."
msgstr ""

# 77507ae1da5e45b8b170f84b519cab19
#: ../../internals/git.txt:3
msgid "The Django source code repository"
msgstr ""

# b25e753e477e40b0b20e0844e8e7b948
#: ../../internals/git.txt:5
msgid ""
"When deploying a Django application into a real production environment, you "
"will almost always want to use `an official packaged release of Django`_."
msgstr ""

# a9f47d1f6adc4d69bb44e7d823d6c356
#: ../../internals/git.txt:8
msgid ""
"However, if you'd like to try out in-development code from an upcoming "
"release or contribute to the development of Django, you'll need to obtain a "
"clone of Django's source code repository."
msgstr ""

# 47a45f148557481782dfe0557ef325df
#: ../../internals/git.txt:12
msgid ""
"This document covers the way the code repository is laid out and how to work"
" with and find things in it."
msgstr ""

# 1cff13e8abc649a9bdbb53460526a9c1
#: ../../internals/git.txt:18
msgid "High-level overview"
msgstr ""

# afae5fb69eec41b68fd8a3a677f7c86a
#: ../../internals/git.txt:20
msgid ""
"The Django source code repository uses `Git`_ to track changes to the code "
"over time, so you'll need a copy of the Git client (a program called "
"``git``) on your computer, and you'll want to familiarize yourself with the "
"basics of how Git works."
msgstr ""

# a7af1c4a245f46cc8daaf7dfe549a384
#: ../../internals/git.txt:25
msgid ""
"Git's web site offers downloads for various operating systems. The site also"
" contains vast amounts of `documentation`_."
msgstr ""

# 805d23a391024409ae1e4fc82d4e1b3b
#: ../../internals/git.txt:28
msgid ""
"The Django Git repository is located online at `github.com/django/django "
"<https://github.com/django/django>`_. It contains the full source code for "
"all Django releases, which you can browse online."
msgstr ""

# 4a27da1b3fc640319c60556643ebf8c2
#: ../../internals/git.txt:32
msgid "The Git repository includes several `branches`_:"
msgstr ""

# d60fd8d580444e56a76cb2d6b16ae94e
#: ../../internals/git.txt:34
msgid ""
"``master`` contains the main in-development code which will become the next "
"packaged release of Django. This is where most development activity is "
"focused."
msgstr ""

# 28b73d9244ea4b84927152462b94fc32
#: ../../internals/git.txt:38
msgid ""
"``stable/A.B.x`` are the maintenance branches. They are used to support "
"older versions of Django."
msgstr ""

# ca85cda9568f43ad90e903151ce0f69b
#: ../../internals/git.txt:41
msgid ""
"``soc20XX/<project>`` branches were used by students who worked on Django "
"during the 2009 and 2010 Google Summer of Code programs."
msgstr ""

# 0dc6e53091564b57af1f08f1054f35d7
#: ../../internals/git.txt:44
msgid ""
"``attic/<project>`` branches were used to develop major or experimental new "
"features without affecting the rest of Django's code."
msgstr ""

# d94863e281bc4aebbc636ef0d502c10d
#: ../../internals/git.txt:47
msgid ""
"The Git repository also contains `tags`_. These are the exact revisions from"
" which packaged Django releases were produced, since version 1.0."
msgstr ""

# d3f3c76c50774ddda52aef9b24596ffe
#: ../../internals/git.txt:50
msgid ""
"The source code for the `Djangoproject.com "
"<https://www.djangoproject.com/>`_ web site can be found at "
"`github.com/django/djangoproject.com "
"<https://github.com/django/djangoproject.com>`_."
msgstr ""

# c00ebd67675e4a31a9ca71274ff5a698
#: ../../internals/git.txt:60
msgid "The master branch"
msgstr ""

# 71e1dac17ed840618e7eae6d63389470
#: ../../internals/git.txt:62
msgid ""
"If you'd like to try out the in-development code for the next release of "
"Django, or if you'd like to contribute to Django by fixing bugs or "
"developing new features, you'll want to get the code from the master branch."
msgstr ""

# cccd566640c749b3a5c5ad8e3ce23ece
#: ../../internals/git.txt:66
msgid ""
"Note that this will get *all* of Django: in addition to the top-level "
"``django`` module containing Python code, you'll also get a copy of Django's"
" documentation, test suite, packaging scripts and other miscellaneous bits. "
"Django's code will be present in your clone as a directory named ``django``."
msgstr ""

# af17f8ea464148b191de4dbf53763281
#: ../../internals/git.txt:72
msgid ""
"To try out the in-development code with your own applications, simply place "
"the directory containing your clone on your Python import path. Then "
"``import`` statements which look for Django will find the ``django`` module "
"within your clone."
msgstr ""

# 310f0e4bd9664c98aebf67e182d0e878
#: ../../internals/git.txt:77
msgid ""
"If you're going to be working on Django's code (say, to fix a bug or develop"
" a new feature), you can probably stop reading here and move over to "
":doc:`the documentation for contributing to Django "
"</internals/contributing/index>`, which covers things like the preferred "
"coding style and how to generate and submit a patch."
msgstr ""

# 8ce2341c9b4d40a3b026e7927fdd097d
#: ../../internals/git.txt:84
msgid "Other branches"
msgstr ""

# 0ebe4b6f9a53478b8b78ed8cb0a4f22d
#: ../../internals/git.txt:86
msgid "Django uses branches for two main purposes:"
msgstr ""

# 6840687fa0c5446aa29696106fb67b19
#: ../../internals/git.txt:88
msgid ""
"Development of major or experimental features, to keep them from affecting "
"progress on other work in master."
msgstr ""

# 2b368c046a8c44e29ef49c95a195f669
#: ../../internals/git.txt:91
msgid ""
"Security and bugfix support for older releases of Django, during their "
"support lifetimes."
msgstr ""

# 26ed04068c3c45088fdf629b521ee64b
#: ../../internals/git.txt:95
msgid "Feature-development branches"
msgstr ""

# 8cb01be86e8f4467b31a3e4b38d7a91d
#: ../../internals/git.txt:99
msgid ""
"Since Django moved to Git in 2012, anyone can clone the repository and "
"create his own branches, alleviating the need for official branches in the "
"source code repository."
msgstr ""

# a2d360b22cd042c1a7316b48fa87832a
#: ../../internals/git.txt:103
msgid ""
"The following section is mostly useful if you're exploring the repository's "
"history, for example if you're trying to understand how some features were "
"designed."
msgstr ""

# d4b56316c4db4aa2b1c578e6e7a1632f
#: ../../internals/git.txt:107
msgid ""
"Feature-development branches tend by their nature to be temporary. Some "
"produce successful features which are merged back into Django's master to "
"become part of an official release, but others do not; in either case there "
"comes a time when the branch is no longer being actively worked on by any "
"developer. At this point the branch is considered closed."
msgstr ""

# 5d04c22d82a2428a9fe5c8d019ca77b0
#: ../../internals/git.txt:113
msgid ""
"Unfortunately, Django used to be maintained with the Subversion revision "
"control system, that has no standard way of indicating this. As a "
"workaround, branches of Django which are closed and no longer maintained "
"were moved into ``attic``."
msgstr ""

# f7eccd81430348e9b3a97e1a6d59ee25
#: ../../internals/git.txt:118
msgid ""
"For reference, the following are branches whose code eventually became part "
"of Django itself, and so are no longer separately maintained:"
msgstr ""

# 13ba1d0743a848f4b6def26f7273a143
#: ../../internals/git.txt:121
msgid ""
"``boulder-oracle-sprint``: Added support for Oracle databases to Django's "
"object-relational mapper. This has been part of Django since the 1.0 "
"release."
msgstr ""

# 86eb4dba450d4d54bdd8a132bb2009ca
#: ../../internals/git.txt:125
msgid ""
"``gis``: Added support for geographic/spatial queries to Django's object-"
"relational mapper. This has been part of Django since the 1.0 release, as "
"the bundled application ``django.contrib.gis``."
msgstr ""

# 30982bd8c24c4d43a74f8c8a08c3fd35
#: ../../internals/git.txt:129
msgid ""
"``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to "
"Django. This has been part of Django since the 0.90 release."
msgstr ""

# d68af2d18b06429f8b5584a52878121c
#: ../../internals/git.txt:132
msgid ""
"``magic-removal``: A major refactoring of both the internals and public APIs"
" of Django's object-relational mapper. This has been part of Django since "
"the 0.95 release."
msgstr ""

# ba3111da2941489e83410997d2ac73ec
#: ../../internals/git.txt:136
msgid ""
"``multi-auth``: A refactoring of :doc:`Django's bundled authentication "
"framework </topics/auth/index>` which added support for :ref:`authentication"
" backends <authentication-backends>`. This has been part of Django since the"
" 0.95 release."
msgstr ""

# 52016f0b4fdc454cb845310f570e31ac
#: ../../internals/git.txt:141
msgid ""
"``new-admin``: A refactoring of :doc:`Django's bundled administrative "
"application </ref/contrib/admin/index>`. This became part of Django as of "
"the 0.91 release, but was superseded by another refactoring (see next "
"listing) prior to the Django 1.0 release."
msgstr ""

# e7c83214ec7f49ecaed0a5358a38f654
#: ../../internals/git.txt:146
msgid ""
"``newforms-admin``: The second refactoring of Django's bundled "
"administrative application. This became part of Django as of the 1.0 "
"release, and is the basis of the current incarnation of "
"``django.contrib.admin``."
msgstr ""

# 2670474e6cbb45b992603bf6fe5cf272
#: ../../internals/git.txt:151
msgid ""
"``queryset-refactor``: A refactoring of the internals of Django's object-"
"relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

# 160ca7ba1a0340649a9b8662003c9295
#: ../../internals/git.txt:155
msgid ""
"``unicode``: A refactoring of Django's internals to consistently use "
"Unicode-based strings in most places within Django and Django applications. "
"This became part of Django as of the 1.0 release."
msgstr ""

# 0b9e0bc5cecc421f921e9cfe3062b8e5
#: ../../internals/git.txt:159
msgid ""
"When Django moved from SVN to Git, the information about branch merges "
"wasn't preserved in the source code repository. This means that the "
"``master`` branch of Django doesn't contain merge commits for the above "
"branches."
msgstr ""

# 1736001278ca41049aa2e4251b819874
#: ../../internals/git.txt:163
msgid ""
"However, this information is `available as a grafts file`_. You can restore "
"it by putting the following lines in ``.git/info/grafts`` in your local "
"clone::"
msgstr ""

# 846c72bb6a6d4081b64907bc90d380ec
#: ../../internals/git.txt:181
msgid ""
"Additionally, the following branches are closed, but their code was never "
"merged into Django and the features they aimed to implement were never "
"finished:"
msgstr ""

# 0a1725bcac3e4640b3b142260f37bb7d
#: ../../internals/git.txt:185
msgid "``full-history``"
msgstr ""

# 088aa0c80ca940929883f80cfc5fadc5
#: ../../internals/git.txt:187
msgid "``generic-auth``"
msgstr ""

# 002b54ed5bbf498d868be235636750d2
#: ../../internals/git.txt:189
msgid "``multiple-db-support``"
msgstr ""

# a500f027049a463091ee14cb42cff51f
#: ../../internals/git.txt:191
msgid "``per-object-permissions``"
msgstr ""

# c5f87730edfe4af0b0f81eba69061632
#: ../../internals/git.txt:193
msgid "``schema-evolution``"
msgstr ""

# 513e32bb8799490f881dfb9be707e17e
#: ../../internals/git.txt:195
msgid "``schema-evolution-ng``"
msgstr ""

# 3f63c61641f84669bdb9035fce6568f7
#: ../../internals/git.txt:197
msgid "``search-api``"
msgstr ""

# 4eaa6eaf9166425ca80758c2fbfa0acc
#: ../../internals/git.txt:199
msgid "``sqlalchemy``"
msgstr ""

# 89760e6264c74189b4b58b635bc37fa5
#: ../../internals/git.txt:201
msgid "All of the above-mentioned branches now reside in ``attic``."
msgstr ""

# c9fa28e2139846a4a793586a18f4ad9f
#: ../../internals/git.txt:203
msgid ""
"Finally, the repository contains ``soc2009/xxx`` and ``soc2010/xxx`` feature"
" branches, used for Google Summer of Code projects."
msgstr ""

# ab4fbd9ccc0b4dc5b0edac8e747c1cd3
#: ../../internals/git.txt:207
msgid "Support and bugfix branches"
msgstr ""

# 27d7ee7358424303bdc293d6994a54c1
#: ../../internals/git.txt:209
msgid ""
"In addition to fixing bugs in current master, the Django project provides "
"official bugfix support for the most recent released version of Django, and "
"security support for the two most recently-released versions of Django."
msgstr ""

# 259a7a549f4a47bd904961e77a384955
#: ../../internals/git.txt:213
msgid ""
"This support is provided via branches in which the necessary bug or security"
" fixes are applied; the branches are then used as the basis for issuing "
"bugfix or security releases."
msgstr ""

# 2866c7c6cf864621bd7a88d6348c74b9
#: ../../internals/git.txt:217
msgid ""
"These branches can be found in the repository as ``stable/A.B.x`` branches, "
"and new branches will be created there after each new Django release."
msgstr ""

# f91639a5336e485990bd8e17c0e2daac
#: ../../internals/git.txt:221
msgid ""
"For example, shortly after the release of Django 1.0, the branch "
"``stable/1.0.x`` was created to receive bug fixes, and shortly after the "
"release of Django 1.1 the branch ``stable/1.1.x`` was created."
msgstr ""

# 1db9d56df9a94e56a7cbaadcf38db7bc
#: ../../internals/git.txt:225
msgid ""
"Official support for the above mentioned releases has expired, and so they "
"no longer receive direct maintenance from the Django project. However, the "
"branches continue to exist and interested community members have "
"occasionally used them to provide unofficial support for old Django "
"releases."
msgstr ""

# 9866ac157d584f2f80f07ead1d2991ce
#: ../../internals/git.txt:231
msgid "Tags"
msgstr ""

# 07fee3d3b3ce435a8a6829e87a14fcca
#: ../../internals/git.txt:233
msgid "Each Django release is tagged and signed by Django's release manager."
msgstr ""

# ff1aa87d3dd04eaaa8312b3788f325fd
#: ../../internals/git.txt:235
msgid "The tags can be found on GitHub's `tags`_ page."
msgstr ""

# ae0768a323224a638202353218acb7cb
#: ../../internals/index.txt:2
msgid "Django internals"
msgstr ""

# 747095023c86474bb9c1a40db4c7f0a8
#: ../../internals/index.txt:4
msgid ""
"Documentation for people hacking on Django itself. This is the place to go "
"if you'd like to help improve Django, learn or learn about how Django works "
"\"under the hood\"."
msgstr ""

# 0f742bb811c04f0d9386b02b6b2aba41
#: ../../internals/index.txt:10
msgid ""
"Elsewhere in the Django documentation, coverage of a feature is a sort of a "
"contract: once an API is in the official documentation, we consider it "
"\"stable\" and don't change it without a good reason. APIs covered here, "
"however, are considered \"internal-only\": we reserve the right to change "
"these internals if we must."
msgstr ""

# b947ee09239d4f56b10579fb02fa6d65
#: ../../internals/release-process.txt:3
msgid "Django's release process"
msgstr ""

# df4206b559be4177b3760042dfb645c1
#: ../../internals/release-process.txt:8
msgid "Official releases"
msgstr ""

# f3235135f2e9497c9bbdd80d9dff5150
#: ../../internals/release-process.txt:10
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

# bd282fbac37d45ea8eb0ed631d9675b6
#: ../../internals/release-process.txt:12
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

# 105adb1fd7b44fc5b8425fa5526def99
#: ../../internals/release-process.txt:14
msgid ""
"``A`` is the *major version* number, which is only incremented for major "
"changes to Django, and these changes are not necessarily backwards-"
"compatible. That is, code you wrote for Django 1.2 may break when we release"
" Django 2.0."
msgstr ""

# 90efda8eb3844d48a4810732ed6ef013
#: ../../internals/release-process.txt:19
msgid ""
"``B`` is the *minor version* number, which is incremented for large yet "
"backwards compatible changes.  Code written for Django 1.2 will continue to "
"work under Django 1.3. Exceptions to this rule will be listed in the release"
" notes."
msgstr ""

# d8f8dd12b8354beb9a87e20815263d73
#: ../../internals/release-process.txt:24
msgid ""
"``C`` is the *micro version* number, which is incremented for bug and "
"security fixes. A new micro-release will be 100% backwards-compatible with "
"the previous micro-release. The only exception is when a security issue "
"can't be fixed without breaking backwards-compatibility. If this happens, "
"the release notes will provide detailed upgrade instructions."
msgstr ""

# af1f4ed30ec64dd8bddaa3fdd789ed22
#: ../../internals/release-process.txt:30
msgid ""
"In some cases, we'll make alpha, beta, or release candidate releases. These "
"are of the form ``A.B alpha/beta/rc N``, which means the ``Nth`` "
"alpha/beta/release candidate of version ``A.B``."
msgstr ""

# d6972f0596a54bdb91dfb83a373d7fd2
#: ../../internals/release-process.txt:34
msgid ""
"In git, each Django release will have a tag indicating its version number, "
"signed with the Django release key. Additionally, each release series (X.Y) "
"has its own branch, and bugfix/security releases will be issued from those "
"branches."
msgstr ""

# 323b4858e7254737aae0a9918efabede
#: ../../internals/release-process.txt:39
msgid ""
"For more information about how the Django project issues new releases for "
"security purposes, please see :doc:`our security policies <security>`."
msgstr ""

# 112b14c2981a4643bd42e56ac72652d1
#: ../../internals/release-process.txt:44
msgid "Major releases"
msgstr ""

# b077414231504625925757e4f98573b5
#: ../../internals/release-process.txt:46
msgid ""
"Major releases (1.0, 2.0, etc.) will happen very infrequently (think "
"\"years\", not \"months\"), and will probably represent major, sweeping "
"changes to Django."
msgstr ""

# 1316cc30c9b74f3da9a3c2273596af50
#: ../../internals/release-process.txt:50
msgid "Minor releases"
msgstr ""

# 32b74613e54f40948443ffbdb83a6675
#: ../../internals/release-process.txt:52
msgid ""
"Minor release (1.1, 1.2, etc.) will happen roughly every nine months -- see "
"`release process`_, below for details."
msgstr ""

# 59733d56a8e540c9a5e033ba1004fbc7
#: ../../internals/release-process.txt:57
msgid ""
"These releases will contain new features, improvements to existing features,"
" and such. A minor release may deprecate certain features from previous "
"releases. If a feature in version ``A.B`` is deprecated, it will continue to"
" work in version ``A.B+1``. In version ``A.B+2``, use of the feature will "
"raise a ``DeprecationWarning`` but will continue to work. Version ``A.B+3`` "
"will remove the feature entirely."
msgstr ""

# fadc7dd81c8b4f5f8c303103e0f0b434
#: ../../internals/release-process.txt:64
msgid ""
"So, for example, if we decided to remove a function that existed in Django "
"1.0:"
msgstr ""

# 4907e7164edd40cd8abc73e096cf3a73
#: ../../internals/release-process.txt:66
msgid ""
"Django 1.1 will contain a backwards-compatible replica of the function which"
" will raise a ``PendingDeprecationWarning``. This warning is silent by "
"default; you need to explicitly turn on display of these warnings."
msgstr ""

# b536eadb0ac44eb38430c1264e2c765f
#: ../../internals/release-process.txt:70
msgid ""
"Django 1.2 will contain the backwards-compatible replica, but the warning "
"will be promoted to a full-fledged ``DeprecationWarning``. This warning is "
"*loud* by default, and will likely be quite annoying."
msgstr ""

# 0580c3e353e7453796ad306c845eef6f
#: ../../internals/release-process.txt:74
msgid "Django 1.3 will remove the feature outright."
msgstr ""

# 4d08dacb999c46eda09e50c7c6f2a3cc
#: ../../internals/release-process.txt:77
msgid "Micro releases"
msgstr ""

# b465c71cb25f4fc9a0a25ac9fc3ddb7c
#: ../../internals/release-process.txt:79
msgid ""
"Micro releases (1.0.1, 1.0.2, 1.1.1, etc.) will be issued at least once "
"half-way between minor releases, and probably more often as needed."
msgstr ""

# 51b4aff7a2aa43fe99b67e48f1e29d2d
#: ../../internals/release-process.txt:82
msgid ""
"These releases will be 100% compatible with the associated minor release, "
"unless this is impossible for security reasons. So the answer to \"should I "
"upgrade to the latest micro release?\" will always be \"yes.\""
msgstr ""

# 9803ea113eeb4292a4e96d51b2db9156
#: ../../internals/release-process.txt:86
msgid ""
"Each minor release of Django will have a \"release maintainer\" appointed. "
"This person will be responsible for making sure that bug fixes are applied "
"to both trunk and the maintained micro-release branch. This person will also"
" work with the release manager to decide when to release the micro releases."
msgstr ""

# 9477448342e844ecbdf9219851ed960c
# efb9a8e6199049af89dfd0e43de92c2b
#: ../../internals/release-process.txt:94 ../../internals/security.txt:45
msgid "Supported versions"
msgstr ""

# 075b6e30fcd244379790cd090f0e88f6
#: ../../internals/release-process.txt:96
msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels:"
msgstr ""

# 9a63d4e3e30846379b005e6051a03956
#: ../../internals/release-process.txt:99
msgid ""
"The current development trunk will get new features and bug fixes requiring "
"major refactoring."
msgstr ""

# 9a6594eb0bf1475b919d61cc40b9ce20
#: ../../internals/release-process.txt:102
msgid ""
"Patches applied to the trunk will also be applied to the last minor release,"
" to be released as the next micro release, when they fix critical problems:"
msgstr ""

# 8093d1daaab44d5eae05b1b422dfff54
#: ../../internals/release-process.txt:106
msgid "Security issues."
msgstr ""

# 076010555a9e475483c52af3f162c650
#: ../../internals/release-process.txt:108
msgid "Data-loss bugs."
msgstr ""

# 0fbf520548534351a2743ed433be6841
#: ../../internals/release-process.txt:110
msgid "Crashing bugs."
msgstr ""

# b3616f55823d4af6a2c680c7952eee82
#: ../../internals/release-process.txt:112
msgid "Major functionality bugs in newly-introduced features."
msgstr ""

# b66f4a76a10c452880aed0e166d1f031
#: ../../internals/release-process.txt:114
msgid ""
"The rule of thumb is that fixes will be backported to the last minor release"
" for bugs that would have prevented a release in the first place."
msgstr ""

# c47a3a8f76e34258982e217d132fa56c
#: ../../internals/release-process.txt:117
msgid ""
"Security fixes will be applied to the current trunk and the previous two "
"minor releases."
msgstr ""

# e83798c743144a68b42cf5b9d1e3b657
#: ../../internals/release-process.txt:120
msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch, at the discretion of the committer, and they don't need to "
"meet the \"critical fixes only\" bar. That's because it's highly "
"advantageous to have the docs for the last release be up-to-date and "
"correct, and the downside of backporting (risk of introducing regressions) "
"is much less of a concern."
msgstr ""

# 2a23f823e7ed479f8afc4940f486568c
#: ../../internals/release-process.txt:127
msgid ""
"As a concrete example, consider a moment in time halfway between the release"
" of Django 1.3 and 1.4. At this point in time:"
msgstr ""

# 99ba85668dce4662bf30d5e792fb106c
#: ../../internals/release-process.txt:130
msgid ""
"Features will be added to development trunk, to be released as Django 1.4."
msgstr ""

# fccaf33302eb4488a8d50cb4800c7961
#: ../../internals/release-process.txt:132
msgid ""
"Critical bug fixes will be applied to a ``1.3.X`` branch, and released as "
"1.3.1, 1.3.2, etc."
msgstr ""

# 6134bde17f3749d491a7c5b6c9a71e31
#: ../../internals/release-process.txt:135
msgid ""
"Security fixes will be applied to trunk, a ``1.3.X`` branch and a ``1.2.X`` "
"branch. They will trigger the release of ``1.3.1``, ``1.2.1``, etc."
msgstr ""

# c81b843aad9a4cfe878fc9d1def4edce
#: ../../internals/release-process.txt:139
msgid ""
"Documentation fixes will be applied to trunk, and, if easily backported, to "
"the ``1.3.X`` branch."
msgstr ""

# 6ccd564bbf5e4f4bb9cf4eb188944e4b
#: ../../internals/release-process.txt:145
msgid "Release process"
msgstr ""

# d63635c785c943c08a05f35eeda2e547
#: ../../internals/release-process.txt:147
msgid ""
"Django uses a time-based release schedule, with minor (i.e. 1.1, 1.2, etc.) "
"releases every nine months, or more, depending on features."
msgstr ""

# 0b1107b647fd4ebbaac1641fa2b359b9
#: ../../internals/release-process.txt:150
msgid ""
"After each release, and after a suitable cooling-off period of a few weeks, "
"the core development team will examine the landscape and announce a timeline"
" for the next release. Most releases will be scheduled in the 6-9 month "
"range, but if we have bigger features to development we might schedule a "
"longer period to allow for more ambitious work."
msgstr ""

# b81cac9e6041419f931d14d21f734497
#: ../../internals/release-process.txt:157
msgid "Release cycle"
msgstr ""

# f68a2a22d92d42b899efd4595af7d145
#: ../../internals/release-process.txt:159
msgid ""
"Each release cycle will be split into three periods, each lasting roughly "
"one-third of the cycle:"
msgstr ""

# 09157aa5d259454796ec05a19e20b1b0
#: ../../internals/release-process.txt:163
msgid "Phase one: feature proposal"
msgstr ""

# 174c547a02104187b77bdf0967ad8045
#: ../../internals/release-process.txt:165
msgid ""
"The first phase of the release process will be devoted to figuring out what "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

# cde8080f9efb4b7a80a0771392e4d1fa
#: ../../internals/release-process.txt:169
msgid ""
"At the end of part one, the core developers will propose a feature list for "
"the upcoming release. This will be broken into:"
msgstr ""

# d065e461174b47488bef8efe150c542e
#: ../../internals/release-process.txt:172
msgid ""
"\"Must-have\": critical features that will delay the release if not finished"
msgstr ""

# 7a7d697428da4c66a94b8e59f8b27ae8
#: ../../internals/release-process.txt:173
msgid ""
"\"Maybe\" features: that will be pushed to the next release if not finished"
msgstr ""

# 7c044cc6fcf242109aeeb06358ebad04
#: ../../internals/release-process.txt:174
msgid "\"Not going to happen\": features explicitly deferred to a later release."
msgstr ""

# 2135cd7ba03940198dc5f78f4c4730bc
#: ../../internals/release-process.txt:176
msgid ""
"Anything that hasn't got at least some work done by the end of the first "
"third isn't eligible for the next release; a design alone isn't sufficient."
msgstr ""

# e748550f2e2448c7851e30711023557d
#: ../../internals/release-process.txt:180
msgid "Phase two: development"
msgstr ""

# f1281bfa855e4b9c92ba4b27affac707
#: ../../internals/release-process.txt:182
msgid ""
"The second third of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

# 7e9d579edd224e57b5324122c0e9053f
#: ../../internals/release-process.txt:186
msgid ""
"Longer release schedules will likely spend more than a third of the time in "
"this phase."
msgstr ""

# c834bb8c72a349c788509bc8a74385d0
#: ../../internals/release-process.txt:189
msgid ""
"At the end of phase two, any unfinished \"maybe\" features will be postponed"
" until the next release. Though it shouldn't happen, any \"must-have\" "
"features will extend phase two, and thus postpone the final release."
msgstr ""

# eb689ba934b042e7b3a252ef85af45ac
#: ../../internals/release-process.txt:193
msgid "Phase two will culminate with an alpha release."
msgstr ""

# 53396368e509474394582ba225472b88
#: ../../internals/release-process.txt:196
msgid "Phase three: bugfixes"
msgstr ""

# 1fc3fb88238047378c1b79e144bd16c3
#: ../../internals/release-process.txt:198
msgid ""
"The last third of a release is spent fixing bugs -- no new features will be "
"accepted during this time. We'll release a beta release about halfway "
"through, and an rc complete with string freeze two weeks before the end of "
"the schedule."
msgstr ""

# 890e1ad029254efcb629dd532b0cb387
#: ../../internals/release-process.txt:203
msgid "Bug-fix releases"
msgstr ""

# 82766b4b0c894a17ad4fe214f1d7b670
#: ../../internals/release-process.txt:205
msgid ""
"After a minor release (e.g. 1.1), the previous release will go into bugfix "
"mode."
msgstr ""

# 98cfb74fbebf4094b9e17c787f398ebc
#: ../../internals/release-process.txt:208
msgid ""
"A branch will be created of the form ``branches/releases/1.0.X`` to track "
"bugfixes to the previous release. Critical bugs fixed on trunk must *also* "
"be fixed on the bugfix branch; this means that commits need to cleanly "
"separate bug fixes from feature additions. The developer who commits a fix "
"to trunk will be responsible for also applying the fix to the current bugfix"
" branch.  Each bugfix branch will have a maintainer who will work with the "
"committers to keep them honest on backporting bug fixes."
msgstr ""

# bead4619c4114ca693710cd6600b41f0
#: ../../internals/release-process.txt:217
msgid "How this all fits together"
msgstr ""

# 0bad7bf3356c4837af80d47fdc8e2f12
#: ../../internals/release-process.txt:219
msgid ""
"Let's look at a hypothetical example for how this all first together. "
"Imagine, if you will, a point about halfway between 1.1 and 1.2. At this "
"point, development will be happening in a bunch of places:"
msgstr ""

# 99fe0edcc6b54cffa2274853dd416223
#: ../../internals/release-process.txt:223
msgid ""
"On trunk, development towards 1.2 proceeds with small additions, bugs fixes,"
" etc. being checked in daily."
msgstr ""

# e09883cabfa34cb29600c3917caec671
#: ../../internals/release-process.txt:226
msgid ""
"On the branch \"branches/releases/1.1.X\", fixes for critical bugs found in "
"the 1.1 release are checked in as needed. At some point, this branch will be"
" released as \"1.1.1\", \"1.1.2\", etc."
msgstr ""

# 4866aa6180db4948a9068884505d896a
#: ../../internals/release-process.txt:230
msgid ""
"On the branch \"branches/releases/1.0.X\", security fixes are made if needed"
" and released as \"1.0.2\", \"1.0.3\", etc."
msgstr ""

# f19dd4a9244e492b9b5bf6d8fb5de119
#: ../../internals/release-process.txt:233
msgid ""
"On feature branches, development of major features is done. These branches "
"will be merged into trunk before the end of phase two."
msgstr ""

# 2e015ffe33994185820256ce57cc58c6
#: ../../internals/security.txt:3
msgid "Django's security policies"
msgstr ""

# df83fb91e1ff49df9ce6ae7b9a2de684
#: ../../internals/security.txt:5
msgid ""
"Django's development team is strongly committed to responsible reporting and"
" disclosure of security-related issues. As such, we've adopted and follow a "
"set of policies which conform to that ideal and are geared toward allowing "
"us to deliver timely security updates to the official distribution of "
"Django, as well as to third-party distributions."
msgstr ""

# d5e1c3d6fba04c639f6400eec0eb7454
#: ../../internals/security.txt:15
msgid "Reporting security issues"
msgstr ""

# 0072c60a29e5429ab6a28d8ea2b1419c
#: ../../internals/security.txt:17
msgid ""
"**Short version: please report security issues by emailing "
"security@djangoproject.com**."
msgstr ""

# 0fdd9bdf7eb54ab6b22478dcc2c348e3
#: ../../internals/security.txt:20
msgid ""
"Most normal bugs in Django are reported to `our public Trac instance`_, but "
"due to the sensitive nature of security issues, we ask that they *not* be "
"publicly reported in this fashion."
msgstr ""

# 22b3c1829b494287b569b69f54aae420
#: ../../internals/security.txt:24
msgid ""
"Instead, if you believe you've found something in Django which has security "
"implications, please send a description of the issue via email to "
"``security@djangoproject.com``. Mail sent to that address reaches a subset "
"of the core development team, who can forward security issues into the "
"private committers' mailing list for broader discussion if needed."
msgstr ""

# 3ce9b4739b414e2a9da3e92591b48268
#: ../../internals/security.txt:31
msgid ""
"You can send encrypted email to this address; the public key ID for "
"``security@djangoproject.com`` is ``0xfcb84b8d1d17f80b``, and this public "
"key is available from most commonly-used keyservers."
msgstr ""

# f4e843e4b3be4ddb8898f70437f924f7
#: ../../internals/security.txt:35
msgid ""
"Once you've submitted an issue via email, you should receive an "
"acknowledgment from a member of the Django development team within 48 hours,"
" and depending on the action to be taken, you may receive further followup "
"emails."
msgstr ""

# e20e43e8168d45ceb795d128e333e651
#: ../../internals/security.txt:47
msgid ""
"At any given time, the Django team provides official security support for "
"several versions of Django:"
msgstr ""

# 7a9a0395156c400db0d902ed4eb8fe89
#: ../../internals/security.txt:50
msgid ""
"The `master development branch`_, hosted on GitHub, which will become the "
"next release of Django, receives security support."
msgstr ""

# 1cdf2f64cc254e91a7d4deff55432d6d
#: ../../internals/security.txt:53
msgid ""
"The two most recent Django release series receive security support. For "
"example, during the development cycle leading to the release of Django 1.5, "
"support will be provided for Django 1.4 and Django 1.3. Upon the release of "
"Django 1.5, Django 1.3's security support will end."
msgstr ""

# 9e097761e93f49819b1724be94a6fbea
#: ../../internals/security.txt:59
msgid ""
"When new releases are issued for security reasons, the accompanying notice "
"will include a list of affected versions. This list is comprised solely of "
"*supported* versions of Django: older versions may also be affected, but we "
"do not investigate to determine that, and will not issue patches or new "
"releases for those versions."
msgstr ""

# da9d60937f324b08bb755458b04ed65f
#: ../../internals/security.txt:70
msgid "How Django discloses security issues"
msgstr ""

# 08660fd4732241e5b7868823df28064f
#: ../../internals/security.txt:72
msgid ""
"Our process for taking a security issue from private discussion to public "
"disclosure involves multiple steps."
msgstr ""

# f7cee5a12a4a4da6abfd2645ca64918a
#: ../../internals/security.txt:75
msgid ""
"Approximately one week before full public disclosure, we will send advance "
"notification of the issue to a list of people and organizations, primarily "
"composed of operating-system vendors and other distributors of Django. This "
"notification will consist of an email message, signed with the Django "
"release key, containing:"
msgstr ""

# 96f55d21a8584f0d9ea752b3d78bd738
#: ../../internals/security.txt:81
msgid "A full description of the issue and the affected versions of Django."
msgstr ""

# 30e9e41eb910439280b491ce0ef04d7a
#: ../../internals/security.txt:83
msgid "The steps we will be taking to remedy the issue."
msgstr ""

# 4e540fabf48f4e1b972fd9f2b7d17886
#: ../../internals/security.txt:85
msgid "The patch(es), if any, that will be applied to Django."
msgstr ""

# fd33fe4284d549f088946dacbc5131c6
#: ../../internals/security.txt:87
msgid ""
"The date on which the Django team will apply these patches, issue new "
"releases and publicy disclose the issue."
msgstr ""

# b23466273a40449286fd2cc315b94af7
#: ../../internals/security.txt:90
msgid ""
"Simultaneously, the reporter of the issue will receive notification of the "
"date on which we plan to take the issue public."
msgstr ""

# 06666880ba5149489966bd43dc07aa6e
#: ../../internals/security.txt:93
msgid "On the day of disclosure, we will take the following steps:"
msgstr ""

# b213b30f0d674f6c8ad45670670170c2
#: ../../internals/security.txt:95
msgid ""
"Apply the relevant patch(es) to Django's codebase. The commit messages for "
"these patches will indicate that they are for security issues, but will not "
"describe the issue in any detail; instead, they will warn of upcoming "
"disclosure."
msgstr ""

# 187211f51d7d45649f2d53947d617d50
#: ../../internals/security.txt:100
msgid ""
"Issue the relevant release(s), by placing new packages on `the Python "
"Package Index`_ and on the Django website, and tagging the new release(s) in"
" Django's git repository."
msgstr ""

# 4656e597a6a942608d27ac7ac1c98126
#: ../../internals/security.txt:104
msgid ""
"Post a public entry on `the official Django development blog`_, describing "
"the issue and its resolution in detail, pointing to the relevant patches and"
" new releases, and crediting the reporter of the issue (if the reporter "
"wishes to be publicly identified)."
msgstr ""

# a6a0b489143d4bbf8dfc687e2b7253df
#: ../../internals/security.txt:112
msgid ""
"If a reported issue is believed to be particularly time-sensitive -- due to "
"a known exploit in the wild, for example -- the time between advance "
"notification and public disclosure may be shortened considerably."
msgstr ""

# 7ca3589a35e24d8594cbee0d6a5992b9
#: ../../internals/security.txt:117
msgid ""
"Additionally, if we have reason to believe that an issue reported to us "
"affects other frameworks or tools in the Python/web ecosystem, we may "
"privately contact and discuss those issues with the appropriate maintainers,"
" and coordinate our own disclosure and resolution with theirs."
msgstr ""

# b9d4dd960d09465b9c8c5deb7fa341c9
#: ../../internals/security.txt:126
msgid "Who receives advance notification"
msgstr ""

# ac3158efcaeb434f9d6a0ab7b790ec42
#: ../../internals/security.txt:128
msgid ""
"The full list of people and organizations who receive advance notification "
"of security issues is not and will not be made public."
msgstr ""

# 7484ca1a54fc4baa9416f638dd6205a0
#: ../../internals/security.txt:131
msgid ""
"We also aim to keep this list as small as effectively possible, in order to "
"better manage the flow of confidential information prior to disclosure. As "
"such, our notification list is *not* simply a list of users of Django, and "
"merely being a user of Django is not sufficient reason to be placed on the "
"notification list."
msgstr ""

# 4dfd90bd806543b69a119a70d276a6af
#: ../../internals/security.txt:137
msgid ""
"In broad terms, recipients of security notifications fall into three groups:"
msgstr ""

# 92ad6ace42ef47e6abc7c107f48d4dfb
#: ../../internals/security.txt:140
msgid ""
"Operating-system vendors and other distributors of Django who provide a "
"suitably-generic (i.e., *not* an individual's personal email address) "
"contact address for reporting issues with their Django package, or for "
"general security reporting. In either case, such addresses **must not** "
"forward to public mailing lists or bug trackers. Addresses which forward to "
"the private email of an individual maintainer or security-response contact "
"are acceptable, although private security trackers or security-response "
"groups are strongly preferred."
msgstr ""

# c16527cda92f461a800692919f3a2719
#: ../../internals/security.txt:150
msgid ""
"On a case-by-case basis, individual package maintainers who have "
"demonstrated a commitment to responding to and responsibly acting on these "
"notifications."
msgstr ""

# a1a8c4a21f8c40e8aad8f7a19d8bf836
#: ../../internals/security.txt:154
msgid ""
"On a case-by-case basis, other entities who, in the judgment of the Django "
"development team, need to be made aware of a pending security issue. "
"Typically, membership in this group will consist of some of the largest "
"and/or most likely to be severely impacted known users or distributors of "
"Django, and will require a demonstrated ability to responsibly receive, keep"
" confidential and act on these notifications."
msgstr ""

# a425a1a9b3cd43f0a15391cd39bfddbb
#: ../../internals/security.txt:162
msgid ""
"Additionally, a maximum of six days prior to disclosure, notification will "
"be sent to the ``distros@vs.openwall.org`` mailing list, whose membership "
"includes representatives of most major open-source operating system vendors."
msgstr ""

# 93650c0012914e7b885ff2d8a02353c1
#: ../../internals/security.txt:168
msgid "Requesting notifications"
msgstr ""

# 886be5c970d64dbb95df4610754b56d7
#: ../../internals/security.txt:170
msgid ""
"If you believe that you, or an organization you are authorized to represent,"
" fall into one of the groups listed above, you can ask to be added to "
"Django's notification list by emailing ``security@djangoproject.com``. "
"Please use the subject line \"Security notification request\"."
msgstr ""

# 7b138bea961d4e81a6d6acd8e5932d0b
#: ../../internals/security.txt:176
msgid "Your request **must** include the following information:"
msgstr ""

# 85a3b1e0c2f342098651b925ec5ccd47
#: ../../internals/security.txt:178
msgid ""
"Your full, real name and the name of the organization you represent, if "
"applicable, as well as your role within that organization."
msgstr ""

# feea8a7e86584846936e7d3fd6fbec26
#: ../../internals/security.txt:181
msgid ""
"A detailed explanation of how you or your organization fit at least one set "
"of criteria listed above."
msgstr ""

# 988a923a951f48db94e577afa706e1b9
#: ../../internals/security.txt:184
msgid ""
"A detailed explanation of why you are requesting security notifications. "
"Again, please keep in mind that this is *not* simply a list for users of "
"Django, and the overwhelming majority of users of Django should not request "
"notifications and will not be added to our notification list if they do."
msgstr ""

# b5de775c241d4cba9b5fce4cfed90057
#: ../../internals/security.txt:190
msgid ""
"The email address you would like to have added to our notification list."
msgstr ""

# 448a79a1f24a4ea4b9b5f4b899b5cefe
#: ../../internals/security.txt:193
msgid ""
"An explanation of who will be receiving/reviewing mail sent to that address,"
" as well as information regarding any automated actions that will be taken "
"(i.e., filing of a confidential issue in a bug tracker)."
msgstr ""

# f3e32b2c10734ba9b1165d4ff208ee92
#: ../../internals/security.txt:198
msgid ""
"For individuals, the ID of a public key associated with your address which "
"can be used to verify email received from you and encrypt email sent to you,"
" as needed."
msgstr ""

# 3385d300fe43413495acd54559c10483
#: ../../internals/security.txt:202
msgid ""
"Once submitted, your request will be considered by the Django development "
"team; you will receive a reply notifying you of the result of your request "
"within 30 days."
msgstr ""

# 26c34fd412414ae5b02729ec1b6b441b
#: ../../internals/security.txt:206
msgid ""
"Please also bear in mind that for any individual or organization, receiving "
"security notifications is a privilege granted at the sole discretion of the "
"Django development team, and that this privilege can be revoked at any time,"
" with or without explanation."
msgstr ""

# 5d6084f262d94b4384c77cbe031cf736
#: ../../internals/security.txt:211
msgid ""
"If you are added to the notification list, security-related emails will be "
"sent to you by Django's release manager, and all notification emails will be"
" signed with the same key used to sign Django releases; that key has the ID "
"``0x3684C0C08C8B2AE1``, and is available from most commonly-used keyservers."
msgstr ""
